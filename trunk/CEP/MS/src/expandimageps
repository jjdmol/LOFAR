#!/usr/bin/env python

import lofar.mstools as lmt
import sys

if __name__ == "__main__":
    # First get nsubbands and/or nodeindex
    nsubbands = 10
    nodeindex = 0
    starg = 1
    while True:
        if len(sys.argv)-starg < 2:
            break
        if sys.argv[starg] == '-n':
            nsubbands = int(sys.argv[starg+1])
            starg += 2
        elif sys.argv[starg] == '-i':
            nodeindex = int(sys.argv[starg+1])
            starg += 2
        else:
            break
    # Check if index is not too high
    if nodeindex >= nsubbands:
        raise ValueError('Error: nodeindex ' + str(nodeindex) +
                         ' outside range of nsubbands ' + str(nsubbands))
    # Check if sufficient arguments are given
    if len(sys.argv)-starg < 2:
        print ''
        print 'Insufficient arguments; run as:'
        print '    expandimageps -n nsubbands -i nodeindex'
        print '                  parsetin parsetout [mspatterns [imageout]]'
        print '        nsubbands    number of subbands in a single image'
        print '                     default = 10'
        print '        nodeindex    subband whose node to use to run the imaging pipeline on'
        print '                     default = 0'
        print ''
        print ' mspatterns is a list of one or more names separated by commas'
        print ' If given, it must be the name(s) of directories containing'
        print ' the MeasurementSets and/or glob-patterns matching the'
        print ' MeasurementSets to process. If a directory name is given,'
        print ' *.MS will be added to make it a glob pattern.'
        print ' If no or an empty mspattern is given, it means that the msin'
        print ' parameter in the input parset defines the glob-patterns for'
        print ' the MeasurementSets to process.'
        print ''
        print ' If an outname is given, it must define the names of the'
        print ' output images. It can contain the placeholders'
        print ' <DN>, <BN>, <BN.>, <BN_.>, <.BN>, and/or <SEQ>.'
        print ' If no or an empty outname is given, the imgout parameter in the'
        print ' input parset defines the output names'
        print ''
        print 'For example:'
        print '  expandimageps in.parset'
        print '                out.parset'
        print '                /data/scratch/pipeline/L45318'
        print '                /data/scratch/pipeline/L45318/<BN_.>_img.img'
        print ''
        if len(sys.argv) == 2  and  sys.argv[1] == '-h':
            help(lmt.expandps)
        sys.exit(1)
    # See if the MS pattern is given.
    msname = 'msin'
    if len(sys.argv)-starg > 2  and  len(sys.argv[starg+2]) > 0:
        # Split into parts.
        names = sys.argv[starg+2].split(',')
        # Add *.MS if no glob pattern given.
        msnames = [lmt.addfileglob(name, '*.MS') for name in names]
    # See if the MS output name is given.
    outname = 'imgout'
    if len(sys.argv)-starg > 3  and  len(sys.argv[starg+3]) > 0:
        outname = [sys.argv[starg+3]]
    lmt.expandps (sys.argv[starg], sys.argv[starg+1],
                  {'in': [[msnames, 'Input_Correlated']],
                   'out': [[outname, 'Output_SkyImage']]},
                   nsubbands, nodeindex)
