      #ifndef TID_MeqNodes_h
      #define TID_MeqNodes_h 1

      // This file is generated automatically -- do not edit
      // Generated by /home/twillis/LOFAR/autoconf_share/../DMI/aid/build_aid_maps.pl
      #include "DMI/TypeId.h"

      // should be called somewhere in order to link in the registry
      int aidRegistry_MeqNodes ();

#ifndef _defined_id_TpMeqAbs
#define _defined_id_TpMeqAbs 1
const TypeId TpMeqAbs(-1524);                     // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Abs.h:29
const int TpMeqAbs_int = -1524;
namespace Meq { class Abs; };
            template<>
            class DMIBaseTypeTraits<Meq::Abs> : public TypeTraits<Meq::Abs>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqAbs_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Abs & ContainerReturnType;
              typedef const Meq::Abs & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqAcos
#define _defined_id_TpMeqAcos 1
const TypeId TpMeqAcos(-1506);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/ACos.h:29
const int TpMeqAcos_int = -1506;
namespace Meq { class Acos; };
            template<>
            class DMIBaseTypeTraits<Meq::Acos> : public TypeTraits<Meq::Acos>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqAcos_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Acos & ContainerReturnType;
              typedef const Meq::Acos & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqAdd
#define _defined_id_TpMeqAdd 1
const TypeId TpMeqAdd(-1236);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Add.h:29
const int TpMeqAdd_int = -1236;
namespace Meq { class Add; };
            template<>
            class DMIBaseTypeTraits<Meq::Add> : public TypeTraits<Meq::Add>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqAdd_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Add & ContainerReturnType;
              typedef const Meq::Add & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqArg
#define _defined_id_TpMeqArg 1
const TypeId TpMeqArg(-1526);                     // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Arg.h:29
const int TpMeqArg_int = -1526;
namespace Meq { class Arg; };
            template<>
            class DMIBaseTypeTraits<Meq::Arg> : public TypeTraits<Meq::Arg>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqArg_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Arg & ContainerReturnType;
              typedef const Meq::Arg & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqAsin
#define _defined_id_TpMeqAsin 1
const TypeId TpMeqAsin(-1505);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/ASin.h:29
const int TpMeqAsin_int = -1505;
namespace Meq { class Asin; };
            template<>
            class DMIBaseTypeTraits<Meq::Asin> : public TypeTraits<Meq::Asin>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqAsin_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Asin & ContainerReturnType;
              typedef const Meq::Asin & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqAtan
#define _defined_id_TpMeqAtan 1
const TypeId TpMeqAtan(-1512);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/ATan.h:29
const int TpMeqAtan_int = -1512;
namespace Meq { class Atan; };
            template<>
            class DMIBaseTypeTraits<Meq::Atan> : public TypeTraits<Meq::Atan>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqAtan_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Atan & ContainerReturnType;
              typedef const Meq::Atan & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqCeil
#define _defined_id_TpMeqCeil 1
const TypeId TpMeqCeil(-1520);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Ceil.h:30
const int TpMeqCeil_int = -1520;
namespace Meq { class Ceil; };
            template<>
            class DMIBaseTypeTraits<Meq::Ceil> : public TypeTraits<Meq::Ceil>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqCeil_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Ceil & ContainerReturnType;
              typedef const Meq::Ceil & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqComposer
#define _defined_id_TpMeqComposer 1
const TypeId TpMeqComposer(-1241);                // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Composer.h:29
const int TpMeqComposer_int = -1241;
namespace Meq { class Composer; };
            template<>
            class DMIBaseTypeTraits<Meq::Composer> : public TypeTraits<Meq::Composer>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqComposer_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Composer & ContainerReturnType;
              typedef const Meq::Composer & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqCondeq
#define _defined_id_TpMeqCondeq 1
const TypeId TpMeqCondeq(-1365);                  // from /home/gvd/sim/LOFAR/CEP/CPA/PSS4/MEQ/src/Condeq.h:29
const int TpMeqCondeq_int = -1365;
namespace Meq { class Condeq; };
            template<>
            class DMIBaseTypeTraits<Meq::Condeq> : public TypeTraits<Meq::Condeq>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqCondeq_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Condeq & ContainerReturnType;
              typedef const Meq::Condeq & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqConj
#define _defined_id_TpMeqConj 1
const TypeId TpMeqConj(-1212);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Conj.h:29
const int TpMeqConj_int = -1212;
namespace Meq { class Conj; };
            template<>
            class DMIBaseTypeTraits<Meq::Conj> : public TypeTraits<Meq::Conj>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqConj_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Conj & ContainerReturnType;
              typedef const Meq::Conj & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqConstant
#define _defined_id_TpMeqConstant 1
const TypeId TpMeqConstant(-1387);                // from /home/gvd/sim/LOFAR/CEP/CPA/PSS4/MEQ/src/Constant.h:32
const int TpMeqConstant_int = -1387;
namespace Meq { class Constant; };
            template<>
            class DMIBaseTypeTraits<Meq::Constant> : public TypeTraits<Meq::Constant>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqConstant_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Constant & ContainerReturnType;
              typedef const Meq::Constant & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqCos
#define _defined_id_TpMeqCos 1
const TypeId TpMeqCos(-1243);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Cos.h:29
const int TpMeqCos_int = -1243;
namespace Meq { class Cos; };
            template<>
            class DMIBaseTypeTraits<Meq::Cos> : public TypeTraits<Meq::Cos>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqCos_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Cos & ContainerReturnType;
              typedef const Meq::Cos & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqCosh
#define _defined_id_TpMeqCosh 1
const TypeId TpMeqCosh(-1510);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Cosh.h:29
const int TpMeqCosh_int = -1510;
namespace Meq { class Cosh; };
            template<>
            class DMIBaseTypeTraits<Meq::Cosh> : public TypeTraits<Meq::Cosh>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqCosh_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Cosh & ContainerReturnType;
              typedef const Meq::Cosh & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqDataCollect
#define _defined_id_TpMeqDataCollect 1
const TypeId TpMeqDataCollect(-1550);             // from /home/oms/LOFAR/CEP/CPA/PSS4/MeqNodes/src/DataCollect.h:29
const int TpMeqDataCollect_int = -1550;
namespace Meq { class DataCollect; };
            template<>
            class DMIBaseTypeTraits<Meq::DataCollect> : public TypeTraits<Meq::DataCollect>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqDataCollect_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::DataCollect & ContainerReturnType;
              typedef const Meq::DataCollect & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqDataConcat
#define _defined_id_TpMeqDataConcat 1
const TypeId TpMeqDataConcat(-1553);              // from /home/oms/LOFAR/CEP/CPA/PSS4/MeqNodes/src/DataConcat.h:29
const int TpMeqDataConcat_int = -1553;
namespace Meq { class DataConcat; };
            template<>
            class DMIBaseTypeTraits<Meq::DataConcat> : public TypeTraits<Meq::DataConcat>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqDataConcat_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::DataConcat & ContainerReturnType;
              typedef const Meq::DataConcat & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqDivide
#define _defined_id_TpMeqDivide 1
const TypeId TpMeqDivide(-1223);                  // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Divide.h:29
const int TpMeqDivide_int = -1223;
namespace Meq { class Divide; };
            template<>
            class DMIBaseTypeTraits<Meq::Divide> : public TypeTraits<Meq::Divide>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqDivide_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Divide & ContainerReturnType;
              typedef const Meq::Divide & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqExp
#define _defined_id_TpMeqExp 1
const TypeId TpMeqExp(-1240);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Exp.h:29
const int TpMeqExp_int = -1240;
namespace Meq { class Exp; };
            template<>
            class DMIBaseTypeTraits<Meq::Exp> : public TypeTraits<Meq::Exp>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqExp_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Exp & ContainerReturnType;
              typedef const Meq::Exp & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqFabs
#define _defined_id_TpMeqFabs 1
const TypeId TpMeqFabs(-1525);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Fabs.h:29
const int TpMeqFabs_int = -1525;
namespace Meq { class Fabs; };
            template<>
            class DMIBaseTypeTraits<Meq::Fabs> : public TypeTraits<Meq::Fabs>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqFabs_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Fabs & ContainerReturnType;
              typedef const Meq::Fabs & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqFloor
#define _defined_id_TpMeqFloor 1
const TypeId TpMeqFloor(-1521);                   // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Floor.h:30
const int TpMeqFloor_int = -1521;
namespace Meq { class Floor; };
            template<>
            class DMIBaseTypeTraits<Meq::Floor> : public TypeTraits<Meq::Floor>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqFloor_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Floor & ContainerReturnType;
              typedef const Meq::Floor & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqFreq
#define _defined_id_TpMeqFreq 1
const TypeId TpMeqFreq(-1219);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Freq.h:29
const int TpMeqFreq_int = -1219;
namespace Meq { class Freq; };
            template<>
            class DMIBaseTypeTraits<Meq::Freq> : public TypeTraits<Meq::Freq>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqFreq_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Freq & ContainerReturnType;
              typedef const Meq::Freq & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqImag
#define _defined_id_TpMeqImag 1
const TypeId TpMeqImag(-1523);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Imag.h:29
const int TpMeqImag_int = -1523;
namespace Meq { class Imag; };
            template<>
            class DMIBaseTypeTraits<Meq::Imag> : public TypeTraits<Meq::Imag>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqImag_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Imag & ContainerReturnType;
              typedef const Meq::Imag & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqLMN
#define _defined_id_TpMeqLMN 1
const TypeId TpMeqLMN(-1467);                     // from /home/diepen/sim/LOFAR/CEP/CPA/PSS4/MEQ/src/LMN.h:29
const int TpMeqLMN_int = -1467;
namespace Meq { class LMN; };
            template<>
            class DMIBaseTypeTraits<Meq::LMN> : public TypeTraits<Meq::LMN>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqLMN_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::LMN & ContainerReturnType;
              typedef const Meq::LMN & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqLog
#define _defined_id_TpMeqLog 1
const TypeId TpMeqLog(-1507);                     // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Log.h:29
const int TpMeqLog_int = -1507;
namespace Meq { class Log; };
            template<>
            class DMIBaseTypeTraits<Meq::Log> : public TypeTraits<Meq::Log>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqLog_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Log & ContainerReturnType;
              typedef const Meq::Log & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqMax
#define _defined_id_TpMeqMax 1
const TypeId TpMeqMax(-1530);                     // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Max.h:29
const int TpMeqMax_int = -1530;
namespace Meq { class Max; };
            template<>
            class DMIBaseTypeTraits<Meq::Max> : public TypeTraits<Meq::Max>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqMax_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Max & ContainerReturnType;
              typedef const Meq::Max & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqMean
#define _defined_id_TpMeqMean 1
const TypeId TpMeqMean(-1528);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Mean.h:29
const int TpMeqMean_int = -1528;
namespace Meq { class Mean; };
            template<>
            class DMIBaseTypeTraits<Meq::Mean> : public TypeTraits<Meq::Mean>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqMean_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Mean & ContainerReturnType;
              typedef const Meq::Mean & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqMergeFlags
#define _defined_id_TpMeqMergeFlags 1
const TypeId TpMeqMergeFlags(-1437);              // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/MergeFlags.h:30
const int TpMeqMergeFlags_int = -1437;
namespace Meq { class MergeFlags; };
            template<>
            class DMIBaseTypeTraits<Meq::MergeFlags> : public TypeTraits<Meq::MergeFlags>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqMergeFlags_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::MergeFlags & ContainerReturnType;
              typedef const Meq::MergeFlags & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqMin
#define _defined_id_TpMeqMin 1
const TypeId TpMeqMin(-1532);                     // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Min.h:29
const int TpMeqMin_int = -1532;
namespace Meq { class Min; };
            template<>
            class DMIBaseTypeTraits<Meq::Min> : public TypeTraits<Meq::Min>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqMin_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Min & ContainerReturnType;
              typedef const Meq::Min & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqMultiply
#define _defined_id_TpMeqMultiply 1
const TypeId TpMeqMultiply(-1227);                // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Multiply.h:29
const int TpMeqMultiply_int = -1227;
namespace Meq { class Multiply; };
            template<>
            class DMIBaseTypeTraits<Meq::Multiply> : public TypeTraits<Meq::Multiply>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqMultiply_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Multiply & ContainerReturnType;
              typedef const Meq::Multiply & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqNorm
#define _defined_id_TpMeqNorm 1
const TypeId TpMeqNorm(-1527);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Norm.h:29
const int TpMeqNorm_int = -1527;
namespace Meq { class Norm; };
            template<>
            class DMIBaseTypeTraits<Meq::Norm> : public TypeTraits<Meq::Norm>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqNorm_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Norm & ContainerReturnType;
              typedef const Meq::Norm & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqParm
#define _defined_id_TpMeqParm 1
const TypeId TpMeqParm(-1244);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Parm.h:35
const int TpMeqParm_int = -1244;
namespace Meq { class Parm; };
            template<>
            class DMIBaseTypeTraits<Meq::Parm> : public TypeTraits<Meq::Parm>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqParm_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Parm & ContainerReturnType;
              typedef const Meq::Parm & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPointSourceDFT
#define _defined_id_TpMeqPointSourceDFT 1
const TypeId TpMeqPointSourceDFT(-1469);          // from /home/diepen/sim/LOFAR/CEP/CPA/PSS4/MEQ/src/PointSourceDFT.h:30
const int TpMeqPointSourceDFT_int = -1469;
namespace Meq { class PointSourceDFT; };
            template<>
            class DMIBaseTypeTraits<Meq::PointSourceDFT> : public TypeTraits<Meq::PointSourceDFT>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPointSourceDFT_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::PointSourceDFT & ContainerReturnType;
              typedef const Meq::PointSourceDFT & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPolar
#define _defined_id_TpMeqPolar 1
const TypeId TpMeqPolar(-1503);                   // from /home/oms/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Polar.h:30
const int TpMeqPolar_int = -1503;
namespace Meq { class Polar; };
            template<>
            class DMIBaseTypeTraits<Meq::Polar> : public TypeTraits<Meq::Polar>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPolar_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Polar & ContainerReturnType;
              typedef const Meq::Polar & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow
#define _defined_id_TpMeqPow 1
const TypeId TpMeqPow(-1214);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Pow.h:29
const int TpMeqPow_int = -1214;
namespace Meq { class Pow; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow> : public TypeTraits<Meq::Pow>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow & ContainerReturnType;
              typedef const Meq::Pow & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow2
#define _defined_id_TpMeqPow2 1
const TypeId TpMeqPow2(-1513);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow2.h:29
const int TpMeqPow2_int = -1513;
namespace Meq { class Pow2; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow2> : public TypeTraits<Meq::Pow2>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow2_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow2 & ContainerReturnType;
              typedef const Meq::Pow2 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow3
#define _defined_id_TpMeqPow3 1
const TypeId TpMeqPow3(-1514);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow3.h:29
const int TpMeqPow3_int = -1514;
namespace Meq { class Pow3; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow3> : public TypeTraits<Meq::Pow3>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow3_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow3 & ContainerReturnType;
              typedef const Meq::Pow3 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow4
#define _defined_id_TpMeqPow4 1
const TypeId TpMeqPow4(-1515);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow4.h:29
const int TpMeqPow4_int = -1515;
namespace Meq { class Pow4; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow4> : public TypeTraits<Meq::Pow4>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow4_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow4 & ContainerReturnType;
              typedef const Meq::Pow4 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow5
#define _defined_id_TpMeqPow5 1
const TypeId TpMeqPow5(-1516);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow5.h:29
const int TpMeqPow5_int = -1516;
namespace Meq { class Pow5; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow5> : public TypeTraits<Meq::Pow5>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow5_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow5 & ContainerReturnType;
              typedef const Meq::Pow5 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow6
#define _defined_id_TpMeqPow6 1
const TypeId TpMeqPow6(-1517);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow6.h:29
const int TpMeqPow6_int = -1517;
namespace Meq { class Pow6; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow6> : public TypeTraits<Meq::Pow6>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow6_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow6 & ContainerReturnType;
              typedef const Meq::Pow6 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow7
#define _defined_id_TpMeqPow7 1
const TypeId TpMeqPow7(-1518);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow7.h:29
const int TpMeqPow7_int = -1518;
namespace Meq { class Pow7; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow7> : public TypeTraits<Meq::Pow7>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow7_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow7 & ContainerReturnType;
              typedef const Meq::Pow7 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPow8
#define _defined_id_TpMeqPow8 1
const TypeId TpMeqPow8(-1519);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Pow8.h:29
const int TpMeqPow8_int = -1519;
namespace Meq { class Pow8; };
            template<>
            class DMIBaseTypeTraits<Meq::Pow8> : public TypeTraits<Meq::Pow8>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPow8_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Pow8 & ContainerReturnType;
              typedef const Meq::Pow8 & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqReal
#define _defined_id_TpMeqReal 1
const TypeId TpMeqReal(-1522);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Real.h:29
const int TpMeqReal_int = -1522;
namespace Meq { class Real; };
            template<>
            class DMIBaseTypeTraits<Meq::Real> : public TypeTraits<Meq::Real>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqReal_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Real & ContainerReturnType;
              typedef const Meq::Real & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqReqSeq
#define _defined_id_TpMeqReqSeq 1
const TypeId TpMeqReqSeq(-1478);                  // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/ReqSeq.h:30
const int TpMeqReqSeq_int = -1478;
namespace Meq { class ReqSeq; };
            template<>
            class DMIBaseTypeTraits<Meq::ReqSeq> : public TypeTraits<Meq::ReqSeq>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqReqSeq_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::ReqSeq & ContainerReturnType;
              typedef const Meq::ReqSeq & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqRms
#define _defined_id_TpMeqRms 1
const TypeId TpMeqRms(-1571);                     // from /home/twillis/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Rms.h:29
const int TpMeqRms_int = -1571;
namespace Meq { class Rms; };
            template<>
            class DMIBaseTypeTraits<Meq::Rms> : public TypeTraits<Meq::Rms>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqRms_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Rms & ContainerReturnType;
              typedef const Meq::Rms & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqRmsrms
#define _defined_id_TpMeqRmsrms 1
const TypeId TpMeqRmsrms(-1572);                  // from /home/twillis/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Rmsrms.h:29
const int TpMeqRmsrms_int = -1572;
namespace Meq { class Rmsrms; };
            template<>
            class DMIBaseTypeTraits<Meq::Rmsrms> : public TypeTraits<Meq::Rmsrms>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqRmsrms_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Rmsrms & ContainerReturnType;
              typedef const Meq::Rmsrms & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSelector
#define _defined_id_TpMeqSelector 1
const TypeId TpMeqSelector(-1255);                // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Selector.h:29
const int TpMeqSelector_int = -1255;
namespace Meq { class Selector; };
            template<>
            class DMIBaseTypeTraits<Meq::Selector> : public TypeTraits<Meq::Selector>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSelector_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Selector & ContainerReturnType;
              typedef const Meq::Selector & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSin
#define _defined_id_TpMeqSin 1
const TypeId TpMeqSin(-1224);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Sin.h:29
const int TpMeqSin_int = -1224;
namespace Meq { class Sin; };
            template<>
            class DMIBaseTypeTraits<Meq::Sin> : public TypeTraits<Meq::Sin>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSin_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Sin & ContainerReturnType;
              typedef const Meq::Sin & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSinh
#define _defined_id_TpMeqSinh 1
const TypeId TpMeqSinh(-1508);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Sinh.h:29
const int TpMeqSinh_int = -1508;
namespace Meq { class Sinh; };
            template<>
            class DMIBaseTypeTraits<Meq::Sinh> : public TypeTraits<Meq::Sinh>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSinh_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Sinh & ContainerReturnType;
              typedef const Meq::Sinh & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSolver
#define _defined_id_TpMeqSolver 1
const TypeId TpMeqSolver(-1367);                  // from /home/gvd/sim/LOFAR/CEP/CPA/PSS4/MEQ/src/Solver.h:31
const int TpMeqSolver_int = -1367;
namespace Meq { class Solver; };
            template<>
            class DMIBaseTypeTraits<Meq::Solver> : public TypeTraits<Meq::Solver>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSolver_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Solver & ContainerReturnType;
              typedef const Meq::Solver & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSqr
#define _defined_id_TpMeqSqr 1
const TypeId TpMeqSqr(-1249);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Sqr.h:29
const int TpMeqSqr_int = -1249;
namespace Meq { class Sqr; };
            template<>
            class DMIBaseTypeTraits<Meq::Sqr> : public TypeTraits<Meq::Sqr>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSqr_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Sqr & ContainerReturnType;
              typedef const Meq::Sqr & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSqrt
#define _defined_id_TpMeqSqrt 1
const TypeId TpMeqSqrt(-1251);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Sqrt.h:29
const int TpMeqSqrt_int = -1251;
namespace Meq { class Sqrt; };
            template<>
            class DMIBaseTypeTraits<Meq::Sqrt> : public TypeTraits<Meq::Sqrt>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSqrt_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Sqrt & ContainerReturnType;
              typedef const Meq::Sqrt & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqStatPointSourceDFT
#define _defined_id_TpMeqStatPointSourceDFT 1
const TypeId TpMeqStatPointSourceDFT(-1468);      // from /home/diepen/sim/LOFAR/CEP/CPA/PSS4/MEQ/src/StatPointSourceDFT.h:30
const int TpMeqStatPointSourceDFT_int = -1468;
namespace Meq { class StatPointSourceDFT; };
            template<>
            class DMIBaseTypeTraits<Meq::StatPointSourceDFT> : public TypeTraits<Meq::StatPointSourceDFT>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqStatPointSourceDFT_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::StatPointSourceDFT & ContainerReturnType;
              typedef const Meq::StatPointSourceDFT & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqStripper
#define _defined_id_TpMeqStripper 1
const TypeId TpMeqStripper(-1547);                // from /home/twillis/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Stripper.h:29
const int TpMeqStripper_int = -1547;
namespace Meq { class Stripper; };
            template<>
            class DMIBaseTypeTraits<Meq::Stripper> : public TypeTraits<Meq::Stripper>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqStripper_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Stripper & ContainerReturnType;
              typedef const Meq::Stripper & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqSubtract
#define _defined_id_TpMeqSubtract 1
const TypeId TpMeqSubtract(-1232);                // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Subtract.h:29
const int TpMeqSubtract_int = -1232;
namespace Meq { class Subtract; };
            template<>
            class DMIBaseTypeTraits<Meq::Subtract> : public TypeTraits<Meq::Subtract>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqSubtract_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Subtract & ContainerReturnType;
              typedef const Meq::Subtract & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqTan
#define _defined_id_TpMeqTan 1
const TypeId TpMeqTan(-1511);                     // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Tan.h:29
const int TpMeqTan_int = -1511;
namespace Meq { class Tan; };
            template<>
            class DMIBaseTypeTraits<Meq::Tan> : public TypeTraits<Meq::Tan>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqTan_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Tan & ContainerReturnType;
              typedef const Meq::Tan & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqTanh
#define _defined_id_TpMeqTanh 1
const TypeId TpMeqTanh(-1509);                    // from /home/assendorp/LOFAR/CEP/CPA/PSS4/MeqNodes/src/Tanh.h:29
const int TpMeqTanh_int = -1509;
namespace Meq { class Tanh; };
            template<>
            class DMIBaseTypeTraits<Meq::Tanh> : public TypeTraits<Meq::Tanh>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqTanh_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Tanh & ContainerReturnType;
              typedef const Meq::Tanh & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqTime
#define _defined_id_TpMeqTime 1
const TypeId TpMeqTime(-1225);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Time.h:29
const int TpMeqTime_int = -1225;
namespace Meq { class Time; };
            template<>
            class DMIBaseTypeTraits<Meq::Time> : public TypeTraits<Meq::Time>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqTime_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Time & ContainerReturnType;
              typedef const Meq::Time & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqToComplex
#define _defined_id_TpMeqToComplex 1
const TypeId TpMeqToComplex(-1217);               // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/ToComplex.h:29
const int TpMeqToComplex_int = -1217;
namespace Meq { class ToComplex; };
            template<>
            class DMIBaseTypeTraits<Meq::ToComplex> : public TypeTraits<Meq::ToComplex>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqToComplex_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::ToComplex & ContainerReturnType;
              typedef const Meq::ToComplex & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqUVW
#define _defined_id_TpMeqUVW 1
const TypeId TpMeqUVW(-1239);                     // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/UVW.h:29
const int TpMeqUVW_int = -1239;
namespace Meq { class UVW; };
            template<>
            class DMIBaseTypeTraits<Meq::UVW> : public TypeTraits<Meq::UVW>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqUVW_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::UVW & ContainerReturnType;
              typedef const Meq::UVW & ContainerParamType;
            };
#endif


#endif
