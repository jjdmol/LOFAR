    // This file is generated automatically -- do not edit
    // Generated by /home/gvd/sim/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
#include "Add.h"
BlockableObject * __construct_MEQAdd (int n) { return n>0 ? new MEQ::Add [n] : new MEQ::Add; }
#include "Cos.h"
BlockableObject * __construct_MEQCos (int n) { return n>0 ? new MEQ::Cos [n] : new MEQ::Cos; }
#include "Node.h"
BlockableObject * __construct_MEQNode (int n) { return n>0 ? new MEQ::Node [n] : new MEQ::Node; }
#include "ParmPolcStored.h"
BlockableObject * __construct_MEQParmPolcStored (int n) { return n>0 ? new MEQ::ParmPolcStored [n] : new MEQ::ParmPolcStored; }
  
    int aidRegistry_MEQ ()
    {
      static int res = 

        AtomicID::registerId(-1422,"MEQAdd")+
        TypeInfoReg::addToRegistry(-1422,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1422,__construct_MEQAdd)+
        AtomicID::registerId(-1144,"Domain")+
        AtomicID::registerId(-1429,"Nfreq")+
        AtomicID::registerId(-1428,"Times")+
        AtomicID::registerId(-1430,"TimeSteps")+
        AtomicID::registerId(-1424,"MEQCos")+
        TypeInfoReg::addToRegistry(-1424,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1424,__construct_MEQCos)+
        AtomicID::registerId(-1419,"Node")+
        AtomicID::registerId(-1427,"Class")+
        AtomicID::registerId(-1163,"Name")+
        AtomicID::registerId(-1052,"State")+
        AtomicID::registerId(-1418,"Child")+
        AtomicID::registerId(-1432,"Children")+
        AtomicID::registerId(-1420,"MEQNode")+
        TypeInfoReg::addToRegistry(-1420,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1420,__construct_MEQNode)+
        AtomicID::registerId(-1431,"Tablename")+
        AtomicID::registerId(-1434,"Default")+
        AtomicID::registerId(-1421,"MEQParmPolcStored")+
        TypeInfoReg::addToRegistry(-1421,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1421,__construct_MEQParmPolcStored)+
        AtomicID::registerId(-1425,"Cells")+
        AtomicID::registerId(-1396,"Values")+
        AtomicID::registerId(-1426,"ParmValues")+
        AtomicID::registerId(-1433,"Spids")+
        AtomicID::registerId(-1423,"Perturbations")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_MEQ = aidRegistry_MEQ();

