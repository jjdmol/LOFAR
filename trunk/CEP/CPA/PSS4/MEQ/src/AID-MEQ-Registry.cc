    // This file is generated automatically -- do not edit
    // Generated by /home/gvd/sim/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
#include "Node.h"
BlockableObject * __construct_MEQNode (int n) { return n>0 ? new MEQ::Node [n] : new MEQ::Node; }
  
    int aidRegistry_MEQ ()
    {
      static int res = 

        AtomicID::registerId(-1144,"Domain")+
        AtomicID::registerId(-1426,"Nfreq")+
        AtomicID::registerId(-1425,"Times")+
        AtomicID::registerId(-1427,"TimeSteps")+
        AtomicID::registerId(-1419,"Node")+
        AtomicID::registerId(-1424,"Class")+
        AtomicID::registerId(-1163,"Name")+
        AtomicID::registerId(-1052,"State")+
        AtomicID::registerId(-1418,"Child")+
        AtomicID::registerId(-1428,"Children")+
        AtomicID::registerId(-1420,"MEQNode")+
        TypeInfoReg::addToRegistry(-1420,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1420,__construct_MEQNode)+
        AtomicID::registerId(-1422,"Cells")+
        AtomicID::registerId(-1396,"Values")+
        AtomicID::registerId(-1423,"ParmValues")+
        AtomicID::registerId(-1429,"Spids")+
        AtomicID::registerId(-1421,"Perturbations")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_MEQ = aidRegistry_MEQ();

