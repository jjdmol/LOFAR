      #ifndef TID_MEQ_h
      #define TID_MEQ_h 1

      // This file is generated automatically -- do not edit
      // Generated by /home/gvd/sim/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
      #include "DMI/TypeId.h"

      // should be called somewhere in order to link in the registry
      int aidRegistry_MEQ ();

#ifndef _defined_id_TpMEQAdd
#define _defined_id_TpMEQAdd 1
const TypeId TpMEQAdd(-1422);                     // from /home/gvd/sim/LOFAR/CEP/CPA/MEQ/src/Add.h:29
const int TpMEQAdd_int = -1422;
namespace MEQ { class Add; };
            template<>
            class DMIBaseTypeTraits<MEQ::Add> : public TypeTraits<MEQ::Add>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMEQAdd_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const MEQ::Add & ContainerReturnType;
              typedef const MEQ::Add & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMEQCos
#define _defined_id_TpMEQCos 1
const TypeId TpMEQCos(-1424);                     // from /home/gvd/sim/LOFAR/CEP/CPA/MEQ/src/Cos.h:29
const int TpMEQCos_int = -1424;
namespace MEQ { class Cos; };
            template<>
            class DMIBaseTypeTraits<MEQ::Cos> : public TypeTraits<MEQ::Cos>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMEQCos_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const MEQ::Cos & ContainerReturnType;
              typedef const MEQ::Cos & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMEQNode
#define _defined_id_TpMEQNode 1
const TypeId TpMEQNode(-1420);                    // from /home/gvd/sim/LOFAR/CEP/CPA/MEQ/src/Node.h:34
const int TpMEQNode_int = -1420;
namespace MEQ { class Node; };
            template<>
            class DMIBaseTypeTraits<MEQ::Node> : public TypeTraits<MEQ::Node>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMEQNode_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const MEQ::Node & ContainerReturnType;
              typedef const MEQ::Node & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMEQParmPolcStored
#define _defined_id_TpMEQParmPolcStored 1
const TypeId TpMEQParmPolcStored(-1421);          // from /home/gvd/sim/LOFAR/CEP/CPA/MEQ/src/ParmPolcStored.h:33
const int TpMEQParmPolcStored_int = -1421;
namespace MEQ { class ParmPolcStored; };
            template<>
            class DMIBaseTypeTraits<MEQ::ParmPolcStored> : public TypeTraits<MEQ::ParmPolcStored>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMEQParmPolcStored_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const MEQ::ParmPolcStored & ContainerReturnType;
              typedef const MEQ::ParmPolcStored & ContainerParamType;
            };
#endif


#endif
