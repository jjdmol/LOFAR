      #ifndef TID_Meq_h
      #define TID_Meq_h 1

      // This file is generated automatically -- do not edit
      // Generated by /home/oms/LOFAR/autoconf_share/../DMI/aid/build_aid_maps.pl
      #include "DMI/TypeId.h"

      // should be called somewhere in order to link in the registry
      int aidRegistry_Meq ();

#ifndef _defined_id_TpMeqCells
#define _defined_id_TpMeqCells 1
const TypeId TpMeqCells(-1237);                   // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Cells.h:36
const int TpMeqCells_int = -1237;
namespace Meq { class Cells; };
            template<>
            class DMIBaseTypeTraits<Meq::Cells> : public TypeTraits<Meq::Cells>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqCells_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Cells & ContainerReturnType;
              typedef const Meq::Cells & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqDomain
#define _defined_id_TpMeqDomain 1
const TypeId TpMeqDomain(-1235);                  // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Domain.h:39
const int TpMeqDomain_int = -1235;
namespace Meq { class Domain; };
            template<>
            class DMIBaseTypeTraits<Meq::Domain> : public TypeTraits<Meq::Domain>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqDomain_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Domain & ContainerReturnType;
              typedef const Meq::Domain & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqFunction
#define _defined_id_TpMeqFunction 1
const TypeId TpMeqFunction(-1216);                // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Function.h:29
const int TpMeqFunction_int = -1216;
namespace Meq { class Function; };
            template<>
            class DMIBaseTypeTraits<Meq::Function> : public TypeTraits<Meq::Function>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqFunction_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Function & ContainerReturnType;
              typedef const Meq::Function & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqNode
#define _defined_id_TpMeqNode 1
const TypeId TpMeqNode(-1242);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Node.h:34
const int TpMeqNode_int = -1242;
namespace Meq { class Node; };
            template<>
            class DMIBaseTypeTraits<Meq::Node> : public TypeTraits<Meq::Node>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqNode_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Node & ContainerReturnType;
              typedef const Meq::Node & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqPolc
#define _defined_id_TpMeqPolc 1
const TypeId TpMeqPolc(-1407);                    // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Polc.h:32
const int TpMeqPolc_int = -1407;
namespace Meq { class Polc; };
            template<>
            class DMIBaseTypeTraits<Meq::Polc> : public TypeTraits<Meq::Polc>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqPolc_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Polc & ContainerReturnType;
              typedef const Meq::Polc & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqRequest
#define _defined_id_TpMeqRequest 1
const TypeId TpMeqRequest(-1222);                 // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Request.h:32
const int TpMeqRequest_int = -1222;
namespace Meq { class Request; };
            template<>
            class DMIBaseTypeTraits<Meq::Request> : public TypeTraits<Meq::Request>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqRequest_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Request & ContainerReturnType;
              typedef const Meq::Request & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqResult
#define _defined_id_TpMeqResult 1
const TypeId TpMeqResult(-1246);                  // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/Result.h:36
const int TpMeqResult_int = -1246;
namespace Meq { class Result; };
            template<>
            class DMIBaseTypeTraits<Meq::Result> : public TypeTraits<Meq::Result>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqResult_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::Result & ContainerReturnType;
              typedef const Meq::Result & ContainerParamType;
            };
#endif
#ifndef _defined_id_TpMeqVellSet
#define _defined_id_TpMeqVellSet 1
const TypeId TpMeqVellSet(-1369);                 // from /home/oms/LOFAR/CEP/CPA/PSS4/MEQ/src/VellSet.h:34
const int TpMeqVellSet_int = -1369;
namespace Meq { class VellSet; };
            template<>
            class DMIBaseTypeTraits<Meq::VellSet> : public TypeTraits<Meq::VellSet>
            {
              public:
              enum { isContainable = true };
              enum { typeId = TpMeqVellSet_int };
              enum { TypeCategory = TypeCategories::DYNAMIC };
              enum { ParamByRef = true, ReturnByRef = true };
              typedef const Meq::VellSet & ContainerReturnType;
              typedef const Meq::VellSet & ContainerParamType;
            };
#endif


#endif
