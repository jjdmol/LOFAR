#!/bin/csh
#
# Wrapper around several MSlist access scripts
# Use: MSlist <command> [<arguments>] [] [<outfile]
#
# Commands:
#    allObj - list all objects in the list
#    selObj - select one object from the list
#	      parameter: object name
#    selRA  - select one RA from the list
#	      parameter: RA to select
#    selDEC - select one DEC from the list
#	      parameter: DEC to select
#
# Commands may be 'piped'
#

set MSfile = MSlist-5.txt
set infile = $MSfile

#
# Remove old temp. output files
#
@ ocnt = 1
set outfile = "_MSout"$ocnt
while (-e $outfile)
  /bin/rm $outfile
  @ ocnt++
  set outfile = "_MSout"$ocnt
end

#
# Initiate new output file
@ ocnt = 1
set outfile = "_MSout"$ocnt

@ N = 1
set NMax = $#argv
set Moved = 0

start_of_loop:
while ($N <= $NMax)

  switch ($argv[$N])
  case "allObj":
    goto allObj
    breaksw

  case "selObj":
    goto selObj
    breaksw

  case "selRA":
    goto selRA
    breaksw

  case "selDEC":
    goto selDEC
    breaksw

  case "out="
    goto outFile
    breaksw

  default:
    echo Command not recognized: $argv[$N]
    goto goOut
    breaksw

  endsw

  echo ERROR - can never end up here.

end

if ($Moved == 0) then
  cat $infile
endif

goto goOut

#
# Below, all actions are defined
# The norrmal flow is:
# - check input
# - execute from $infile to $outfile
# - set new $infile to $outfile
# - go for next command
#

#
# Show all objects in the list
#
allObj:
  echo List all Objects
  awk '{print $4}' $infile | sort -u > $outfile

  set infile = $outfile
  @ ocnt++
  set outfile = "_MSout"$ocnt

  @ N++
  goto start_of_loop

#
# Select info for specific object
#
selObj:
  @ N++
  if ($N > $NMax) then
    echo selObj needs one parameter.
    goto goOut
  endif

  echo Find object=$argv[$N]
  awk -v obj=$argv[$N] '{if ($4 == obj) print}' $infile > $outfile

  set infile = $outfile
  @ ocnt++
  set outfile = "_MSout"$ocnt

  @ N++
  goto start_of_loop

#
# Select RA
#
selRA:
  @ N = $N + 1
  if ($N > $NMax) then
    echo selRA needs one parameter.
    goto goOut
  endif

  echo Find RA=$argv[$N]
  awk -v RA=$argv[$N] '{split($12, ra, ":"); if (ra[1] == RA) print }' $infile > $outfile

  set infile = $outfile
  @ ocnt++
  set outfile = "_MSout"$ocnt

  @ N++
  goto start_of_loop

#
# Select DEC
#
selDEC:
  @ N = $N + 1
  if ($N > $NMax) then
    echo selDEC needs one parameter.
    goto goOut
  endif

  echo Find DEC=$argv[$N]
  awk -v DEC=$argv[$N] '{split($13, dec, "."); if (dec[1] == DEC) print }' $infile > $outfile

  set infile = $outfile
  @ ocnt++
  set outfile = "_MSout"$ocnt

  @ N++
  goto start_of_loop

#
# Write to file
#
outFile:
  @ N++
  if ($N > $NMax) then
    echo selObj needs one parameter.
    goto goOut
  endif
  echo Write to file=$argv[$N]
  if (-e $infile) then
    if ($infile == $MSfile) then
      echo No selection to write
    else
      /bin/mv $infile $argv[$N]
      set Moved = 1
    endif
  else
    echo ERROR - Nothing to write.
  endif
  @ N++
  goto start_of_loop

goOut:
#
# Remove temp. output files
#
  @ ocnt = 1
  set outfile = "_MSout"$ocnt
  while (-e $outfile)
    /bin/rm $outfile
    @ ocnt++
    set outfile = "_MSout"$ocnt
  end

  exit
