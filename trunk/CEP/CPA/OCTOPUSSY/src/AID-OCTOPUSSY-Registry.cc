    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include "DMI/AtomicID.h"
    #include "DMI/TypeInfo.h"
    #include "DMI/DynamicTypeManager.h"
    #include "DMI/Packer.h"

    int aidRegistry_OCTOPUSSY ()
    {
      return 1;
    }

static AtomicID::Register aid_reg_Argv(-429,"Argv");
static AtomicID::Register aid_reg_ConnectionMgrWP(-428,"ConnectionMgrWP");
static AtomicID::Register aid_reg_GWServerWP(-460,"GWServerWP");
static AtomicID::Register aid_reg_GWClientWP(-470,"GWClientWP");
static AtomicID::Register aid_reg_GatewayWP(-430,"GatewayWP");
static AtomicID::Register aid_reg_GW(-458,"GW");
static AtomicID::Register aid_reg_Client(-473,"Client");
static AtomicID::Register aid_reg_Server(-441,"Server");
static AtomicID::Register aid_reg_Bind(-445,"Bind");
static AtomicID::Register aid_reg_Error(-450,"Error");
static AtomicID::Register aid_reg_Fatal(-468,"Fatal");
static AtomicID::Register aid_reg_Bound(-436,"Bound");
static AtomicID::Register aid_reg_Remote(-443,"Remote");
static AtomicID::Register aid_reg_Up(-453,"Up");
static AtomicID::Register aid_reg_Down(-455,"Down");
static AtomicID::Register aid_reg_Network(-435,"Network");
static AtomicID::Register aid_reg_Type(-477,"Type");
static AtomicID::Register aid_reg_Duplicate(-444,"Duplicate");
static AtomicID::Register aid_reg_Host(-462,"Host");
static AtomicID::Register aid_reg_Port(-461,"Port");
static AtomicID::Register aid_reg_Peers(-437,"Peers");
static AtomicID::Register aid_reg_Connected(-449,"Connected");
static AtomicID::Register aid_reg_Connection(-452,"Connection");
static AtomicID::Register aid_reg_Add(-466,"Add");
static AtomicID::Register aid_reg_Local(-439,"Local");
static AtomicID::Register aid_reg_Open(-448,"Open");
static AtomicID::Register aid_reg_Subscriptions(-424,"Subscriptions");
static AtomicID::Register aid_reg_Init(-471,"Init");
static AtomicID::Register aid_reg_Heartbeat(-447,"Heartbeat");
static AtomicID::Register aid_reg_Reconnect(-479,"Reconnect");
static AtomicID::Register aid_reg_FailConnect(-464,"FailConnect");
static AtomicID::Register aid_reg_Reopen(-438,"Reopen");
static AtomicID::Register aid_reg_List(-433,"List");
static AtomicID::Register aid_reg_Hosts(-457,"Hosts");
static AtomicID::Register aid_reg_Ports(-431,"Ports");
static AtomicID::Register aid_reg_Gateway(-426,"Gateway");
static AtomicID::Register aid_reg_LoggerWP(-478,"LoggerWP");
static AtomicID::Register aid_reg_Message(-446,"Message");
#include "Message.h"
static TypeInfoReg::Register ti_reg_Message(-446,TypeInfo(TypeInfo::DYNAMIC,0));
BlockableObject * __construct_Message (int n) { return n>0 ? new Message [n] : new Message; }
static DynamicTypeManager::Register dtm_reg_Message(-446,__construct_Message);
static AtomicID::Register aid_reg_Index(-425,"Index");
static AtomicID::Register aid_reg_Dispatcher(-476,"Dispatcher");
static AtomicID::Register aid_reg_Publish(-456,"Publish");
static AtomicID::Register aid_reg_Timestamp(-85,"Timestamp");
#include "Timestamp.h"
static TypeInfoReg::Register ti_reg_Timestamp(-85,TypeInfo(TypeInfo::BINARY,sizeof(Timestamp)));
static AtomicID::Register aid_reg_MsgLog(-482,"MsgLog");
static AtomicID::Register aid_reg_LogNormal(-485,"LogNormal");
static AtomicID::Register aid_reg_LogWarning(-483,"LogWarning");
static AtomicID::Register aid_reg_LogError(-481,"LogError");
static AtomicID::Register aid_reg_LogFatal(-484,"LogFatal");
static AtomicID::Register aid_reg_LogDebug(-480,"LogDebug");
static AtomicID::Register aid_reg_WP(-472,"WP");
static AtomicID::Register aid_reg_Event(-440,"Event");
static AtomicID::Register aid_reg_Timeout(-467,"Timeout");
static AtomicID::Register aid_reg_Input(-454,"Input");
static AtomicID::Register aid_reg_Signal(-442,"Signal");
static AtomicID::Register aid_reg_Subscribe(-475,"Subscribe");
static AtomicID::Register aid_reg_Hello(-465,"Hello");
static AtomicID::Register aid_reg_Bye(-427,"Bye");
static AtomicID::Register aid_reg_State(-432,"State");

