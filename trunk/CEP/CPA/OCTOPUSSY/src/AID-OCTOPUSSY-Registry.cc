    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
#include "Message.h"
BlockableObject * __construct_Message (int n) { return n>0 ? new Message [n] : new Message; }
  
    int aidRegistry_OCTOPUSSY ()
    {
      static int res = 

        AtomicID::registerId(-1267,"AppManager")+
        AtomicID::registerId(-1287,"AppManagerWP")+
        AtomicID::registerId(-1134,"Start")+
        AtomicID::registerId(-1138,"Stop")+
        AtomicID::registerId(-1262,"Launch")+
        AtomicID::registerId(-1265,"Halt")+
        AtomicID::registerId(-1263,"Launched")+
        AtomicID::registerId(-1281,"Halted")+
        AtomicID::registerId(-1137,"App")+
        AtomicID::registerId(-1266,"Fail")+
        AtomicID::registerId(-1285,"ID")+
        AtomicID::registerId(-1297,"Address")+
        AtomicID::registerId(-1282,"Parameters")+
        AtomicID::registerId(-1049,"Argv")+
        AtomicID::registerId(-1048,"ConnectionMgrWP")+
        AtomicID::registerId(-1081,"GWServerWP")+
        AtomicID::registerId(-1091,"GWClientWP")+
        AtomicID::registerId(-1050,"GatewayWP")+
        AtomicID::registerId(-1032,"Timestamp")+
        AtomicID::registerId(-1079,"GW")+
        AtomicID::registerId(-1094,"Client")+
        AtomicID::registerId(-1061,"Server")+
        AtomicID::registerId(-1066,"Bind")+
        AtomicID::registerId(-1071,"Error")+
        AtomicID::registerId(-1089,"Fatal")+
        AtomicID::registerId(-1056,"Bound")+
        AtomicID::registerId(-1063,"Remote")+
        AtomicID::registerId(-1074,"Up")+
        AtomicID::registerId(-1076,"Down")+
        AtomicID::registerId(-1055,"Network")+
        AtomicID::registerId(-1098,"Type")+
        AtomicID::registerId(-1065,"Duplicate")+
        AtomicID::registerId(-1083,"Host")+
        AtomicID::registerId(-1082,"Port")+
        AtomicID::registerId(-1057,"Peers")+
        AtomicID::registerId(-1070,"Connected")+
        AtomicID::registerId(-1073,"Connection")+
        AtomicID::registerId(-1087,"Add")+
        AtomicID::registerId(-1059,"Local")+
        AtomicID::registerId(-1069,"Open")+
        AtomicID::registerId(-1044,"Subscriptions")+
        AtomicID::registerId(-1092,"Init")+
        AtomicID::registerId(-1068,"Heartbeat")+
        AtomicID::registerId(-1101,"Reconnect")+
        AtomicID::registerId(-1085,"FailConnect")+
        AtomicID::registerId(-1058,"Reopen")+
        AtomicID::registerId(-1053,"List")+
        AtomicID::registerId(-1078,"Hosts")+
        AtomicID::registerId(-1051,"Ports")+
        AtomicID::registerId(-1046,"Gateway")+
        AtomicID::registerId(-1099,"LoggerWP")+
        AtomicID::registerId(-1149,"Max")+
        AtomicID::registerId(-1264,"Level")+
        AtomicID::registerId(-1234,"Scope")+
        AtomicID::registerId(-1067,"Message")+
        TypeInfoReg::addToRegistry(-1067,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1067,__construct_Message)+
        AtomicID::registerId(-1045,"Index")+
        AtomicID::registerId(-1269,"Text")+
        AtomicID::registerId(-1097,"Dispatcher")+
        AtomicID::registerId(-1077,"Publish")+
        AtomicID::registerId(-1100,"ReflectorWP")+
        AtomicID::registerId(-1064,"Reflect")+
        AtomicID::registerId(-1412,"MsgLog")+
        AtomicID::registerId(-1417,"LogNormal")+
        AtomicID::registerId(-1413,"LogWarning")+
        AtomicID::registerId(-1416,"LogError")+
        AtomicID::registerId(-1414,"LogFatal")+
        AtomicID::registerId(-1415,"LogDebug")+
        AtomicID::registerId(-1093,"WP")+
        AtomicID::registerId(-1060,"Event")+
        AtomicID::registerId(-1088,"Timeout")+
        AtomicID::registerId(-1075,"Input")+
        AtomicID::registerId(-1062,"Signal")+
        AtomicID::registerId(-1096,"Subscribe")+
        AtomicID::registerId(-1086,"Hello")+
        AtomicID::registerId(-1047,"Bye")+
        AtomicID::registerId(-1052,"State")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_OCTOPUSSY = aidRegistry_OCTOPUSSY();

