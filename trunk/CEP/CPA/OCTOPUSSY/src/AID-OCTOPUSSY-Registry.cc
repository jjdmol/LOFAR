    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../DMI/aid/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
#include "Message.h"
BlockableObject * __construct_Message (int n) { return n>0 ? new Message [n] : new Message; }
  
    int aidRegistry_OCTOPUSSY ()
    {
      static int res = 

        AtomicID::registerId(-1082,"appmanager")+
        AtomicID::registerId(-1080,"appmanagerwp")+
        AtomicID::registerId(-1105,"start")+
        AtomicID::registerId(-1054,"stop")+
        AtomicID::registerId(-1099,"launch")+
        AtomicID::registerId(-1108,"halt")+
        AtomicID::registerId(-1083,"launched")+
        AtomicID::registerId(-1035,"halted")+
        AtomicID::registerId(-1089,"app")+
        AtomicID::registerId(-1036,"fail")+
        AtomicID::registerId(-1087,"id")+
        AtomicID::registerId(-1067,"address")+
        AtomicID::registerId(-1090,"parameters")+
        AtomicID::registerId(-1086,"loggerwp")+
        AtomicID::registerId(-1039,"max")+
        AtomicID::registerId(-1104,"level")+
        AtomicID::registerId(-1042,"scope")+
        AtomicID::registerId(-1068,"reflectorwp")+
        AtomicID::registerId(-1037,"reflect")+
        AtomicID::registerId(-1045,"message")+
        TypeInfoReg::addToRegistry(-1045,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1045,__construct_Message)+
        AtomicID::registerId(-1051,"index")+
        AtomicID::registerId(-1077,"text")+
        AtomicID::registerId(-1057,"dispatcher")+
        AtomicID::registerId(-1069,"local")+
        AtomicID::registerId(-1055,"publish")+
        AtomicID::registerId(-1038,"argv")+
        AtomicID::registerId(-1050,"subscriptions")+
        AtomicID::registerId(-1091,"init")+
        AtomicID::registerId(-1076,"heartbeat")+
        AtomicID::registerId(-1101,"connectionmgrwp")+
        AtomicID::registerId(-1047,"gwserverwp")+
        AtomicID::registerId(-1053,"gwclientwp")+
        AtomicID::registerId(-1044,"gatewaywp")+
        AtomicID::registerId(-1002,"timestamp")+
        AtomicID::registerId(-1056,"gw")+
        AtomicID::registerId(-1052,"client")+
        AtomicID::registerId(-1093,"server")+
        AtomicID::registerId(-1059,"bind")+
        AtomicID::registerId(-1084,"error")+
        AtomicID::registerId(-1107,"fatal")+
        AtomicID::registerId(-1063,"bound")+
        AtomicID::registerId(-1097,"remote")+
        AtomicID::registerId(-1034,"up")+
        AtomicID::registerId(-1073,"down")+
        AtomicID::registerId(-1102,"network")+
        AtomicID::registerId(-1100,"type")+
        AtomicID::registerId(-1074,"duplicate")+
        AtomicID::registerId(-1079,"host")+
        AtomicID::registerId(-1078,"port")+
        AtomicID::registerId(-1066,"peers")+
        AtomicID::registerId(-1081,"connected")+
        AtomicID::registerId(-1106,"connection")+
        AtomicID::registerId(-1064,"add")+
        AtomicID::registerId(-1061,"open")+
        AtomicID::registerId(-1072,"msglog")+
        AtomicID::registerId(-1043,"lognormal")+
        AtomicID::registerId(-1075,"logwarning")+
        AtomicID::registerId(-1062,"logerror")+
        AtomicID::registerId(-1085,"logfatal")+
        AtomicID::registerId(-1041,"logdebug")+
        AtomicID::registerId(-1071,"wp")+
        AtomicID::registerId(-1070,"event")+
        AtomicID::registerId(-1065,"timeout")+
        AtomicID::registerId(-1092,"input")+
        AtomicID::registerId(-1095,"signal")+
        AtomicID::registerId(-1040,"subscribe")+
        AtomicID::registerId(-1103,"hello")+
        AtomicID::registerId(-1096,"bye")+
        AtomicID::registerId(-1060,"state")+
        AtomicID::registerId(-1049,"reconnect")+
        AtomicID::registerId(-1048,"failconnect")+
        AtomicID::registerId(-1088,"reopen")+
        AtomicID::registerId(-1046,"list")+
        AtomicID::registerId(-1098,"hosts")+
        AtomicID::registerId(-1058,"ports")+
        AtomicID::registerId(-1094,"gateway")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_OCTOPUSSY = aidRegistry_OCTOPUSSY();

