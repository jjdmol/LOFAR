    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
  
    int aidRegistry_Solver ()
    {
      static int res = 

        AtomicID::registerId(-1144,"Domain")+
        AtomicID::registerId(-1232,"Parameter")+
        AtomicID::registerId(-1142,"Step")+
        AtomicID::registerId(-1143,"Convergence")+
        AtomicID::registerId(-1127,"Size")+
        AtomicID::registerId(-1145,"Batch")+
        AtomicID::registerId(-1146,"Solver")+
        AtomicID::registerId(-1141,"Control")+
        AtomicID::registerId(-1231,"Job")+
        AtomicID::registerId(-1229,"Jobs")+
        AtomicID::registerId(-1362,"SolvableParm")+
        AtomicID::registerId(-1366,"SolvableFlag")+
        AtomicID::registerId(-1333,"Peel")+
        AtomicID::registerId(-1395,"Pred")+
        AtomicID::registerId(-1045,"Index")+
        AtomicID::registerId(-1394,"Apply")+
        AtomicID::registerId(-1367,"Ant1")+
        AtomicID::registerId(-1368,"Ant2")+
        AtomicID::registerId(-1355,"AntMode")+
        AtomicID::registerId(-1359,"CorrSel")+
        AtomicID::registerId(-1356,"Niter")+
        AtomicID::registerId(-1361,"UseSVD")+
        AtomicID::registerId(-1360,"CalcUVW")+
        AtomicID::registerId(-1364,"ModelType")+
        AtomicID::registerId(-1358,"MEP")+
        AtomicID::registerId(-1365,"GSM")+
        AtomicID::registerId(-1369,"Save")+
        AtomicID::registerId(-1398,"Solvable")+
        AtomicID::registerId(-1399,"Param")+
        AtomicID::registerId(-1135,"Params")+
        AtomicID::registerId(-1257,"Residuals")+
        AtomicID::registerId(-1397,"Names")+
        AtomicID::registerId(-1396,"Values")+
        AtomicID::registerId(-1372,"Rank")+
        AtomicID::registerId(-1373,"Fit")+
        AtomicID::registerId(-1374,"Errors")+
        AtomicID::registerId(-1376,"CoVar")+
        AtomicID::registerId(-1207,"Flag")+
        AtomicID::registerId(-1377,"Mu")+
        AtomicID::registerId(-1375,"StdDev")+
        AtomicID::registerId(-1371,"Chi")+
        AtomicID::registerId(-1384,"Solve")+
        AtomicID::registerId(-1334,"Iter")+
        AtomicID::registerId(-1140,"Num")+
        AtomicID::registerId(-1386,"Intermediate")+
        AtomicID::registerId(-1385,"Final")+
        AtomicID::registerId(-1390,"Current")+
        AtomicID::registerId(-1134,"Start")+
        AtomicID::registerId(-1131,"End")+
        AtomicID::registerId(-1218,"Time")+
        AtomicID::registerId(-1123,"Tile")+
        AtomicID::registerId(-1108,"Count")+
        AtomicID::registerId(-1138,"Stop")+
        AtomicID::registerId(-1148,"Iteration")+
        AtomicID::registerId(-1147,"Solution")+
        AtomicID::registerId(-1067,"Message")+
        AtomicID::registerId(-1150,"Next")+
        AtomicID::registerId(-1107,"Data")+
        AtomicID::registerId(-1151,"All")+
        AtomicID::registerId(-1230,"Solved")+
        AtomicID::registerId(-1337,"Accept")+
        AtomicID::registerId(-1335,"When")+
        AtomicID::registerId(-1149,"Max")+
        AtomicID::registerId(-1336,"Converged")+
        AtomicID::registerId(-1338,"Command")+
        AtomicID::registerId(-1087,"Add")+
        AtomicID::registerId(-1339,"Queue")+
        AtomicID::registerId(-1354,"Single")+
        AtomicID::registerId(-1389,"Defer")+
        AtomicID::registerId(-1266,"Fail")+
        AtomicID::registerId(-1340,"IDLE")+
        AtomicID::registerId(-1341,"ENDSOLVE")+
        AtomicID::registerId(-1342,"NEXT_DOMAIN")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_Solver = aidRegistry_Solver();

