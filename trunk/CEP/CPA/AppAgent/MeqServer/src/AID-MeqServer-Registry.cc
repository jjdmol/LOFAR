    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
#include "Node.h"
BlockableObject * __construct_MEQNode (int n) { return n>0 ? new MEQ::Node [n] : new MEQ::Node; }
  
    int aidRegistry_MeqServer ()
    {
      static int res = 

        AtomicID::registerId(-1424,"Node")+
        AtomicID::registerId(-1163,"Name")+
        AtomicID::registerId(-1422,"NodeIndex")+
        AtomicID::registerId(-1423,"MeqServer")+
        AtomicID::registerId(-1426,"Create")+
        AtomicID::registerId(-1427,"Delete")+
        AtomicID::registerId(-1429,"Get")+
        AtomicID::registerId(-1381,"Set")+
        AtomicID::registerId(-1052,"State")+
        AtomicID::registerId(-1351,"Request")+
        AtomicID::registerId(-1137,"App")+
        AtomicID::registerId(-1338,"Command")+
        AtomicID::registerId(-1430,"Args")+
        AtomicID::registerId(-1421,"Result")+
        AtomicID::registerId(-1071,"Error")+
        AtomicID::registerId(-1067,"Message")+
        AtomicID::registerId(-1428,"Class")+
        AtomicID::registerId(-1425,"MEQNode")+
        TypeInfoReg::addToRegistry(-1425,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1425,__construct_MEQNode)+
    0;
    return res;
  }
  
  int __dum_call_registries_for_MeqServer = aidRegistry_MeqServer();

