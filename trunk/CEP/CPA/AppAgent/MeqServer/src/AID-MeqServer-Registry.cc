    // This file is generated automatically -- do not edit
    // Generated by /home/oms/LOFAR/autoconf_share/../DMI/src/build_aid_maps.pl
    #include <DMI/AtomicID.h>
    #include <DMI/TypeInfo.h>
    #include <DMI/DynamicTypeManager.h>
    #include <DMI/Packer.h>
    
#include "Sink.h"
BlockableObject * __construct_MeqSink (int n) { return n>0 ? new Meq::Sink [n] : new Meq::Sink; }
#include "Spigot.h"
BlockableObject * __construct_MeqSpigot (int n) { return n>0 ? new Meq::Spigot [n] : new Meq::Spigot; }
  
    int aidRegistry_MeqServer ()
    {
      static int res = 

        AtomicID::registerId(-1427,"Node")+
        AtomicID::registerId(-1163,"Name")+
        AtomicID::registerId(-1456,"NodeIndex")+
        AtomicID::registerId(-1457,"MeqServer")+
        AtomicID::registerId(-1458,"Create")+
        AtomicID::registerId(-1461,"Delete")+
        AtomicID::registerId(-1466,"Get")+
        AtomicID::registerId(-1381,"Set")+
        AtomicID::registerId(-1052,"State")+
        AtomicID::registerId(-1351,"Request")+
        AtomicID::registerId(-1454,"Resolve")+
        AtomicID::registerId(-1423,"Child")+
        AtomicID::registerId(-1448,"Children")+
        AtomicID::registerId(-1137,"App")+
        AtomicID::registerId(-1338,"Command")+
        AtomicID::registerId(-1453,"Args")+
        AtomicID::registerId(-1421,"Result")+
        AtomicID::registerId(-1107,"Data")+
        AtomicID::registerId(-1455,"Processing")+
        AtomicID::registerId(-1071,"Error")+
        AtomicID::registerId(-1067,"Message")+
        AtomicID::registerId(-1222,"Code")+
        AtomicID::registerId(-1464,"Sink")+
        AtomicID::registerId(-1130,"Output")+
        AtomicID::registerId(-1463,"Col")+
        AtomicID::registerId(-1111,"Corr")+
        AtomicID::registerId(-1045,"Index")+
        AtomicID::registerId(-1459,"MeqSink")+
        TypeInfoReg::addToRegistry(-1459,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1459,__construct_MeqSink)+
        AtomicID::registerId(-1465,"Spigot")+
        AtomicID::registerId(-1075,"Input")+
        AtomicID::registerId(-1150,"Next")+
        AtomicID::registerId(-1425,"Id")+
        AtomicID::registerId(-1460,"MeqSpigot")+
        TypeInfoReg::addToRegistry(-1460,TypeInfo(TypeInfo::DYNAMIC,0))+
        DynamicTypeManager::addToRegistry(-1460,__construct_MeqSpigot)+
        AtomicID::registerId(-1167,"Station")+
        AtomicID::registerId(-1123,"Tile")+
        AtomicID::registerId(-1126,"Format")+
        AtomicID::registerId(-1462,"VisHandlerNode")+
    0;
    return res;
  }
  
  int __dum_call_registries_for_MeqServer = aidRegistry_MeqServer();

