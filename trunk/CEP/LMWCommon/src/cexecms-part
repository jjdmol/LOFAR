#!/bin/sh

# The distributed part of cexecms.
# It setups the environment and looks for files matching the given glob name.
# It executes the given command for all files found.
# It reports if no files are found.
#
# The following substitutions in the command will be made:
#   <FILENAME> or <FN>  by the full file name
#   <BASENAME> or <BN>  by the basename part
#   <DIRNAME>  or <DN>  by the directory part
# The first two can be followed by a . meaning that the extension is ignored.
# If no substitutions are done, the command is executed like
#     command filename arg1 arg2 ...
# otherwise like
#     command arg1 arg2...

showhelp()
{
  echo ' run like:   cexecms-part [-e envfile] command nameglob [arg1 arg2 ...]'
  echo '     see cexecms for more information'
}

if test $# -lt 2; then
    showhelp
    exit 1
fi
# Get a possibly given envfile.
envfile=
if test "$1" = "-e"; then
    shift
    . $1
    shift
fi
if test $# -lt 2; then
    showhelp
    exit 1
fi
command="$1"
shift
nameglob="$1"
shift

# Setup the environment by sourcing the envfile.
if test "$envfile" != ""; then
    . $envfile
fi

# Find all matching files (first substitute # by [0-9]).
nameg=`echo "$nameglob" | sed -e 's%#%[0-9]%g'`
names=`ls -d $nameg 2>&1`
if test $? != 0; then
    echo "No file matching $nameg found"
    exit 0
fi

# cexecms had to substitute special characters, so reverse it.
command=`echo "$command" | sed \
    -e 's%:SPACE:% %g' \
    -e 's%:LT:%<%g' \
    -e 's%:GT:%>%g' \
    -e 's%:LPAR:%(%g' \
    -e 's%:RPAR:%)%g' \
    -e 's%:LBRACE:%{%g' \
    -e 's%:RBRACE:%}%g' \
    -e 's%:LBRACKET:%[%g' \
    -e 's%:RBRACKET:%]%g' \
    -e 's%:VBAR:%|%g' \
    -e 's%:AMPERSAND:%\\&%g' \
    -e 's%:ASTERIX:%*%g' \
    -e 's%:NOT:%!%g' \
    -e 's%:HASH:%#%g' \
    -e 's%:TILDE:%~%g' \
    -e 's%:COMMA:%,%g' \
    -e 's%:QMARK:%?%g' \
    -e 's%:SEMICOLON:%;%g' \
    -e 's%:DQUOTE:%"%g' \
    -e "s%:SQUOTE:%'%g" \
    -e 's%:DOLLAR:%$%g'`

# Process all files.
# Substitute placeholders in the command.
for fname in $names
do
    dname=`dirname $fname`
    bname=`basename $fname`
    bnamed=`echo $bname | sed -e 's%\..*%%'`
    fnamed=$dname/$bnamed
    commandnew=`echo "$command" | sed \
	-e "s%:FN:%$fname%g" \
	-e "s%:DN:%$dname%g" \
	-e "s%:BN:%$bname%g" \
	-e "s%:FN\.:%$fnamed%g" \
	-e "s%:DN\.:%$dnamed%g" \
	-e "s%:BN\.:%$bnamed%g" \
	-e "s%:FILENAME:%$fname%g" \
	-e "s%:DIRNAME:%$dname%g" \
	-e "s%:BASENAME:%$bname%g" \
	-e "s%:FILENAME\.:%$fnamed%g" \
	-e "s%:DIRNAME\.:%$dnamed%g" \
	-e "s%:BASENAME\.:%$bnamed%g"`
    # If nothing substituted, give the file name to the command.
    # Use eval to execute the command, otherwise the shell gets confused
    # by possible quoted parts.
    if test "$commandnew" = "$command"; then
	eval $command $fname "$@" || echo "Failure in $command $fname $*"
    else
	eval $commandnew "$@" || echo "Failure in $commandnew $*"
    fi
done
