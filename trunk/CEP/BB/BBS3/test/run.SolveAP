#!/bin/sh
# this script must be called with usernm
# This script solves for amplitude phase.
# It uses the input parameters set: BB3C343.input2

#aips should be initialised
source /lofarbuild/aips++/prod/aipsinit.sh

if [ "$#" != "1" ]; then
 echo "run as:   run.3C343 usernm"
 exit 1
fi

rm -f SolvePoly.ready

usernm=$1
dbtype=aips

# Define functions to create the parm tables.
beginParmdbInputFile () {
  rm -f fill.parmdb
  add2file "create $*"
}
add2file () {
  echo $* >> fill.parmdb
}
applyfile () {
  add2file  "quit" 
  src/parmdb < fill.parmdb
}
makeMeq () {
  pert="1e-6" 
  if [ "$#" -eq "1" ]; then
    pert=$1 
  fi
  add2file  "adddef frot      values=0, perturbation=${pert}" 
  add2file  "adddef drot      values=0, perturbation=${pert}" 
  add2file  "adddef dell      values=0, perturbation=${pert}" 
  add2file  "adddef gain.11   values=1, perturbation=${pert}" 
  add2file  "adddef gain.22   values=1, perturbation=${pert}" 
  add2file  "adddef EJ11.ampl values=1, perturbation=${pert}" 
  add2file  "adddef EJ12.ampl values=0, perturbation=${pert}" 
  add2file  "adddef EJ21.ampl values=0, perturbation=${pert}" 
  add2file  "adddef EJ22.ampl values=1, perturbation=${pert}" 
  add2file  "adddef EJ11.phase values=0, perturbation=${pert}" 
  add2file  "adddef EJ12.phase values=0, perturbation=${pert}" 
  add2file  "adddef EJ21.phase values=0, perturbation=${pert}" 
  add2file  "adddef EJ22.phase values=0, perturbation=${pert}" 
}
makeGsm () {
  pert="1e-6" 
  if [ "$#" -eq "1" ]; then
    pert=$1 
  fi
  add2file  "adddef RA.CP1  values=4.356645791155902, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef DEC.CP1 values=1.092208429052697, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef RA.CP1  values=4.356645, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef DEC.CP1 values=1.092208, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef StokesI.CP1 values=1.0, perturbation=${pert} " 
  add2file  "adddef StokesQ.CP1 values=0,   perturbation=${pert} " 
  add2file  "adddef StokesU.CP1 values=0,   perturbation=${pert} " 
  add2file  "adddef StokesV.CP1 values=0,   perturbation=${pert} " 
  add2file  "adddef RA.CP2  values=4.3396003966265599, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef DEC.CP2 values=1.0953677174056471, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef RA.CP2  values=4.339600, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef DEC.CP2 values=1.095367, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef StokesI.CP2 values=1.0, perturbation=${pert} " 
  add2file  "adddef StokesQ.CP2 values=0,   perturbation=${pert} " 
  add2file  "adddef StokesU.CP2 values=0,   perturbation=${pert} " 
  add2file  "adddef StokesV.CP2 values=0,   perturbation=${pert} " 
}

makeGsm2 () {
  pert="1e-6" 
  if [ "$#" -eq "1" ]; then
    pert=$1 
  fi
  add2file  "adddef RA.CP1  values=4.356645791155902, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef DEC.CP1 values=1.092208429052697, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef RA.CP1  values=4.356645, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef DEC.CP1 values=1.092208, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef StokesI.CP1 nx=2, values=[1.0,0.], perturbation=${pert} " 
  add2file  "adddef StokesQ.CP1 values=0, perturbation=${pert} " 
  add2file  "adddef StokesU.CP1 values=0, perturbation=${pert} " 
  add2file  "adddef StokesV.CP1 values=0, perturbation=${pert} " 
  add2file  "adddef RA.CP2  values=4.3396003966265599, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef DEC.CP2 values=1.0953677174056471, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef RA.CP2  values=4.339600, perturbation=${pert}, pert_rel=F" 
#  add2file  "adddef DEC.CP2 values=1.095367, perturbation=${pert}, pert_rel=F" 
  add2file  "adddef StokesI.CP2 nx=4, values=[1.0,0.,0.,0.], perturbation=${pert} " 
  add2file  "adddef StokesQ.CP2 values=0, perturbation=${pert} " 
  add2file  "adddef StokesU.CP2 values=0, perturbation=${pert} " 
  add2file  "adddef StokesV.CP2 values=0, perturbation=${pert} " 
}


echo "  Generating parm tables ..."
# use functions to initialize parmtables
beginParmdbInputFile "dbtype='$dbtype', user='$usernm', tablename='10008336'"
makeMeq
applyfile

ln -s /data/PSS3/diepen/BBS2/3C343/10008336.MS_p1
ln -s 10008336.MS_p1/vis.des 10008336.MS.des

# Create a new gsm table.
beginParmdbInputFile "dbtype='$dbtype', user='$usernm', tablename='10008336_gsm'"
makeGsm
applyfile

../../src/clearBB -user $usernm -tablename bbs3SolveAP

# Solve for phase
# time src/BBS3 ../../test/SolveAP.input $usernm

time /usr/local/mpich/bin/mpirun -np 3 -machinefile myMachines src/BBS3 ../../test/SolveAP.input $usernm

touch SolveAP.ready
