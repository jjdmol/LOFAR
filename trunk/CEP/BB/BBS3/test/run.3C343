#!/bin/sh
# this script must be called with nriter and usernm

if [ "$#" != "4" ]; then
 echo "run as:   run.3C343 nriter usernm calcuvw dbtype"
 exit 1
fi

maxniter=$1
usernm=$2
calcuvw=$3
dbtype=$4

# Define functions to create the parm tables.
beginParmdbInputFile () {
  rm -f fill.parmdb
  add2file "create $*"
  add2file "connect $*"
  add2file "clear"
}
add2file () {
  echo $* >> fill.parmdb
}
applyfile () {
  add2file  "quit" 
  ./parmdb < fill.parmdb
}
makeMeq () {
  diff="1e-6" 
  if [ "$#" -eq "1" ]; then
    diff=$1 
  fi
  add2file  "adddef frot      values=0, diff=${diff}" 
  add2file  "adddef drot      values=0, diff=${diff}" 
  add2file  "adddef dell      values=0, diff=${diff}" 
  add2file  "adddef gain.11   values=1, diff=${diff}" 
  add2file  "adddef gain.22   values=1, diff=${diff}" 
  add2file  "adddef EJ11.ampl ny=2, values=[1.,0.], diff=${diff}" 
  add2file  "adddef EJ12.ampl values=0, diff=${diff}" 
  add2file  "adddef EJ21.ampl values=0, diff=${diff}" 
  add2file  "adddef EJ22.ampl ny=2, values=[1.,0.], diff=${diff}" 
  add2file  "adddef EJ11.phase values=0, diff=${diff}" 
  add2file  "adddef EJ12.phase values=0, diff=${diff}" 
  add2file  "adddef EJ21.phase values=0, diff=${diff}" 
  add2file  "adddef EJ22.phase values=0, diff=${diff}" 
}
makeGsm () {
  diff="1e-6" 
  if [ "$#" -eq "1" ]; then
    diff=$1 
  fi
  add2file  "adddef RA.CP1  values=4.356645791155902, diff=${diff}, diff_rel=F" 
  add2file  "adddef DEC.CP1 values=1.092208429052697, diff=${diff}, diff_rel=F" 
#  add2file  "adddef RA.CP1  values=4.356645, diff=${diff}, diff_rel=F" 
#  add2file  "adddef DEC.CP1 values=1.092208, diff=${diff}, diff_rel=F" 
  add2file  "adddef StokesI.CP1 values=1.0,     diff=${diff} " 
  add2file  "adddef StokesQ.CP1 values=0,       diff=${diff} " 
  add2file  "adddef StokesU.CP1 values=0,       diff=${diff} " 
  add2file  "adddef StokesV.CP1 values=0,       diff=${diff} " 
  add2file  "adddef RA.CP2  values=4.3396003966265599, diff=${diff}, diff_rel=F" 
  add2file  "adddef DEC.CP2 values=1.0953677174056471, diff=${diff}, diff_rel=F" 
#  add2file  "adddef RA.CP2  values=4.339600, diff=${diff}, diff_rel=F" 
#  add2file  "adddef DEC.CP2 values=1.095367, diff=${diff}, diff_rel=F" 
  add2file  "adddef StokesI.CP2 values=1.0,     diff=${diff} " 
  add2file  "adddef StokesQ.CP2 values=0,       diff=${diff} " 
  add2file  "adddef StokesU.CP2 values=0,       diff=${diff} " 
  add2file  "adddef StokesV.CP2 values=0,       diff=${diff} " 
}

# CP1 is 3C343.1 (at the center) and CP2 is 3C343 (towards top-right)
makeGsm2 () {
  diff="1e-6" 
  if [ "$#" -eq "1" ]; then
    diff=$1 
  fi
  add2file "adddef RA.CP1  values=4.356645791155902, diff=${diff}, diff_rel=F" 
  add2file "adddef DEC.CP1 values=1.092208429052697, diff=${diff}, diff_rel=F" 
  add2file "adddef StokesI.CP1 nx=2, values=[1.,0.], diff=${diff}, freqscale=1. " 
  add2file "adddef StokesQ.CP1 nx=2, values=[0.,0.], diff=${diff} " 
  add2file "adddef StokesU.CP1 values=0,       diff=${diff} " 
  add2file "adddef StokesV.CP1 values=0,       diff=${diff} " 

  add2file "adddef RA.CP2  values=4.3396003966265599, diff=${diff}, diff_rel=F" 
  add2file "adddef DEC.CP2 values=1.0953677174056471, diff=${diff}, diff_rel=F" 
  add2file "adddef StokesI.CP2 nx=4, values=[1.,0.,0.,0.], diff=${diff}, freqscale=1. " 
  add2file "adddef StokesQ.CP2 nx=4, values=[0.,0.,0.,0.], diff=${diff}, freqscale=1. " 
  add2file "adddef StokesU.CP2 values=0,       diff=${diff} " 
  add2file "adddef StokesV.CP2 values=0,       diff=${diff} " 
}

# Subtract the sources.
# First copy the data column to the corrected-data column.
#cp 10008336.MS_p1/table.f5_TSM0 10008336.MS_p1/table.f8_TSM1
#time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "AP" 2 10 1 $calcuvw $dbtype
#exit

echo "  Generating parm tables ..."
# use functions to initialize parmtables
beginParmdbInputFile "dbtype='$dbtype', user='$usernm', tablename='10008336'"
makeMeq
applyfile

beginParmdbInputFile "dbtype='$dbtype', user='$usernm', tablename='10008336_gsm'"
makeGsm2
applyfile


# Solve for StokesI as function of freq.
echo "Solving fluxes 1st time ..."
time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "" 1 1 $maxniter $calcuvw $dbtype

# Solve for phase
echo "Solving phases 1st time ..."
time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "PATCHEJ" 2 4 $maxniter $calcuvw $dbtype
exit

# Solve again for StokesI as function of freq.
echo "Solving fluxes 2nd time ..."
time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "PATCHEJ" 2 1 $maxniter $calcuvw $dbtype

# Solve again for phase
echo "Solving phases 2nd time ..."
time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "PATCHEJ" 2 4 $maxniter $calcuvw $dbtype

# Solve again for StokesI as function of freq.
echo "Solving fluxes 3rd time ..."
time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "PATCHEJ" 2 1 $maxniter $calcuvw $dbtype

# Solve for amplitude in 2 patches.
echo "Solving amplitudes ..."
time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "PATCHEJ" 2 3 $maxniter $calcuvw $dbtype

# Subtract the sources.
#echo "Subtracting sources"
# Copy the phase from SG1 to SG2
#glish copyPhases.g
# First copy the data column to the corrected-data column.
#cp 10008336.MS_p1/table.f5_TSM0 10008336.MS_p1/table.f8_TSM1
#time ./t3C343 $usernm 10008336.MS_p1 10008336 10008336_gsm "PATCHEJ" 2 10 1 $calcuvw $dbtype

# Make the map.
#glish image343.g
