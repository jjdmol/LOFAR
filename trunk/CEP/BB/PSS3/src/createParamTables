#!/bin/sh

# createParamTables: create parameter database for BlackBoardDemo
#
#  Copyright (C) 2004
#  ASTRON (Netherlands Foundation for Research in Astronomy)
#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  $Id$

# the following options can be given:
# -dbtype  Database type (right now only monet, postgres and mysql are supported)
# -host    Host (default = localhost)
# -user    User

DBTYPE="mysql"
HOST="localhost"
USER="zwart"
INDEXCMDSUFFIX="(name)"
AIPSTABLECREATOR="glish -l /lofarbuild/weekly/LOFAR/CEP/CPA/PSS3/CAL/src/parmtable.g"

while [ 1 = 1 ]
do
  if [ "$1" = "-host" ]; then
    shift
    HOST="$1"
    shift
  elif [ "$1" = "-dbtype" ]; then
    shift
    DBTYPE="$1"
    shift
  elif [ "$1" = "-user" ]; then
    shift
    USER="$1"
    shift
  else
    break;
  fi
done


if [ "$DBTYPE" = "mysql" ]; then
# for mysql
    SQLCLIENT="mysql -h $HOST -u mysql $USER"
    INDEXCMDSUFFIX="(name(30))"
# memory tables do not support text fiels :(
#    TABLECMDSUFFIX=" ENGINE = MEMORY "
elif [ "$DBTYPE" = "postgres" ]; then
# for postgres
    SQLCLIENT="psql -h $HOST -U postgres $USER"
    INDEXCMDSUFFIX="(name)"
elif [ "$DBTYPE" = "monet" ]; then
# for monet:
    SQLCLIENT="MapiClient -h $HOST -l sql -u monetdb -P monetdb"
elif [ "$DBTYPE" = "aips" ]; then
# for aips:
    SQLCLIENT=""
elif [ "$DBTYPE" = "bdb" ]; then
# for Berkeley db:
    SQLCLIENT=""
else
    echo "Unkown dbtype"
    exit 1
fi

for n in 1 2 3 4 5 6 ; do
  tablename=meqmodel$n
  if [ "$DBTYPE" = "aips" ]; then
    rm -rf ${tablename}.MEP
    echo "parmtable(\"${tablename}.MEP\", T)" > aipscreate
    echo "exit" >> aipscreate
    $AIPSTABLECREATOR < aipscreate
  elif [ "$DBTYPE" = "bdb" ]; then
    rm -rf *.bdb
  else
# do the drops in seperate commands
# if they fail (because the old tables do not exist) the script will continue
    echo " " > sql_create
    echo " DROP TABLE ${tablename}; " >> sql_create
    echo " COMMIT; " >> sql_create
    $SQLCLIENT < sql_create

    echo " " > sql_create
    echo " DROP TABLE ${tablename}def; " >> sql_create
    echo " COMMIT; " >> sql_create
    $SQLCLIENT < sql_create

    echo " " > sql_create
    echo " CREATE TABLE ${tablename}def (
           Coeff		text,
	   SimCoeff	text,
	   PertSimCoeff	text,
	   pertvalue	double precision,
	   isrelpert	integer,
	   t0		double precision,
	   f0		double precision,
	   normalized	integer,
	   name		text,
	   srcnr		integer,
	   statnr		integer
	   ) $TABLECMDSUFFIX ;" >> sql_create
    echo " CREATE INDEX ${tablename}def_name_idx ON ${tablename}def $INDEXCMDSUFFIX ;" >> sql_create
    echo " CREATE TABLE ${tablename} (
        	Coeff		text,
		SimCoeff	text,
		PertSimCoeff	text,
		pertvalue	double precision,
		isrelpert	integer,
		t0		double precision,
		f0		double precision,
		normalized	integer,
		tb		double precision,
		te		double precision,
		fb		double precision,
		fe		double precision,
		name		text,
		srcnr		integer,
		statnr		integer
		) $TABLECMDSUFFIX ;" >> sql_create
    echo " CREATE INDEX ${tablename}_name_idx ON ${tablename} $INDEXCMDSUFFIX ;" >> sql_create
    echo " COMMIT; " >> sql_create
    $SQLCLIENT < sql_create
  fi
  
  tablename=skymodel$n
  if [ "$DBTYPE" = "aips" ]; then
    rm -rf ${tablename}.MEP
    echo "parmtable(\"${tablename}.MEP\", T)" > aipscreate
    echo "exit" >> aipscreate
    $AIPSTABLECREATOR < aipscreate
  else
    echo " " > sql_create
    echo "drop table ${tablename};" >> sql_create
    echo " COMMIT; " >> sql_create
    $SQLCLIENT < sql_create

    echo " " > sql_create
    echo "drop table ${tablename}def;" >> sql_create
    echo " COMMIT; " >> sql_create
    $SQLCLIENT < sql_create

    echo " " > sql_create
    echo " CREATE TABLE ${tablename}def (
        	Coeff		text,
		SimCoeff	text,
		PertSimCoeff	text,
		pertvalue	double precision,
		isrelpert	integer,
		t0		double precision,
		f0		double precision,
		normalized	integer,
		name		text,
		srcnr		integer,
		statnr		integer
		) $TABLECMDSUFFIX ;" >> sql_create
    echo " CREATE INDEX ${tablename}def_name_idx ON ${tablename}def $INDEXCMDSUFFIX ;" >> sql_create
    echo " CREATE TABLE ${tablename} (
        	Coeff		text,
		SimCoeff	text,
		PertSimCoeff	text,
		pertvalue	double precision,
		isrelpert	integer,
		t0		double precision,
		f0		double precision,
		normalized	integer,
		tb		double precision,
		te		double precision,
		fb		double precision,
		fe		double precision,
		name		text,
		srcnr		integer,
		statnr		integer
		) $TABLECMDSUFFIX ;" >> sql_create
    echo " CREATE INDEX ${tablename}_name_idx ON ${tablename} $INDEXCMDSUFFIX ;" >> sql_create
    echo " COMMIT; " >> sql_create
    $SQLCLIENT < sql_create
  fi
done
