#!/bin/bash

PREC=1e-6

run_subtest()
{
echo -n "$1: "

# check for input files
if [[ ! ( -r tBandpass.in_parmdb_$1 && -r tBandpass.in_parset_$1 && -r tBandpass.in_stdout_$1 ) ]]; then
    echo "fail (not all input files found)"
    return 1
fi

RETURN_VALUE=0

rm -f tBandpass.log_$1

# construct sky_model ParmDB
rm -rf tBandpass.sky_model
${BINDIR}/parmdb >> tBandpass.log_$1 2>&1 << EOF
create tablename='tBandpass.sky_model'
adddef RA:CP1 values=-1.92653767803
adddef DEC:CP1 values=1.09220917376
adddef StokesI:CP1 values=2
adddef StokesQ:CP1 values=0
adddef StokesU:CP1 values=0
adddef StokesV:CP1 values=0
adddef RA:CP2 values=-1.87653767803
adddef DEC:CP2 values=1.04220917376
adddef StokesI:CP2 values=2
adddef StokesQ:CP2 values=0
adddef StokesU:CP2 values=0
adddef StokesV:CP2 values=0
close
quit
EOF

# construct instrument_model ParmDB
rm -rf tBandpass.instrument_model
${BINDIR}/parmdb < tBandpass.in_parmdb_$1 >> tBandpass.log_$1 2>&1

# construct parset
cat > tBandpass.parset.tmp << EOF
user="$USER"
`cat tBandpass.in_parset_$1`
EOF

# solve
${BINDIR}/BBSrun tBandpass.parset.tmp >> tBandpass.log_$1 2>&1

# construct stdout.tmp
${BINDIR}/parmdb > tBandpass.stdout.tmp 2>/dev/null << EOF
open tablename='tBandpass.instrument_model'
show
close
quit
EOF

# verify output
# compare with expected output.
if diff tBandpass.stdout.tmp tBandpass.in_stdout_$1 >> tBandpass.log_$1 2>&1
then
    echo "ok"
else
    # compare with expected output excluding fractional numbers
    sed -e 's/[0-9]\+\.[0-9]\+/ /g' tBandpass.in_stdout_$1 | sed -e 's/e[+-][0-9]\+/ /g' > tBandpass.in_stdout_$1.strip
    sed -e 's/[0-9]\+\.[0-9]\+/ /g' tBandpass.stdout.tmp | sed -e 's/e[+-][0-9]\+/ /g' > tBandpass.stdout.tmp.strip
    if diff tBandpass.stdout.tmp.strip tBandpass.in_stdout_$1.strip >> tBandpass.log_$1 2>&1
    then
        # check if all (fractional) numbers are approximately equal.
        $lofar_sharedir/checkfloat tBandpass.stdout.tmp tBandpass.in_stdout_$1 $PREC >> tBandpass.log_$1 2>&1

        if [ $? != 0 ]
        then
            echo "fail (floating point differences > $PREC)"
            RETURN_VALUE=2
        else
            echo "ok (floating point differences <= $PREC)"
        fi
    else
        echo "fail (output excluding fractional numbers differs)"
        RETURN_VALUE=2
    fi
    rm -f tBandpass.in_stdout_$1.strip tBandpass.stdout.tmp.strip
fi

rm -f tBandpass.parset.tmp tBandpass.stdout.tmp
rm -rf tBandpass.instrument_model
rm -rf tBandpass.sky_model
return $RETURN_VALUE
}

WDIR=`pwd`
BUILD=${WDIR%/*}
BUILD=${BUILD##*/}
echo "build: "${BUILD}

BINDIR=${WDIR#*/LOFAR}
BINDIR=${WDIR%%${BINDIR}}/installed/${BUILD}/bin

if [[ ! -d ${BINDIR} ]]; then
    echo "error: ${BINDIR} is not a directory (should contain parmdb and BBSrun)"
    exit 1
else
    echo "bin  : "${BINDIR}
    echo
fi

if [[ ! -x ${BINDIR}/parmdb ]]; then
    echo "error: parmdb not found or not executable in ${BINDIR}"
    exit 1
fi

if [[ ! -x ${BINDIR}/BBSrun ]]; then
    echo "error: BBSrun not found or not executable in ${BINDIR}"
    exit 1
fi

echo "staring tests..."
echo "----------------"

run_subtest clean_constant
run_subtest clean_polc
run_subtest clean_band_constant
run_subtest noise_constant
run_subtest noise_polc
run_subtest noise_band_constant

echo "----------------"
echo "done."
