#!/bin/sh

# calibrate: script to calibrate a single MS.
#
# Copyright (C) 2009
# ASTRON (Netherlands Foundation for Research in Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$


#
#  FUNCTIONS
#

error()
{
    echo "error: $1"
    exit 1
}


#
# MAIN
#

# Identify ourselves.
echo "calibrate-part (script to calibrate a single MS)"
echo

# Check argument count.
if test $# != 19; then
  echo "usage:"
  echo "    calibrate-part <ignored> <ignored> <ignored> <ignored> rank"
  echo "        part filesystem partvds lofarroot wd key db-host db-port"
  echo "        db-name db-user solver-port parmdb sourcedb dry"
  exit 1
fi

shift
shift
shift
shift
shift   # ignore rank
part=$1
filesys=$2
partvds=$3
lofarroot=$4
wd=$5
key=$6
db_host=$7
db_port=$8
db_name=$9
db_user=$10
solver_port=$11
parmdb=$12
sourcedb=$13
dry=$14

echo "arguments:"
echo "    part: ${part}"
echo "    filesys: ${filesys}"
echo "    part vds: ${partvds}"
echo "    wd: ${wd}"
echo
echo "    lofarroot: ${lofarroot}"
echo
echo "    key: ${key}"
echo "    db: ${db_host}:${db_port}"
echo "    db name: ${db_name}"
echo "    db user: ${db_user}"
echo "    solver port: ${solver_port}"
echo "    parmdb: ${parmdb}"
echo "    sourcedb: ${sourcedb}"
echo "    dry: ${dry}"
echo

# Initialize lofar environment.
if test ! -r "${lofarroot}/lofarinit.sh"; then
    error "${lofarroot}/lofarinit.sh does not exist or cannot be read"
fi
. ${lofarroot}/lofarinit.sh

# Get the MS name from the vds file. If an MS name is given, use that instead.
#if test ! -d "${ms}"; then
#  tmp=`getparsetvalue ${ms} FileName` || error "Key \"FileName\" not found in: ${ms}"
#  ms=${tmp}
#fi

# Check preconditions.
if test ! -d "${part}"; then
    error "not a directory: ${part}"
fi

if test ! -d "${wd}"; then
    error "not a directory: ${wd}"
fi

# Set to working directory.
cd "${wd}" || error "could not change to: ${wd}"

# Create the parset for KernelControl.
echo "create ${wd}/${key}_kernel_$$.parset"
if test "${dry}" != "dry"; then
    cat > "${key}_kernel_$$.parset" << EOF
ObservationPart.Filesystem = "${filesys}"
ObservationPart.Path = "${part}"

BBDB.Key = "${key}"
BBDB.Name = "${db_name}"
BBDB.User = "${db_user}"
BBDB.Host = "${db_host}"
BBDB.Port = ${db_port}

ParmDB.Sky = "${part}/${sourcedb}"
ParmDB.Instrument = "${part}/${parmdb}"
EOF
fi

echo "execute KernelControl ${key}_kernel_$$.parset 0 > ${key}_kernel_$$.log 2>&1"
if test "${dry}" != "dry"; then
    KernelControl "${key}_kernel_$$.parset" 0 > "${key}_kernel_$$.log" 2>&1
fi

