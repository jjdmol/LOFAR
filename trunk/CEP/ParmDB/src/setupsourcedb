#!/bin/sh

# setupsourcedb: Script to create the BBS SourceDB for a distributed MS
#
# Copyright (C) 2009
# ASTRON (Netherlands Foundation for Research in Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$

# Find the path used to start the script.
pgmpath=`dirname $0`
pgmpath=`cd $pgmpath > /dev/null 2>&1  &&  pwd`

# Check if LOFARROOT is set.
if test "$LOFARROOT" = ""; then
  echo "LOFARROOT is undefined; source lofarinit.(c)sh first"
  exit 1
fi

# Get possible options.
overwrite=0
help=0
while [ $# != 0 ]
do
  if [ "$1" = "-h"  -o  "$1" = "-help"  -o  "$1" = "--help" ]; then
    help=1
    break
  elif [ "$1" = "-overwrite" ]; then
    overwrite=1
    shift
  elif [ "$1" = "-nooverwrite" ]; then
    overwrite=1
    shift
  else
    break
  fi
done

# Check arguments.
if test $# = 0  -o  $# = 1; then
  help=1
fi
if test $help = 1; then
  echo "run as:  setupsourcedb [-overwrite] ms-gds srccat [sourcedb-name]"
  echo "                       [clusterdesc] [logfile] [dry] [hfn]"
  echo "       -overwrite    overwrite sourcedb if already existing"
  echo "       ms-gds        name of global VDS file of the MS"
  echo "       srccat        name of ASCII file containing sources in the"
  echo "                     standard makesourcedb format"
  echo "       sourcedb-name   extension name of new sourcedb (defaults to sourcedb)"
  echo "                     e.g. for 100319.MS the name 100319.sourcedb is used"
  echo "       clusterdesc   name of clusterdesc file"
  echo "                     default is $HOME/CEP.clusterdesc"
  echo "       logfile       root name of logfile of each subprocess"
  echo "                     A sequence number gets appended to it"
  echo "                     default is setupsourcedb.log"
  echo "       dry           dry = do a dry run, i.e. only print commands"
  echo "       hfn           name of the hostfile (machinefile) created"
  echo "                     by startdistproc"
  echo "                     Only needed for test purposes"
  exit 1
fi

msvds=$1
shift
srccat=$1
shift
pdb=
if test $# != 0; then
  pdb=$1
  shift
fi
if test "$pdb" = ""; then
  pdb=sourcedb
fi
cdn=
if test $# != 0; then
  cdn=$1
  shift
fi
logfile=
if test $# != 0; then
  logfile=$1
  shift
fi
dry=
if test $# != 0; then
  dry=$1
  shift
fi
if test "$dry" = ""; then
  dry="nodry"
fi
hfn=
if test $# != 0; then
  hfn=$1
  shift
fi

# Generate a VDS file name for the sourcedb-s.
# This is the file that has to be used in pyparmdb.
# Its name is the MS-vds one with the extension replaced by $pdb.
vdsname=`echo $msvds | sed -e "s%\([^.\]*\)\.[^/]*$%\1.$pdb%"`
if test -e $vdsname; then
  if test $overwrite = 0; then
    echo "Error, sourcedb $vdsname already exists"
    exit 1
  else
    echo "Sourcedb $vdsname will be overwritten"
  fi
fi

# It is possible to give an MS instead of a VDS file.
# In that case only that MS is handled.
if test -d "$msvds"  -a  -e "$msvds/table.dat"; then
  echo "setupsourcedb-part '' '' '' '' 0 '$msvds' '' '$LOFARROOT' '$srccat' '$pdb' '$overwrite' '$dry'"
  setupsourcedb-part "" "" "" "" 0 "$msvds" "" "$LOFARROOT" "$srccat" "$pdb" "$overwrite" "$dry"
  exit
fi

# Get clusterdesc name from the VDS file if not given.
if test "$cdn" = ""; then
  cdn=`getparsetvalue $msvds ClusterDesc`
fi
# Make all file names absolute.
dn=`dirname $msvds`
msvds=`cd $dn > /dev/null; pwd`/`basename $msvds`
dn=`dirname $cdn`
cdn=`cd $dn > /dev/null; pwd`/`basename $cdn`
if test "$hfn" != ""; then
  dn=`dirname $hfn`
  hfn=`cd $dn > /dev/null; pwd`/`basename $hfn`
fi

# Start the processes on the various machines.
echo "startdistproc -mode 0 -nomasterhost -dsn '$msvds' -hfn '$hfn' -cdn '$cdn' -logfile '$logfile' $pgmpath/setupsourcedb-part '$LOFARROOT' '$srccat' '$pdb' '$overwrite' '$dry'"
startdistproc -mode 0 -nomasterhost -dsn "$msvds" -hfn "$hfn" -cdn "$cdn" -logfile "$logfile" $pgmpath/setupsourcedb-part "$LOFARROOT" "$srccat" "$pdb" "$overwrite" "$dry"

# Create a VDS file for the sourcedb-s by copying it.
# This is the file that has to be used in pyparmdb.
# Its name is the MS-vds one with the extension replaced by $pdb.
# Refer in it to the actual pdb filename.
echo "Create overall VDS $vdsname"
sed -e "s%\(Part.*\.FileName *= *[^ #]*\)%\1/$pdb%" $msvds > $vdsname
