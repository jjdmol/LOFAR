#!/bin/sh

# makeCMakeCache: create a CMakeCache file for the packages to be built
#
#  Copyright (C) 2009
#  ASTRON (Netherlands Foundation for Research in Astronomy)
#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  $Id$


# This script is used by dorubbuild to create an initial CMakeCache.
#
# Run as:   makeCMakeCache sourceroot lofarconf_file outfile
# E.g.      makeCMakeCache ~/LOFAR ~/LOFAR/lofarconf.in.private CMakeCache

if test $# != 3; then
  echo "Run as:   makeCMakeCache sourceroot lofarconf_file outfile"
  exit 1
fi

# Create output file.
rm -f $3
touch $3

# Find the packages to be built.
pkgs=
if test "$2" != ""; then
  for PKG in `sed -e 's/ //g' $2`
  do
    pkg=`echo $PKG | sed -e 's/#.*//' | sed -e 's%/% %g'`
    pkgs="$pkgs $pkg"
  done
fi

# Loop through all packages in the source tree and set to OFF except for
# the ones to be built.
# A package is a directory with a CMakeLists.txt containing a lofar package line.
for FIL in `find $1 -name CMakeLists.txt`
do
  egrep lofar_\(add_\)?package $FIL > /dev/null 2>&1
  if test $? = 0; then
    pkg=`dirname $FIL | sed -e s"%.*/%%"`
    if test "$pkg" != ""  -a  "$pkg" != "."; then
      opt=OFF
      for p in $pkgs
      do
        if test "$p" = "$pkg"; then
          opt=ON
          break
        fi
      done
      echo "//Build package $pkg?" >> $3
      echo "BUILD_$pkg:BOOL=$opt" >> $3
      echo "" >> $3
    fi
  fi
done

# By default do not build test programs.  
echo "//Build the testing tree." >> $3
echo "BUILD_TESTING:BOOL=OFF" >> $3
echo "" >> $3
# LOFAR needs to be built.
echo "//Build packageLOFAR?." >> $3
echo "BUILD_LOFAR:BOOL=ON" >> $3
echo "" >> $3

exit 0
