#!/bin/sh
#
#  gen_LofarPackageList.cmake.sh: generate file LofarPackageList.cmake
#
#  Copyright (C) 2009
#  ASTRON (Netherlands Foundation for Research in Astronomy)
#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  $Id$

# This script generates the file LofarPackageList.cmake. This CMake file
# initializes the <pkg>_SOURCE_DIR variables for each LOFAR package.


# Get the LOFAR source directory root
script_dir=$(cd $(dirname $0) && pwd)
lofar_root=$(echo $script_dir | sed -e "s%\(.*/LOFAR\)/.*%\1%")

# Just a safety net; this script must be inside the LOFAR tree.
if test "$script_dir" = "$lofar_root"; then
  echo "ERROR: $(basename $0) MUST be inside the LOFAR source tree!"
  exit 1
fi

# Open the output file
exec 3> $script_dir/LofarPackageList.cmake

# Write header
cat >&3 <<EOF
#
# Generated by $(basename $0) at $(date)
#
#                            ---- DO NOT EDIT ----
#
#  This file creates for each LOFAR package a cache variable containing the
#  relative path to its source directory. Note that CMake also provides this
#  information, but only AFTER a CMake project has been processed by
#  CMake. However, sometimes we need this information BEFORE CMake has
#  processed the directory. This file resolves this chicken-and-egg
#  problem. 
#
#  ATTENTION: This file must be included BEFORE the first project() command is
#  seen by CMake; either directly, or indirectly.
#
#  NOTE: This file must be kept up-to-date when project directories are added,
#  moved, or deleted. Use $(basename $0) to do so.
#
EOF

# Add a trailing slash to the directory path $lofar_root to ensure that, if
# it is a symbolic link, it is translated to the directory it links to.
for f in $(find $lofar_root/ -name CMakeLists.txt)
do
  # Search for the project() command, which looks like: project (MyProject ...)
  p=$(sed -n 's,^[ \t]*project[ \t]*([ \t]*\([^ \t)]\+\).*$,\1,ip' $f)
  if test "$p" != ""; then
    d=$(dirname $f | sed -n "s%$lofar_root/%%p")
    if test "$d" != ""; then
      echo >&3 "set(${p}_SOURCE_DIR $d CACHE STATIC \"$p source directory\")"
    fi
  fi
done

# Close the output file
exec 3>&-
