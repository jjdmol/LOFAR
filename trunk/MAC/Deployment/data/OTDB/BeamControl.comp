# -- BeamControl --
#
# Component description of the BeamController
#
# $Id$
#
# name          name of the node
# version       version of this node specification
# quality       stable | test | development
# constraint    python script to check multiparameter constrains
#               may return OK, NotOK, Unknown
# description   What this module does.
#
# Note 1: to seperate the parameterlines from the Node lines each node line
#         begins with the label 'Node'.
# Note 2: To define dependancies between nodes the label 'Uses' is used.
#         A + sign may be added to the versionnr to indicate that the given
#         versionnr is the minimal version the module schould have. (NOT YET IMPLEMENTED)
#


#########################################################################################################
# -- Station Operations --
#      name       		 vers   qual  constr.            descr.
#--------------------------------------------------------------------------------------------------------
node  BeamControl      1.0.0  development  'node constraint'  "Station BeamControl"

#
# name				name of the parameter
# direction			I: input only; O: changes will be logged during runtime; IO: both
# type				parametertype: should exist in param_type table of OTDB (= ParamTypeConv)
# unit				name of unit of parameter (should exist in unit table (= UnitConv)
# pruninglevel		when parameter values are thrown away from the database. (NOT YET USED)
# validationMoment	moment the parameter values is validated (NOT YET USED)
# value				value(range) of the parameter.
# constraint		script to run to check its value
# description		what the parameter manages.
#--------------------------------------------------------------------------------------------------------
#    name                    dir. type   unit   prun. vm   value                   constr.  descr.
#--------------------------------------------------------------------------------------------------------
par  instanceNr		     I	  uint	 -	10    0	   0			   -	    'BeamController instancenumber'
par  startTime		     I	  uint	 -	10    0	   >>Observation.startTime -	    'Starttime of observation'
par  stopTime		     I	  uint	 -	10    0	   >>Observation.stopTime  -	    'Stoptime of observation'
par  subarrayName	     I	  text	 -	10    0	   0			   -	    'Unique name of the subarray'
par  subbands		     I	  vuint	 -	10    0	   0			   -	    'Subbands in the subarray'
par  beamlets		     I	  vuint	 -	10    0	   0			   -	    'The beamlets allocated on the subarray'
par  sourceTimes	     I	  vuint	 -	10    0	   0			   -	    'Relative time (to starttime) when to activate the declination and rightAscentions'
par  declination	     I	  vdbl	 -	10    0	   0			   -	    'Declination(s) of the source(s)'
par  rightAscention	     I	  vdbl	 -	10    0	   0			   -	    'rightAscention(s) of the source(s)'
par  directionType	     I	  text	 -	10    0	   0			   -	    'Coord.system used for sources'

