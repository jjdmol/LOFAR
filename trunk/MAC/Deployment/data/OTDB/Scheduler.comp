# -- Sceduler--
#      	name        vers	qual		constr.				descr.
#--------------------------------------------------------------------------------------------------------
node	Scheduler	1.0.0	development	'node constraint'	"Scheduler"

#	name			dir.	type	unit	prun.	vm	value	constr.	descr.
#--------------------------------------------------------------------------------------------------------
par CEPProcessingUnits		I	uint	-	10	0 	0	-	"CEP processing requirements"
par contactEmail		I	text	-	10	0 	''	-	"email of contact person"
par contactName			I	text	-	10	0 	''	-	"name of contact person"
par contactPhone		I	text	-	10	0 	''	-	"phone number of contact person"
par firstPossibleDay		I	uint	-	10	0 	0	-	"first possible date for scheduling"
par fixedDay			I	bool	-	10	0	false	-	"fixes the task to the scheduled day"
par fixedTime			I	bool	-	10	0	false	-	"fixes the task to the scheduled time (not day)"
par lastPossibleDay		I	uint	-	10	0 	0	-	"last possible date for scheduling"
par late			I	bool	-	10	0	false	-	"true takes earliest time in case of ambiguity"
par nightTimeWeightFactor	I	uint	-	10	0 	0	-	"weight factor curve for penalty calculation"
par offlineProcessingUnits	I	uint	-	10	0 	0	-	"offline processing requirements"
par predecessor			I   	uint    -   	10	0	0	-	"predecessor Task ID"
par predMaxTimeDif		I   	text    -	10	0 	''	-	"maximal distance to predecessor"
par predMinTimeDif		I   	text    -	10	0 	''	-	"minimal distance to predecessor"
par priority			I	flt	-	10	0	0.0	-	"the task priority"
par projectName			I	text	-	10	0	''	-	"name of the project"
par referenceFrame		I	uint	-	10	0	0	-	"reference frame (0=J2000,1=B1950)"
par storageUnits		I	int	-	10	0	0	-	"storage requirements (negative for cleanup tasks)"
par taskDuration		I	uint	-	10	0	0	-	"duration of the task in seconds"
par taskID			I	uint	-	10	0	0	-	"internal scheduler task ID"
par taskName			I	text	-	10	0	''	-	"name of the task"
par taskType		  	I	uint	-	10	0	0	-	"task type code"
par unscheduledReason		I	uint	-	10	0	0	-	"unscheduled reason error code"
par windowMaximumTime		I	text	-	10	0	''	-	"latest task end time during the day"
par windowMinimumTime		I	text	-	10	0	''	-	"earliest task start time during the day"
