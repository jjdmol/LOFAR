V 10
3
LANG:1 12 antennaField
LANG:6 8 (NoName)
LANG:30 8 (NoName)
PANEL,-1 -1 1013 750 N "_3DFace" 0
"main()
{     
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");
  
  baseDP=g_currentDatapoint;
  
  int mainpanel_horSize; 
  int mainpanel_vertSize;
       
  strPanelName    = \"antennaField\";
  strModuleName   = myModuleName();  
  
  // get PanelSize to determine scaling and offsets
  if ( panelSize( \"\" , mainpanel_horSize , mainpanel_vertSize) != 0 ) {
    LOG_FATAL(\"Station.pnl:initialize|Error: couldn't define the size of the mainPanel : \" + strPanelName);
  } else {
    mainpanel_midX = floor( mainpanel_horSize/2 );
    mainpanel_midY = floor( mainpanel_vertSize/2 );
  
    // Replace the X & Y grid lines to the calculated center 
    Yaxis.foreCol(\"STD_windows_available\");
    Xaxis.foreCol(\"STD_windows_available\");
    Yaxis.position(mainpanel_midX , mainpanel_horSize );
    Xaxis.position(0              , mainpanel_midY    );
    
    // get all dps from the type AntennaPattern
    // each DP represents a different type of Antennas
    // we need the lot to give a pulldown window where the kind of 
    // representation can be chosen.
    //
    // The first found will be drawn and will be the default choice.    

    bool fill=true;
    for (int i=0; i<=1;i++) {
      if (dpConnect(\"updatePositions\",fill,sysName+\"remoteStation.\"+arrayList.text(i)+\".centerOL\",
                                       sysName+\"remoteStation.\"+arrayList.text(i)+\".centerNB\",
                                       sysName+\"remoteStation.\"+arrayList.text(i)+\".centerH\",
                                       sysName+\"remoteStation.\"+arrayList.text(i)+\".centerOL:_online.._invalid\") == -1) {
        LOG_DEBUG(\"LOFAR_Netherlands.pnl:main| couldn't connect to \"+sysName+\"remoteStation.\"+arrayList.text(i)+\".centerOL \"+ getLastError());
      }  

      if (fill) {
        fill=false;
      }
    }
  }
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"LOFAR_Netherlands.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"LOFAR_Netherlands.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    redraw(arrayList.text(arrayList.number()));
  }
}

void updatePositions(string dp1, float cOL,
                     string dp2, float cNB,
                     string dp3, float cH,
                     string dp7, bool invalid) {
  
  // Check if the update concerns the current view
  string txt=arrayList.text(arrayList.number());
  
  if (strpos(dp1,txt) < 0) {    //not found match
    return;
  }
  
  dyn_string unsortOL=dpNames(sysName+txt+\"*.deltaX;\",\"Antenna\");
  dyn_string unsortNB=dpNames(sysName+txt+\"*.deltaY;\",\"Antenna\");
  dyn_string unsortH= dpNames(sysName+txt+\"*.deltaH;\",\"Antenna\");
  dyn_string OL=unsortOL;
  dyn_string NB=unsortNB;
  dyn_string H=unsortH;
  
  // since we have Antenna's with 1 digit and 2 digits we need to resort the dynstrings here, otherwise we get them as:
  // HBA0 HBA1 HBA10 HBA11-HBA19 HBA 2 HBA 20 etc
  //
  
  for (int i=1; i<= dynlen(unsortOL);i++) {
    string ant = strsplit(unsortOL[i],\":.\" )[2];
    int idx = substr(ant,3);
    OL[idx+1]=unsortOL[i];
    NB[idx+1]=unsortNB[i];
    H[idx+1]=unsortH[i];         
  }
  
        
  // found match, save found strings and redraw screen
  
  centerOL = cOL;
  centerNB = cNB;
  centerH  = cH;
  dpGet(OL,antennaOffsetsOL);
  dpGet(NB,antennaOffsetsNB);
  dpGet(H,antennaOffsetsH);
  

  
  redraw(txt);
}
" 0
 E E E E 1 0 0 0  20 20
""0  1
E "#uses \"navPanel.ctl\"

string baseDP=\"\";
int mainpanel_midX;
int mainpanel_midY;
dyn_string refNames;
dyn_string arrays;

float centerOL;
float centerNB;
float centerH;
dyn_float antennaOffsetsOL;
dyn_float antennaOffsetsNB;
dyn_float antennaOffsetsH;

string strPanelName;
string strModuleName;

void clearRefNames() {
  // remove all symbols because new ones will be added
  for (int i=1; i <= dynlen(refNames); i++) {
    removeSymbol(strModuleName,\"\",refNames[i]);
  }
  dynClear(refNames);
}


void redraw(string mode) {
  
  float maxXOffsetValue=1.;
  float maxYOffsetValue=1.;
  float expandFactorX;
  float expandFactorY;
  int   xPos_AddSymbol;
  int   yPos_AddSymbol;
  string addPanelName;
  
  navFunct_clearGlobalLists();
  
  g_stationList[1] = navFunct_bareDBName(sysName);
  
  LOG_DEBUG(\"Station.pnl:redraw|Mode: \"+mode);
  if (strpos(mode,\"LBA\") > -1 || strpos(mode,\"LBL\") > -1 || strpos(mode,\"LBH\") > -1) {
    addPanelName    = \"objects/Hardware/Station_LBA.pnl\";
  } else if (strpos(mode,\"HBA\") > -1) {
    addPanelName    = \"objects/Hardware/Station_HBA.pnl\";
  }
  
        
  if (dynlen(refNames) > 0) {
    clearRefNames();
  }
   
  // determine max values and calculate scaling factors
  for (int i=1; i<= dynlen(antennaOffsetsOL); i++) { 
    if ( maxXOffsetValue < fabs(antennaOffsetsOL[i]) ) maxXOffsetValue = fabs(antennaOffsetsOL[i]);
    if ( maxYOffsetValue < fabs(antennaOffsetsNB[i]) ) maxYOffsetValue = fabs(antennaOffsetsNB[i]);
  }

  LOG_DEBUG(\"Station.pnl:redraw|mainpanel_midX: \"+mainpanel_midX);
  LOG_DEBUG(\"Station.pnl:redraw|mainpanel_midY: \"+mainpanel_midY);
  LOG_DEBUG(\"Station.pnl:redraw|maxXOffsetValue: \"+maxXOffsetValue);
  LOG_DEBUG(\"Station.pnl:redraw|maxYOffsetValue: \"+maxYOffsetValue);
  
  expandFactorX = floor((mainpanel_midX-30) / maxXOffsetValue);
  expandFactorY = floor((mainpanel_midY-30) / maxYOffsetValue);
  
  LOG_DEBUG(\"Station.pnl:redraw|expandFactorX: \"+expandFactorX);
  LOG_DEBUG(\"Station.pnl:redraw|expandFactorY: \"+expandFactorY);
  
  // To make the field a bit more square we will multiply all by the smallest expandfactor
  if (expandFactorX > expandFactorY) {
    expandFactorX=expandFactorY;
  } else {
    expandFactorY=expandFactorX;
  }

  LOG_DEBUG(\"Station.pnl:redraw|Final expandfactors: \" + expandFactorX+\" \"+ expandFactorY);
  
  // set the hardware selectable items
  // For this panel the Antenna's in a choosen layout should be selectable 
  
  //  now start adding symbols to panel
  int ref =   1;
  for (int i = 1; i <= dynlen(antennaOffsetsOL); i++ ) {
    if (antennaOffsetsOL[i] !=0 || antennaOffsetsNB[i] != 0) {
      int XRCU = 2 * (i-1);
      int YRCU = XRCU+1;
      string xDP=baseDP+\"_PIC_Cabinet\"+navFunct_receiver2Cabinet(XRCU)+\"_Subrack\"+
                 navFunct_receiver2Subrack(XRCU)+\"_RSPBoard\"+navFunct_receiver2RSP(XRCU)+\"_RCU\"+XRCU;
      string yDP=baseDP+\"_PIC_Cabinet\"+navFunct_receiver2Cabinet(YRCU)+\"_Subrack\"+
                 navFunct_receiver2Subrack(YRCU)+\"_RSPBoard\"+navFunct_receiver2RSP(YRCU)+\"_RCU\"+YRCU;
      dynAppend(g_RCUList,XRCU);
      dynAppend(g_RCUList,YRCU);
      refNames[ref]=\"ant\"+(ref);
      xPos_AddSymbol = mainpanel_midX + (antennaOffsetsOL[i] * expandFactorX);
      yPos_AddSymbol = mainpanel_midY - (antennaOffsetsNB[i] * expandFactorY);
      
    
      if (  addSymbol(  strModuleName,                   // Stay in this module
	     	        \"\",                  // Name of this panel
		        addPanelName,                    // Panel to add
		        refNames[ref],                     // Ref of the addedPanel
		        makeDynString( \"$aNr:\" + (i-1) ,     // Define all $values
		                       \"$aOL:\" + antennaOffsetsOL[i]  ,    
		                       \"$aNB:\" + antennaOffsetsNB[i]  ,
		                       \"$aH:\"  + antennaOffsetsH[i]),                  // of particular addedpanel
		        xPos_AddSymbol,                  // Xpos of the AddedSymbol
		        yPos_AddSymbol,                  // Ypos of the AddedSymbol
		        0,                               // angle
		        1    ,1                          // zoomX , zoomY
          ) < 0 ) {
	    LOG_ERROR(\"Station.pnl:redraw|Error Appending antenna : \" + i + \" in this panel.\");
      }
      ref++;
    }
  }
  
  // trigger that the panel values are calculated and ready
  dynClear(highlight);
  dynClear(strHighlight);
  
  // set panel to ready
  g_objectReady=true;
  
  navPanel_setEvent(\"Station.pnl\",\"Update\");
}

void updateField() {
  
  // Check if the update concerns the current view
  string txt= arrayList.text(arrayList.number());

  dyn_string unsortOL=dpNames(sysName+txt+\"*.deltaX;\",\"Antenna\");
  dyn_string unsortNB=dpNames(sysName+txt+\"*.deltaY;\",\"Antenna\");
  dyn_string unsortH= dpNames(sysName+txt+\"*.deltaH;\",\"Antenna\");
  dyn_string OL=unsortOL;
  dyn_string NB=unsortNB;
  dyn_string H=unsortH;
               
  
  // since we have Antenna's with 1 digit and 2 digits we need to resort the dynstrings here, otherwise we get them as:
  // HBA0 HBA1 HBA10 HBA11-HBA19 HBA 2 HBA 20 etc
  //
  
  for (int i=1; i<= dynlen(unsortOL);i++) {
    string ant = strsplit(unsortOL[i],\":.\" )[2];
    int idx = substr(ant,3);
    OL[idx+1]=unsortOL[i];
    NB[idx+1]=unsortNB[i];
    H[idx+1]=unsortH[i];         
  }
  
  string field=sysName+\"remoteStation.\"+txt;
  if (dpExists(field+\".centerOL:_online.._value\")) {
    // found match, save found strings and redraw screen
    dpGet(field+\".centerOL:_online.._value\",centerOL,
          field+\".centerNB:_online.._value\",centerNB,
          field+\".centerH:_online.._value\",centerH);
     dpGet(OL,antennaOffsetsOL);          
     dpGet(NB,antennaOffsetsNB);          
     dpGet(H,antennaOffsetsH);          
    redraw(txt);
  } else {
    LOG_ERROR(\"Station.pnl:updateField|Error, couldn't find:\"+field+\".centerOL:_online.._value\");
  }
}

" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
4 1
"Yaxis"
""
1 100 1250 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:1 0 
LANG:6 0 
LANG:30 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E  100 1000 100 1
4 2
"Xaxis"
""
1 249 100 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
2 0 0 0 0 0
E E E
0
3
LANG:1 0 
LANG:6 0 
LANG:30 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E  0 100 1499 100
2 26
"PRIMITIVE_TEXT1"
""
1 796 12 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 796 12 869 26
0 2 2 "0s" 0 0 0 192 0 0  796 12 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 13 Select Array:
1 76 5 "" 2190
0
1 77 5 "" 2188
0
1 78 5 "86" 1
0
1 79 5 "" 2192
0
19 53
"arrayList"
""
1 889 9 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 887 7 951 51
2
T 
1
LANG:1 3 HBA

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 3 LBA

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E "main(int button)
{
  updateField();
}" 0

0
LAYER, 1 
1
LANG:1 6 Layer2
1 54 2 "" 40
0
1 55 2 "" 41
0
1 56 2 "" 42
0
1 57 2 "" 43
0
1 58 2 "" 44
0
1 59 2 "" 45
0
1 60 2 "" 46
0
1 61 2 "" 47
0
1 62 2 "" 48
0
1 63 2 "" 49
0
1 64 2 "" 50
0
1 65 2 "" 51
0
1 66 2 "" 52
0
1 67 2 "" 53
0
1 68 2 "" 54
0
1 69 2 "" 55
0
1 70 2 "" 56
0
1 71 2 "" 57
0
1 72 2 "" 58
0
1 73 2 "" 59
0
1 74 2 "" 60
0
1 75 2 "" 61
0
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 2 "PANEL_REF3"
"objects\\compass.pnl" 212 350 T 12 0.742857142857143 0 0.752688172043011 -29.7142857142857 -52.6881720430108
0
3 5 "PANEL_REF6"
"objects\\Hardware\\Station_Cabinet_top.pnl" 298 258 T 13 1 0 1 40 -100
0
0