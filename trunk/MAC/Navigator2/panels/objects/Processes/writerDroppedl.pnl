V 11
1
LANG:1 0 
PANEL,-1 -1 430 81 N "_3DFace" 1
"$observation"
"main()
{
  observation = $observation;
  
  obsDP=MainDBName+claimManager_nameToRealName(\"LOFAR_ObsSW_\"+observation);

  if (navFunct_dpReachable(obsDP)){
    if (dpConnect(\"obsRunning\", obsDP+\".runState:_online.._value\",
                                obsDP+\".runState:_online.._invalid\")){
      setValue(\"writerObject\", \"backCol\", \"Lofar_dpdoesnotexist\");
    }
  } else {
    setValue(\"writerObject\", \"backCol\", \"Lofar_dpOffline\");
  }
}

private void obsRunning(string dp1,string running,
                        string dp2,bool invalid) {

  if (!invalid) {
    if (strpos(running,\"Running\")>=0) {
      reload();
    } else {
      setValue(\"writerObject\", \"backCol\", \"Lofar_off\");
    }
  } else {
    setValue(\"writerObject\", \"backCol\", \"Lofar_dpOffline\");
  }       
}
  
private void reload() {
  
  // get all the writers used by this observation
  writers = navFunct_getWritersForObservation(observation);

  // change all found DP's to contain all the elements that contain the .dropping
  if (connected) {
    dpDisconnect(\"writerCB\",connectTo);
    dynClear(connectTo);
  }

  for (int i=1; i<= dynlen(writers); i++) {
    dynAppend(connectTo,writers[i]+\".dropped:_online.._value\");
  }
  if (dynlen(writers) > 0) baseDP = writers[1];  
  // check if the required datapoint for this view are enabled and accessible
  if (navFunct_dpReachable(CEPDBName) && dynlen(connectTo)>0 ){
    if (dpConnect(\"writerCB\", connectTo) == -1) {
      setValue(\"writerObject\", \"backCol\", \"Lofar_dpdoesnotexist\");
    }
  } else {
    setValue(\"writerObject\", \"backCol\", \"Lofar_dpOffline\");
  }
}

void writerCB(dyn_string dps, dyn_int values)
{
  // Here we get dropped values. if a station is dropping
  string toolTipText = observation;
  string color = \"Lofar_operational\";
  string fileName=\"\";
  int written=0;
  int cnt=0;
  
  for (int i = 1; i<= dynlen(values); i++) {
    int val = values[i];
    dpGet(writers[i]+\".written\",written);
    dpGet(writers[i]+\".fileName\",fileName);

    if (val >0) {
      cnt++;    
    }
    
    if (val>= written/2) {
      color = \"Lofar_broken\";
    }
  }
  if (cnt >= dynlen(values)/2) {
    color = \"Lofar_broken\";
  }    

  setValue(\"writerObject\",\"toolTipText\",toolTipText);
  setValue(\"writerObject\", \"backCol\", color);

 }" 0
 E "main(int x, int y)
{
  click();
}" 0
 "main()
{
  rClick();
}" 0
 "main(int x, int y)
{
  dblClick();
}" 0
 1 -1 -1 0  0 0
""0  1
E "#uses \"navPanel.ctl\"

string baseDP;
string obsDP;
string observation;
dyn_string connectTo;
dyn_string writers;
bool connected = false;
bool bDoubleClicked  = false;

// routine for single mouse click
void click() {

}

// routine for double mouse click
void dblClick() {
  // indicate this is a doubleClick
  bDoubleClicked = true;   
 
  if (dpExists(baseDP) ) {
    LOG_DEBUG(\"writerDroppedl.pnl:DoubleClick|Setting currentDatapoint from : \"+g_currentDatapoint+\" to \"+baseDP);
    g_currentDatapoint=baseDP;
    //we also have to set the tabctrl to think this was initiated from the ProcessesTab, otherwise we will get the wrong panel.
    navPanel_setEvent(\"Processes\",\"ChangeTab\");
  }

  
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;  
}                       

// routine for right mouse click
void rClick() {

}                       " 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 0
"writerObject"
""
1 230 150 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

0 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E "main()
{
  click();
}" 0
 0 1 1 2 1 E U  1 E 0 0 24 13
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0
