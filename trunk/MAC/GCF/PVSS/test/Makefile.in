# Makefile.in generated by automake 1.9.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Some common rules.

SOURCES = $(salEcho_SOURCES) $(salPing_SOURCES) $(tGSAPerformance_SOURCES) $(tGSAService_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = salEcho$(EXEEXT) salPing$(EXEEXT) \
	tGSAService$(EXEEXT) tGSAPerformance$(EXEEXT)
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.common
subdir = SAL/test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/autoconf_share/am_rpm_init.m4 \
	$(top_srcdir)/autoconf_share/lofar_docxx.m4 \
	$(top_srcdir)/autoconf_share/lofar_external.m4 \
	$(top_srcdir)/autoconf_share/lofar_general.m4 \
	$(top_srcdir)/autoconf_share/lofar_init.m4 \
	$(top_srcdir)/autoconf_share/lofar_internal.m4 \
	$(top_srcdir)/autoconf_share/lofar_logger.m4 \
	$(top_srcdir)/autoconf_share/lofar_pvss.m4 \
	$(top_srcdir)/autoconf_share/lofar_qatools.m4 \
	$(top_srcdir)/autoconf_share/lofar_shmem.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__objects_1 =
am_salEcho_OBJECTS = $(am__objects_1) Echo.$(OBJEXT) Service.$(OBJEXT) \
	Echo_Protocol.$(OBJEXT)
salEcho_OBJECTS = $(am_salEcho_OBJECTS)
am__DEPENDENCIES_1 =
am_salPing_OBJECTS = $(am__objects_1) Ping.$(OBJEXT) \
	Echo_Protocol.$(OBJEXT)
salPing_OBJECTS = $(am_salPing_OBJECTS)
am_tGSAPerformance_OBJECTS = $(am__objects_1) \
	tGSAPerformance.$(OBJEXT) PerformanceService.$(OBJEXT)
tGSAPerformance_OBJECTS = $(am_tGSAPerformance_OBJECTS)
am_tGSAService_OBJECTS = $(am__objects_1) tGSAService.$(OBJEXT) \
	Service.$(OBJEXT)
tGSAService_OBJECTS = $(am_tGSAService_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(salEcho_SOURCES) $(salPing_SOURCES) \
	$(tGSAPerformance_SOURCES) $(tGSAService_SOURCES)
DIST_SOURCES = $(salEcho_SOURCES) $(salPing_SOURCES) \
	$(tGSAPerformance_SOURCES) $(tGSAService_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(sysconfdir)"
sysconfDATA_INSTALL = $(INSTALL_DATA)
DATA = $(sysconf_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOCPP = @DOCPP@
DOCPPFLAGS = @DOCPPFLAGS@
DOXYGEN = @DOXYGEN@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
HAVE_APS_FALSE = @HAVE_APS_FALSE@
HAVE_APS_TRUE = @HAVE_APS_TRUE@
HAVE_COMMON_FALSE = @HAVE_COMMON_FALSE@
HAVE_COMMON_TRUE = @HAVE_COMMON_TRUE@
HAVE_DOCPP_FALSE = @HAVE_DOCPP_FALSE@
HAVE_DOCPP_TRUE = @HAVE_DOCPP_TRUE@
HAVE_DOXYGEN_FALSE = @HAVE_DOXYGEN_FALSE@
HAVE_DOXYGEN_TRUE = @HAVE_DOXYGEN_TRUE@
HAVE_GCFCOMMON_FALSE = @HAVE_GCFCOMMON_FALSE@
HAVE_GCFCOMMON_TRUE = @HAVE_GCFCOMMON_TRUE@
HAVE_GCFPAPROT_FALSE = @HAVE_GCFPAPROT_FALSE@
HAVE_GCFPAPROT_TRUE = @HAVE_GCFPAPROT_TRUE@
HAVE_GCFPICEPPROT_FALSE = @HAVE_GCFPICEPPROT_FALSE@
HAVE_GCFPICEPPROT_TRUE = @HAVE_GCFPICEPPROT_TRUE@
HAVE_GCFPIRTCPROT_FALSE = @HAVE_GCFPIRTCPROT_FALSE@
HAVE_GCFPIRTCPROT_TRUE = @HAVE_GCFPIRTCPROT_TRUE@
HAVE_GCFTM_FALSE = @HAVE_GCFTM_FALSE@
HAVE_GCFTM_TRUE = @HAVE_GCFTM_TRUE@
HAVE_LOG4CPLUS_FALSE = @HAVE_LOG4CPLUS_FALSE@
HAVE_LOG4CPLUS_TRUE = @HAVE_LOG4CPLUS_TRUE@
HAVE_PVSS_FALSE = @HAVE_PVSS_FALSE@
HAVE_PVSS_TRUE = @HAVE_PVSS_TRUE@
HAVE_SHMEM_FALSE = @HAVE_SHMEM_FALSE@
HAVE_SHMEM_TRUE = @HAVE_SHMEM_TRUE@
HAVE_TRANSPORT_FALSE = @HAVE_TRANSPORT_FALSE@
HAVE_TRANSPORT_TRUE = @HAVE_TRANSPORT_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LOFARROOT = @LOFARROOT@
LOFAR_DEPEND = @LOFAR_DEPEND@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKE_RPMS = @MAKE_RPMS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
RPMBUILD_PROG = @RPMBUILD_PROG@
RPM_ARGS = @RPM_ARGS@
RPM_CONFIGURE_ARGS = @RPM_CONFIGURE_ARGS@
RPM_DIR = @RPM_DIR@
RPM_PROG = @RPM_PROG@
RPM_RELEASE = @RPM_RELEASE@
RPM_TARBALL = @RPM_TARBALL@
RPM_TARGET = @RPM_TARGET@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
docpp_found = @docpp_found@
doxygen_dot_found = @doxygen_dot_found@
doxygen_found = @doxygen_found@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
lofar_compiler = @lofar_compiler@
lofar_doctool = @lofar_doctool@
lofar_root = @lofar_root@
lofar_root_libdir = @lofar_root_libdir@
lofar_sharedir = @lofar_sharedir@
lofar_top_srcdir = @lofar_top_srcdir@
lofar_use_root = @lofar_use_root@
lofar_variant = @lofar_variant@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AM_CPPFLAGS = -I$(top_srcdir)/SAL/src
TESTS = tGSAService #salEcho salPing
salEcho_SOURCES = $(BUILT_SOURCES) Echo.cc Service.cc Echo_Protocol.cc
salEcho_LDADD = ../src/libsal.la $(LOFAR_DEPEND)
salEcho_DEPENDENCIES = ../src/libsal.la $(LOFAR_DEPEND)
salPing_SOURCES = $(BUILT_SOURCES) Ping.cc  Echo_Protocol.cc
salPing_LDADD = ../src/libsal.la $(LOFAR_DEPEND)
salPing_DEPENDENCIES = ../src/libsal.la $(LOFAR_DEPEND)
tGSAService_SOURCES = $(BUILT_SOURCES) tGSAService.cc Service.cc
tGSAService_LDADD = ../src/libsal.la $(LOFAR_DEPEND)
tGSAService_DEPENDENCIES = ../src/libsal.la $(LOFAR_DEPEND)
tGSAPerformance_SOURCES = $(BUILT_SOURCES) tGSAPerformance.cc PerformanceService.cc
tGSAPerformance_LDADD = ../src/libsal.la $(LOFAR_DEPEND)
tGSAPerformance_DEPENDENCIES = ../src/libsal.la $(LOFAR_DEPEND)
AUTOGEN = autogen
SUFFIXES = .ph
BUILT_SOURCES = Echo_Protocol.ph
EXTRA_DIST = $(sysconf_DATA)
sysconf_DATA = \
	salEcho.conf \
	salPing.conf

#CLEANFILES += tca.* .inslog* *.cc *.h $(top_builddir)/pure_cache docxxhtml/* *.log docxx_hdrs.names
DISTCLEANFILES = \
      pkgext*\
      lofar_config.*\
      .doxygenrc \
      *.spec \
      *.err


# Rules for building documentation using doxygen or doc++.
# Default output directory is docxxhtml.
DOCDIR := docxxhtml

#
#
# Target to be able to do a system build.
# By default it does a check, but no install.
WITH_CLEAN = 0
WITH_INSTALL = 0
WITH_CHECK = 1
CHECKTOOL = 

# Define the default variables to export to the test scripts.
TESTS_ENVIRONMENT = LOFARROOT="$(LOFARROOT)" \
                    lofar_sharedir="$(lofar_sharedir)" \
                    prefix="$(prefix)" \
                    top_srcdir="$(top_srcdir)" \
                    srcdir="$(srcdir)" \
		    CHECKTOOLPROGS="$(CHECKTOOLPROGS)" \
		    MPIBIN="$(MPIBIN)" \
		    AIPSPP="$(AIPSPP)"

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .ph .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  SAL/test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  SAL/test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
salEcho$(EXEEXT): $(salEcho_OBJECTS) $(salEcho_DEPENDENCIES) 
	@rm -f salEcho$(EXEEXT)
	$(CXXLINK) $(salEcho_LDFLAGS) $(salEcho_OBJECTS) $(salEcho_LDADD) $(LIBS)
salPing$(EXEEXT): $(salPing_OBJECTS) $(salPing_DEPENDENCIES) 
	@rm -f salPing$(EXEEXT)
	$(CXXLINK) $(salPing_LDFLAGS) $(salPing_OBJECTS) $(salPing_LDADD) $(LIBS)
tGSAPerformance$(EXEEXT): $(tGSAPerformance_OBJECTS) $(tGSAPerformance_DEPENDENCIES) 
	@rm -f tGSAPerformance$(EXEEXT)
	$(CXXLINK) $(tGSAPerformance_LDFLAGS) $(tGSAPerformance_OBJECTS) $(tGSAPerformance_LDADD) $(LIBS)
tGSAService$(EXEEXT): $(tGSAService_OBJECTS) $(tGSAService_DEPENDENCIES) 
	@rm -f tGSAService$(EXEEXT)
	$(CXXLINK) $(tGSAService_LDFLAGS) $(tGSAService_OBJECTS) $(tGSAService_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Echo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Echo_Protocol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PerformanceService.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Ping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Service.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tGSAPerformance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tGSAService.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sysconfdir)" || $(mkdir_p) "$(DESTDIR)$(sysconfdir)"
	@list='$(sysconf_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(sysconfDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(sysconfdir)/$$f'"; \
	  $(sysconfDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(sysconfdir)/$$f"; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(sysconfdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sysconfdir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-sysconfDATA

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-sysconfDATA

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip install-sysconfDATA \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-sysconfDATA

%.ph: %.prot
	$(AUTOGEN) --writable -L $(datadir)/GCF/TM $<

%.conf: sal-test.conf.in
	ln -sf $< $@

clean-local:
	rm -f *.ph

# CLEANFILES cannot delete directories, therefore use target clean-generic.
clean-generic:
	-rm -rf ti_files
	-rm -f tca.*
	-rm -f .inslog*
	-rm -f *.log
	-rm -f *.i
	-rm -f *.s
	-rm -f src/*.h
	-rm -f *.hh
	-rm -f *.cc
	-rm -f *.cs_cc
	-rm -f doxygen.cfg
	-rm -rf $(top_builddir)/pure_cache
	-rm -rf docxxhtml

# Rule to delete all files generated by bootstrap.
# This is sometimes needed when switching to another version of autotools.
confclean: pkgclean
pkgclean: distclean
	  -rm -rf $(srcdir)/autom4te.cache
	  -rm -f $(srcdir)/config.*
	  -rm -f $(srcdir)/{configure,aclocal.m4,depcomp,install-sh,ltmain.sh}
	  -rm -f $(srcdir)/{Makefile.in,missing,mkinstalldirs}
	  -rm -f $(srcdir)/{Makefile.common,autoconf_share,lofarconf}

# Make the rpm if possible.
# Note:
# MAKE_RPMS is set by lofar_init and possibly overwritten by lofar_general.
# Older package releases include Makefile.common from $lofar_sharedir
# with the effect that the include is handled by make.
# Newer releases (as of 1-11-2005) include Makefile.common from $top_srcdir
# with the effect that the include is handled by automake.
# To be compatible with older releases, it was decided that the MAKE_RPMS
# should be handled by make, hence the blank before endif. Otherwise
# automake complains about an endif without an if.
 ifeq "$(MAKE_RPMS)" "true"
   rpm: dist @RPM_TARGET@
   $(RPM_TARGET): $(DISTFILES)
	${MAKE} dist
	-mkdir -p $(RPM_DIR)/SRPMS
	-mkdir -p `dirname $(RPM_TARGET)`
	$(RPM_PROG) $(RPM_ARGS) $(RPM_TARBALL)
	@echo Congratulations, $(RPM_TARGET) "(and friends)" should now exist.
 endif
# Put the phony target outside the if, otherwise automake gives
# warnings if a .PHONY is also defined in the Makefile.am.
.PHONY: rpm

# Only preprocess the file.
%.i: %.cc
	$(CXX) -E $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $< > $@
%.i: %.c
	$(CC) -E $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $< > $@

# Only compile (but not assemble) the file.
%.s: %.cc
	$(CXX) -S $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $<
%.s: %.c
	$(CC) -S $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $<

# Rules for preprocessing idl files.
# There should be a corresponding .cc file in the source directory
# including the .cs_cc file.
%.cs_cc: %.idl
	$(IDLCXX) $(IDLFLAGS) $(AM_IDLFLAGS) $<
	echo '#include "$*_c.cc"' >  $*.cs_cc
	echo '#include "$*_s.cc"' >> $*.cs_cc

# Rules for preprocessing Qt sources.
%.moc.cc: %.h
	$(QT_DIR)/bin/moc $< -o $@

# Rule to build all test programs.
test: $(check_PROGRAMS)

# Rule to build and run one or more test programs.
# The programs to build/run must be defined in the PGM variable.
checkrun:
	@if [ "$(PGM)" = "" ] ; then \
	   echo "Error: use as: make (mem)checkrun PGM=testprogram"; \
	 else \
	   curwd=`pwd`; \
	   bcurwd=`basename $$curwd`; \
	   if [ "$$bcurwd" != test ]; then \
	     echo "Error: run (mem)checkrun in test directory"; \
	   else \
	     PGMB=; \
	     PGMT=; \
	     for PGMVAR in $(PGM) ; \
	     do \
	       grep "^ *$${PGMVAR}_SOURCES" $(srcdir)/Makefile.am >& /dev/null; \
	       if [ $$? = 0 ]; then \
	         PGMB="$$PGMB $$PGMVAR"; \
	       fi; \
	       PGMTST=$$PGMVAR; \
	       if [ -f $(srcdir)/$${PGMVAR}.sh ] ; then \
	         PGMTST=$(srcdir)/$${PGMVAR}.sh; \
	       elif [ -f $(srcdir)/$${PGMVAR}_test.sh ] ; then \
	         PGMTST=$(srcdir)/$${PGMVAR}_test.sh; \
	       fi; \
	       PGMT="$$PGMT $$PGMTST"; \
	     done; \
	     echo "make check CHECKTOOL='$(CHECKTOOL)' check_PROGRAMS='$$PGMB' TESTS='$$PGMT'"; \
	     make check CHECKTOOL="$(CHECKTOOL)" check_PROGRAMS="$$PGMB" TESTS="$$PGMT"; \
	   fi \
	 fi

# Rule to run test programs using valgrind's memcheck tool.
memcheck:
	@$(RM) `find . -name "*.valgrind.*"`
	make check CHECKTOOL='valgrind --tool=memcheck --num-callers=50 --leak-check=yes --track-fds=yes --log-file=[PROGNAME].valgrind'
	@vgfils=`find . -name "*.valgrind.*"`; \
	vgfils=`echo $$vgfils`; \
	nrvg=`echo "$$vgfils" | wc -w`; \
	nrvg=`echo $$nrvg`; \
	if [ "$$nrvg" != 0  -a  "$$nrvg" != "" ]; then \
	  echo ''; \
	  echo "memcheck error summary from $$nrvg *.valgrind.* file(s)"; \
	  echo '--------------------------------------------------'; \
	  (grep "ERROR SUMMARY: " `echo $$vgfils` | grep -v " 0 errors ") || echo "No memory check errors"; \
	  (grep "definitely lost: " `echo $$vgfils` | grep -v " 0 bytes ") || echo "No definite memory leaks"; \
	  (grep "possibly lost: " `echo $$vgfils` | grep -v " 0 bytes ") || echo "No possible memory leaks"; \
	  (grep " open file descriptor " `echo $$vgfils` | grep -v "descriptor [012]:") || echo "No file descriptor leaks"; \
	fi

# Rule to build and run memcheck for one or more test programs.
# The programs to build/run must be defined in the PGM variable.
memcheckrun:
	$(RM) `find . -name "*.valgrind.*"`
	make checkrun CHECKTOOL='valgrind --tool=memcheck --num-callers=50 --leak-check=yes --track-fds=yes --log-file=[PROGNAME].valgrind' PGM="$(PGM)"
	@vgfils=`find . -name "*.valgrind.*"`; \
	vgfils=`echo $$vgfils`; \
	nrvg=`echo "$$vgfils" | wc -w`; \
	nrvg=`echo $$nrvg`; \
	if [ "$$nrvg" != 0  -a  "$$nrvg" != "" ]; then \
	  echo ''; \
	  echo "memcheckrun error summary from $$nrvg *.valgrind.* file(s)"; \
	  echo '-----------------------------------------------------'; \
	  (grep "ERROR SUMMARY: " `echo $$vgfils` | grep -v " 0 errors ") || echo "No memory check errors"; \
	  (grep "definitely lost: " `echo $$vgfils` | grep -v " 0 bytes ") || echo "No definite memory leaks"; \
	  (grep "possibly lost: " `echo $$vgfils` | grep -v " 0 bytes ") || echo "No possible memory leaks"; \
	  (grep " open file descriptor " `echo $$vgfils` | grep -v "descriptor [012]:") || echo "No file descriptor leaks"; \
	fi

doc:
	@if [ "$(lofar_doctool)" = "doxygen" ] ; then \
	  cp $(top_builddir)/.doxygenrc doxygen.cfg ; \
	  projnm=`(cd $(srcdir) && pwd) | sed -e "s%.*/LOFAR/%%"` ; \
	  echo "PROJECT_NAME = $$projnm" >> doxygen.cfg ; \
	  echo "INPUT = $(srcdir)" >> doxygen.cfg ; \
	  echo "RECURSIVE = YES" >> doxygen.cfg ; \
	  echo "HTML_OUTPUT = $(DOCDIR)" >> doxygen.cfg ; \
	  echo "EXCLUDE = $(srcdir)/build $(srcdir)/test $(srcdir)/demo" >> doxygen.cfg; \
          echo "GENERATE_TAGFILE = `basename $$projnm`.tag" >> doxygen.cfg ; \
	  $(DOXYGEN) doxygen.cfg ; \
	else \
	  if [ "$(lofar_doctool)" = "docpp" ] ; then \
	    $(DOCPP) $(DOCPPFLAGS) --dir $(DOCDIR) `find $(srcdir) -name "*.h" -print` ; \
	  else \
	    echo "Error: No documentation tool configured" ; \
	  fi \
	fi

docthis:
	@if [ "$(lofar_doctool)" = "doxygen" ] ; then \
	  cp $(top_builddir)/.doxygenrc doxygen.cfg ; \
	  projnm=`(cd $(srcdir) && pwd) | sed -e "s%.*/LOFAR/%%"` ; \
	  echo "PROJECT_NAME = $$projnm" >> doxygen.cfg ; \
	  echo "INPUT = $(srcdir)/src" >> doxygen.cfg ; \
	  echo "RECURSIVE = NO" >> doxygen.cfg ; \
	  echo "HTML_OUTPUT = $(DOCDIR)" >> doxygen.cfg ; \
	  $(DOXYGEN) doxygen.cfg ; \
	else \
	  if [ "$(lofar_doctool)" = "docpp" ] ; then \
	    $(DOCPP) $(DOCPPFLAGS) --dir $(DOCDIR) $(srcdir)/*.h ; \
	  else \
	    echo "Error: No documentation tool configured" ; \
	  fi \
	fi
build_system:
	@if test 2 -eq $(WITH_CLEAN); then \
	  $(MAKE) distclean ; \
	  ../../lofarconf; \
	fi; \
	if test 1 -eq $(WITH_CLEAN); then \
	  $(MAKE) clean ; \
	fi; \
	$(MAKE); \
	if test 1 -eq $(WITH_CHECK); then \
	  $(MAKE) check CHECKTOOL="$(CHECKTOOL)"; \
	fi; \
	if test 1 -eq $(WITH_INSTALL); then \
	  $(MAKE) install ; \
	fi;

# Show the important make variables.
show:
	@echo "CXX      = $(CXX)";
	@echo "   `$(CXX) --version | head -1`";
	@echo "CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS)";
	@echo "CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS)";
	@echo "LDFLAGS  = $(AM_LDFLAGS) $(LDFLAGS)";
	@echo "LIBS     = $(LIBS)";
	@echo "MPIBIN   = $(MPIBIN)";
	@echo "AIPSPP   = $(AIPSPP)";
	@echo "prefix   = $(prefix)";

help:
	@echo "make targets";
	@echo "------------";
	@echo "show              show important make variables";
	@echo "pgm               build test program pgm (in test directory)";
	@echo "test              build all test programs";
	@echo "check             build, run, and check all test programs";
	@echo "check CHECKTOOL=  check test programs with a checktool (like valgrind)";
	@echo "memcheck          check CHECKTOOL='valgrind --tool=memcheck"
	@echo "                    --num-callers=50 --leak-check=yes --track-fds=yes'"
	@echo "checkrun PGM=     build, run, and check given test program(s)";
	@echo "memcheckrun PGM=  build, run, and memcheck given test program(s)";
	@echo ""
	@echo "file.o            make object file (in src or test directory)";
	@echo "file.i            make preprocessed file";
	@echo "file.s            make assembly file";
	@echo "clean             remove object files, etc."
	@echo "distclean         remove almost everything; requires a new lofarconf";
	@echo "pkgclean          distclean and remove files generated by bootstrap";
	@echo "                    requires a new bootstrap and lofarconf";
	@echo "install           install package in $(prefix)";
	@echo "dist              make a distribution";
	@echo "distcheck         make and check a distribution";
	@echo "rpm               make an rpm";
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
