#
# Configuration of the RSPDriver
#

#
# If SW_SYNC=1 then sync will be generated by a software timer
#
RSPDriver.SW_SYNC=0

#
# SYNC_INTERVAL is only used the SW_SYNC=1 to set the interval
# time of the timer.
#
RSPDriver.SYNC_INTERVAL=1.0

#
# Send signal to the RSP boards to simulate the arrival of
# a SYNC pulse (which normally comes with a frequency of 1Hz).
#
RSPDriver.SOFTPPS=0

#
# Specify the base index of the RSP board ethernet MAC address
# The RSP boards addresses will be numbered consecutively.
#
# RSPDriver.MAC_BASE=1 # Start from address: 00:00:00:00:00:MAC_BASE

#
# Alternatively specify all MAC addresses explicitly
# as MAC_ADDR0..MAC_ADDR23
# In this case you must leave RSPDriver.MAC_BASE unspecified
#
RSPDriver.MAC_ADDR_LCU=00:60:97:09:C5:B0 # lofar26 MAC address
#RSPDriver.MAC_ADDR_0=00:0A:5E:46:5D:ED   # lofar27 MAC address
#RSPDriver.MAC_ADDR_0=00:60:97:09:C5:B0 # lofar26 MAC address
RSPDriver.MAC_ADDR_0=00:00:00:00:00:01
RSPDriver.MAC_ADDR_1=00:00:00:00:00:02
RSPDriver.MAC_ADDR_2=00:00:00:00:00:03
RSPDriver.MAC_ADDR_3=00:00:00:00:00:04
RSPDriver.MAC_ADDR_4=00:00:00:00:00:05
RSPDriver.MAC_ADDR_5=00:00:00:00:00:06
RSPDriver.MAC_ADDR_6=00:00:00:00:00:07
RSPDriver.MAC_ADDR_7=00:00:00:00:00:08
RSPDriver.MAC_ADDR_8=00:00:00:00:00:09
RSPDriver.MAC_ADDR_9=00:00:00:00:00:10
RSPDriver.MAC_ADDR_10=00:00:00:00:00:0A
RSPDriver.MAC_ADDR_11=00:00:00:00:00:0B
RSPDriver.MAC_ADDR_12=00:00:00:00:00:0C
RSPDriver.MAC_ADDR_13=00:00:00:00:00:0D
RSPDriver.MAC_ADDR_14=00:00:00:00:00:0E
RSPDriver.MAC_ADDR_15=00:00:00:00:00:0F
RSPDriver.MAC_ADDR_16=00:00:00:00:00:10
RSPDriver.MAC_ADDR_17=00:00:00:00:00:11
RSPDriver.MAC_ADDR_18=00:00:00:00:00:12
RSPDriver.MAC_ADDR_19=00:00:00:00:00:13
RSPDriver.MAC_ADDR_20=00:00:00:00:00:14
RSPDriver.MAC_ADDR_21=00:00:00:00:00:15
RSPDriver.MAC_ADDR_22=00:00:00:00:00:16
RSPDriver.MAC_ADDR_23=00:00:00:00:00:17

#
# Ethernet interface on which to contact the RSP boards.
# This interface would normally be connected to the switch.
#
RSPDriver.IF_NAME=eth0

#
# Make sure that initially the
# beamlet statistics match the subband statistics
#
RSPDriver.IDENTITY_WEIGHTS=1

#
# Select LOOPBACK_MODE mode
#
# If LOOPBACK_MODE == 0, the WRITE is done first.
# In this mode the RSPDriver checks that what was
# written is correctly read back from the board. This can
# be used to check that the RSP board or the EPAStub
# functions correctly. Read results are not stored in
# the RSPDriver cache.
#
# If LOOPBACK_MODE == 1, the READ is done first.
# In this mode you can check with Ethereal that what was
# read from the RSP board or EPAStub is written back in
# the same way. This is used to check whether the RSPDriver
# stores the information at the correct location in its cache.
# Of course in this mode reads results are stored in the
# RSPDriver cache.
#
RSPDriver.LOOPBACK_MODE=0

#
# Enable/disable certain parts of the update cycle.
# The order of these config variables does not
# alter the order the update actions are performed.
#
RSPDriver.READ_STATUS=1
RSPDriver.WRITE_BF=1
RSPDriver.WRITE_SS=1
RSPDriver.WRITE_RCU=1
RSPDriver.READ_SST=1
RSPDriver.READ_BST=1
RSPDriver.WRITE_WG=1
RSPDriver.READ_VERSION=1

#
# Optionally read RW-registers.
#
RSPDriver.READ_BF=1
RSPDriver.READ_SS=1
RSPDriver.READ_RCU=1
RSPDriver.READ_WG=1

