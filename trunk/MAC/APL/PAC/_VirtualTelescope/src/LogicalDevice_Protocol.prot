//#  LogicalDevice_Protocol.prot: Protocol definition for the LogicalDevice server
//#
//#  Copyright (C) 2002-2004
//#  ASTRON (Netherlands Foundation for Research in Astronomy)
//#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
//#
//#  This program is free software; you can redistribute it and/or modify
//#  it under the terms of the GNU General Public License as published by
//#  the Free Software Foundation; either version 2 of the License, or
//#  (at your option) any later version.
//#
//#  This program is distributed in the hope that it will be useful,
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//#  GNU General Public License for more details.
//#
//#  You should have received a copy of the GNU General Public License
//#  along with this program; if not, write to the Free Software
//#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//#
//#  $Id$
autogen definitions protocol;

description = "Protocol for LogicalDevice servers";
prefix = "LOGICALDEVICE"; // for the signal names

// specify extra include files
// e.g.
include = '<sys/time.h>';

prelude = << PRELUDE_END
enum {
	LOGICALDEVICE_PROTOCOL = (F_APL_PROTOCOL+100)
};
PRELUDE_END;

//
// An "event" has a "signal" and a "dir" (direction)
// and zero or more "param"s.
// "dir" can be one of "IN" or "OUT".
// A "param" has a "name" and a "type".
//
event = {
	signal = SCHEDULE;
	dir = IN;
	param = {
		name = "name";
		type = "char";
		dim = "50";
	};
};

event = {
	signal = CLAIM;
	dir = IN;
};

event = {
	signal = CLAIMED;
	dir = OUT;
};

event = {
	signal = PREPARE;
	dir = IN;
	param = {
		name = "parameters";
		type = "char";
		dim = "700";
	};
};

event = {
	signal = PREPARED;
	dir = OUT;
};

event = {
	signal = RESUME;
	dir = IN;
//	param = {
//		name = "seqnr";
//		type = "unsigned int";
//	};
//	param = {
//		name = "ping_time";
//		type = "timeval";
//	};
};

event = {
	signal = RESUMED;
	dir = OUT;
};

event = {
	signal = SUSPEND;
	dir = IN;
//	param = {
//		name = "seqnr";
//		type = "unsigned int";
//	};
//	param = {
//		name = "ping_time";
//		type = "timeval";
//	};
};

event = {
	signal = SUSPENDED;
	dir = OUT;
};

event = {
	signal = RELEASE;
	dir = IN;
//	param = {
//		name = "seqnr";
//		type = "unsigned int";
//	};
//	param = {
//		name = "ping_time";
//		type = "timeval";
//	};
};

event = {
	signal = RELEASED;
	dir = OUT;
};

