// -*- mode: c++ -*-//
// Protocol definition for the RSP driver interface
//
autogen definitions protocol;

description = "Protocol for the RSP driver interface";
prefix = "RSP"; // for the signal names
id = "(LOFAR::GCF::TM::F_APL_PROTOCOL+12)";

// specify extra include files
// e.g.
include = '<sys/time.h>';
include = '<linux/types.h>';
include = '<bitset>';
include = '<Common/LofarTypes.h>';

include = '<APL/RTCCommon/Timestamp.h>';
include = '<APL/RSP_Protocol/BeamletWeights.h>';
include = '<APL/RSP_Protocol/SubbandSelection.h>';
include = '<APL/RSP_Protocol/RCUSettings.h>';
include = '<APL/RSP_Protocol/RSUSettings.h>';
include = '<APL/RSP_Protocol/WGSettings.h>';
include = '<APL/RSP_Protocol/SystemStatus.h>';
include = '<APL/RSP_Protocol/Statistics.h>';
include = '<APL/RSP_Protocol/XCStatistics.h>';
include = '<APL/RSP_Protocol/Versions.h>';
include = '<APL/RSP_Protocol/Clocks.h>';
include = '<APL/RSP_Protocol/MEPHeader.h>';

prelude = << PRELUDE_END

  static const int MAX_N_RCUS = 128 * MEPHeader::N_POL;
  static const int MAX_N_TDS  = MAX_N_RCUS / (8 * 2); // assuming 8 RCU's per RSP board and 1 TD board for every 2 RSP boards
  static const int SUCCESS    = 1;
  static const int FAILURE    = 0;

PRELUDE_END;

//
// An "event" has a "signal" and a "dir" (direction)
// and zero or more "param"s.
// "dir" can be one of "IN" or "OUT".
// A "param" has a "name" and a "type".
// Userdefine types are 
//

//
// Beam-former Weights
//
event = {
  signal = SETWEIGHTS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "weights";
    type = "BeamletWeights";
    userdefined;
  };
};

event = {
  signal = SETWEIGHTSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
};

event = {
  signal = GETWEIGHTS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETWEIGHTSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "weights";
    type = "BeamletWeights";
    userdefined;
  };
};    

//
// Subband Selection
//
event = {
  signal = SETSUBBANDS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "subbands";
    type = "SubbandSelection";
    userdefined;
  };
};

event = {
  signal = SETSUBBANDSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
};

event = {
  signal = GETSUBBANDS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
  param = {
    name = "type";
    type = "uint16";
  };
};

event = {
  signal = GETSUBBANDSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "subbands";
    type = "SubbandSelection";
    userdefined;
  };
};

event = {
  signal = SUBSUBBANDS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "period";
    type = "uint16";
  };
  param = {
    name = "type";
    type = "uint16";
  };
};

event = {
  signal = SUBSUBBANDSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UPDSUBBANDS;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
  param = {
    name = "subbands";
    type = "SubbandSelection";
    userdefined;
  };
};

event = {
  signal = UNSUBSUBBANDS;
  dir = IN;
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBSUBBANDSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

//
// RCU Control
//
event = {
  signal = SETRCU;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "settings";
    type = "RCUSettings";
    userdefined;
  };
};

event = {
  signal = SETRCUACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
};

event = {
  signal = GETRCU;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETRCUACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "settings";
    type = "RCUSettings";
    userdefined;
  };
};

event = {
  signal = SUBRCU;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "period";
    type = "uint16";
  };
};

event = {
  signal = SUBRCUACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UPDRCU;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
  param = {
    name = "settings";
    type = "RCUSettings";
    userdefined;
  };
};

event = {
  signal = UNSUBRCU;
  dir = IN;
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBRCUACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

//
// RSU Control
//
event = {
  signal = SETRSU;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "settings";
    type = "RSUSettings";
    userdefined;
  };
};

event = {
  signal = SETRSUACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
};

//
// Waveform Generator
//
event = {
  signal = SETWG;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "settings";
    type = "WGSettings";
    userdefined;
  };
};

event = {
  signal = SETWGACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
};

event = {
  signal = GETWG;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETWGACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "settings";
    type = "WGSettings";
    userdefined;
  };
};

event = {
  signal = SUBSTATUS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "period";
    type = "uint16";
  };
};

event = {
  signal = SUBSTATUSACK;
  dir = OUT; 
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBSTATUS;
  dir = IN;
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBSTATUSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UPDSTATUS;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
  param = {
    name = "sysstatus";
    type = "SystemStatus";
    userdefined;
  };
};

event = {
  signal = GETSTATUS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETSTATUSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "sysstatus";
    type = "SystemStatus";
    userdefined;
  };
};    

event = {
  signal = SUBSTATS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "period";
    type = "uint16";
  };
  param = {
    name = "type";
    type = "uint8";
  };
  param = {
    name = "reduction";
    type = "StatsReduction";
  };
};

event = {
  signal = SUBSTATSACK;
  dir = OUT; 
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBSTATS;
  dir = IN;
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBSTATSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UPDSTATS;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
  param = {
    name = "stats";
    type = "Statistics";
    userdefined;
  };
};

event = {
  signal = GETSTATS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
  param = {
    name = "type";
    type = "uint8";
  };
};

event = {
  signal = GETSTATSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "stats";
    type = "Statistics";
    userdefined;
  };
};

event = {
  signal = SUBXCSTATS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "period";
    type = "uint16";
  };
};

event = {
  signal = SUBXCSTATSACK;
  dir = OUT; 
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBXCSTATS;
  dir = IN;
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBXCSTATSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UPDXCSTATS;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
  param = {
    name = "stats";
    type = "XCStatistics";
    userdefined;
  };
};

event = {
  signal = GETXCSTATS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "rcumask";
    type = "std::bitset<MAX_N_RCUS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETXCSTATSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "stats";
    type = "XCStatistics";
    userdefined;
  };
};

event = {
  signal = GETVERSION;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETVERSIONACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "versions";
    type = "Versions";
    userdefined;
  };
};

event = {
  signal = GETCONFIG;
  dir = IN;
};

event = {
  signal = GETCONFIGACK;
  dir = OUT;
  param = {
    name = "n_rcus";
    type = "int16";
  };
  param = {
    name = "n_rspboards";
    type = "int16";
  };
  param = {
    name = "n_tdboards";
    type = "int16";
  };
};

event = {
  signal = SETCLOCKS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "tdmask";
    type = "std::bitset<MAX_N_TDS>";
  };
  param = {
    name = "clocks";
    type = "Clocks";
    userdefined;
  };
};

event = {
  signal = SETCLOCKSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
};
  
event = {
  signal = GETCLOCKS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "tdmask";
    type = "std::bitset<MAX_N_TDS>";
  };
  param = {
    name = "cache";
    type = "uint8";
  };
};

event = {
  signal = GETCLOCKSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "clocks";
    type = "Clocks";
    userdefined;
  };
};

event = {
  signal = SUBCLOCKS;
  dir = IN;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "tdmask";
    type = "std::bitset<MAX_N_TDS>";
  };
  param = {
    name = "period";
    type = "uint16";
  };
};

event = {
  signal = SUBCLOCKSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UPDCLOCKS;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
  param = {
    name = "clocks";
    type = "Clocks";
    userdefined;
  };
};

event = {
  signal = UNSUBCLOCKS;
  dir = IN;
  param = {
    name = "handle";
    type = "uint32";
  };
};

event = {
  signal = UNSUBCLOCKSACK;
  dir = OUT;
  param = {
    name = "timestamp";
    type = "RTC::Timestamp";
    userdefined;
  };
  param = {
    name = "status";
    type = "int16";
  };
  param = {
    name = "handle";
    type = "uint32";
  };
};
