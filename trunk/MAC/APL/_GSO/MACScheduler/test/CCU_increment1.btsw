//
//  CCU_increment1.btsw: Testscript for increment 1 of the CCU software.
//
//  Copyright (C) 2005
//  ASTRON (Netherlands Foundation for Research in Astronomy)
//  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
//
// ------------------------------------------------------------------------------
// Description:
//
//
//
// ------------------------------------------------------------------------------

[statemachines]

Statemachine_MACScheduler (ready, time_is_over) =
{
VAR a= 0x00000001, b.

  s000  : SAS_SCHEDULE ( "VI1.ps" )                             ; s010.
  
  s010  : SAS_RESPONSE ( 0x00000000 )                           ; s910. // scheduled ok


//  s900  : R_SIG (time_is_over)                                  ; s910.
//  s900  : TIMER (0x1)                                           ; s000.  // Re-run after one second

  s910  : S_SIG (ready )                                        ; OK.
  OK    : TIMER(10)                                             ; OK.
}

Statemachine_BeamServer  (ready, time_is_over) =
{
VAR handle.

  s000   : ABS_BEAMALLOC (, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,,, ,,,,,,,,)                          ; s010.
  s000   : ABS_BEAMFREE  ( handle )                             ; s020.
  s000   : ABS_BEAMPOINTTO (,,,,)                               ; s000.
  s000   : ABS_WGSETTINGS (,)                                   ; s030.
  s000   : ABS_WGENABLE                                         ; s000.
  s000   : ABS_WGDISABLE                                        ; s000.
  
  s010   : ABS_BEAMALLOC_ACK ( 0x00000001, 0x00000000 )         ; s000.
  
  s020   : ABS_BEAMFREE_ACK ( handle, 0x00000000 )              ; s000.
  
  s030   : ABS_WGSETTINGS_ACK ( 0x00000000 )                    ; s000.
  
//  s90   : R_SIG (time_is_over)                                  ; s100.
//  s90   : TIMER (0x10)                                          ; s110.  // not received the 'sent' in time so quit
  
  s900  : S_SIG (ready )                                        ; OK.
  s910  : TERMINATE.
  OK    : TIMER(10)                                             ; OK.
}

WaitUntilTestEnd (SM1_ready, SM2_ready) =
{
  s01   :   R_SIG (SM1_ready)                                   ; s02.
  s02   :   R_SIG (SM2_ready)                                   ; s03.
  s03   :   TERMINATE.
}

HALF_HOUR_TIMER (half_hour_over_1, half_hour_over_2) =
{
  s000 : TIMER (0x057E)                                         ; s010.
  s010 : S_SIG (half_hour_over_1)                               ; s020.
  s020 : S_SIG (half_hour_over_2)                               ; s000.
}

[testscript]
VAR     SM1_done, SM2_done, TMO_1, TMO_2.

COM1 :  Statemachine_MACScheduler   (SM1_done, TMO_1)
        HALF_HOUR_TIMER  (TMO_1, TMO_2)
        WaitUntilTestEnd (SM1_done, SM2_done).

COM2 :  Statemachine_BeamServer   (SM2_done, TMO_2).
