#!/bin/sh

curPath=`pwd`
if [ "$OSTYPE" = "win32" ]; then
  curPath=C:`pwd`
fi

#
#  Default Stationname, change when needed
#
mainSysName="MCU001"

#
# set distributed system on in the project
#
cp config/config config/config.orig
cp config/config.maincu config/config
echo "" >> config/config
echo "eventPort = 5997" >> config/config
echo "dataPort = 5998" >> config/config
echo "pmonPort = 5999" >> config/config


export PVSS_II=$curPath/config/config
cp config/progs config/progs.orig
cp config/progs.maincu config/progs


#
# Start project in background
#
PVSS00pmon -proj $1 &


#
# Wait  some time untill pmon is running
#
echo -n "Taking some time to give the pmon a chance to start..."
sleep 60
echo "(done)"
#
# empty the database from demo stuff (this has catastrofal results for now, 
# allthough it does the right thing, it renders the database useless, so ETM 
# is working on a solution for this. Conclusion is:
# Keep ANALOG2 (used in poowerconfigs) and ExampleDP_Float (used as default point in sumalert lists)
# even after this there seem to happen some strange things. So for now let's keep them in the system.
#
#echo -n "empty the database from demo stuff"
#PVSS00ctrl -script emptyDatabase.ctl -currentproj; echo "(done)"

#
# import Navigator specific  DPT's and DP's
#
echo -n "Importing Navigator specific DPT's and DP's..."
PVSS00ascii -in dplist/nav_fw/XTU_Navigator_database.dpl -currentproj; echo "(done)"

echo -n "Importing fixed datapoints..."

if [ "$OSTYPE" != "win32" ]; then
   cd ../Deployment/data/PVSS/
   ./create_db_files 
   ./create_db_files -o Observation_10

fi

#
# load (default) fixed datapoints for a MainCU  and an observation
# (Observation_10) in the database
#
PVSS00ascii -in MainPermDatapointtypes.dpl -currentproj; echo "(done)"
PVSS00ascii -in MainObsDatapointtypes.dpl -currentproj; echo "(done)"
PVSS00ascii -in MainPermDatapoints.dpl -currentproj; echo "(done)"
PVSS00ascii -in MainObsDatapoints.dpl -currentproj; echo "(done)"
cd $curPath

#
# prepare project to enable use of GCF based MAC controllers
#
echo -n "Prepare project to enable use of GCF based MAC controllers..."
PVSS00ctrl -script libs/nav_fw/gcfpa-prep.ctl -currentproj; echo "(done)"

#
# load some default navigator panels into the project
#
echo -n "Importing DPT's which enables a set of default dedicated panelviews..."
convertedDefaultFile=`sed -e "s/CCU1/$mainSysName/" dplist/nav_usr/MAC/MAC_Default_panelviews.dpl`
echo "$convertedDefaultFile" > MAC_Default_panelviews.dpl
PVSS00ascii -in MAC_Default_panelviews.dpl -currentproj; echo "(done)"
rm -f MAC_Default_panelviews.dpl

#
#shut down project
#
PVSS00pmon -currentproj -stopWait



cp ../LOFAR/MAC/Navigator/panels/nav_fw/tools/EnablePropertySets.pnl panels

echo "PVSS00NV         | manual |      30 |        3 |        2 |-p nav_fw/tools/EnablePropertySets.pnl -iconBar -menuBar" >> config/progs





