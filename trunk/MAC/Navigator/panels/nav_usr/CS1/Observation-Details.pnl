V 10
1
LANG:1 8 (NoName)
PANEL,489 117 1007 801 N "_3DFace" 1
"$datapoint"
"main()
{
	// check if this panel is placed on the right datapoint
	checkDpType($datapoint,\"Observation\");  
	
	
	initTable();
	// set baseDP
	baseDP= $datapoint+\"_ObsCtrl\";
  // get obsname from dp
	string obsName= getPathComponent($datapoint,3);
	
	//DebugTN(\"Observation: \"+obsName);
	
	setValue(\"Observation_txt\",\"text\",obsName);

	// connect for selfUpdates
  showSelfState(baseDP);
	
	// check if the requiered datapoint for this view is enabled and accessible
	if (dpAccessable(baseDP + \".state\")) {
		dpConnect(\"updateObservation\", baseDP + \".state:_online.._value\",
		                           		 baseDP + \".currentAction:_online.._value\",
		                           		 baseDP + \".error:_online.._value\",
		                           		 baseDP + \".logMsg:_online.._value\",
		                           		 baseDP + \".claimPeriod:_online.._value\",
		                           		 baseDP + \".preparePeriod:_online.._value\",
		                           		 baseDP + \".startTime:_online.._value\",
		                           		 baseDP + \".stopTime:_online.._value\",
		                           		 baseDP + \".subbandList:_online.._value\",
		                           		 baseDP + \".beamletList:_online.._value\",
		                           		 baseDP + \".bandFilter:_online.._value\",
		                           		 baseDP + \".nyquistzone:_online.._value\",
		                           		 baseDP + \".antenneArray:_online.._value\",
		                           		 baseDP + \".receiverList:_online.._value\",
		                           		 baseDP + \".sampleClock:_online.._value\",
		                           		 baseDP + \".measurementSet:_online.._value\",
		                           		 baseDP + \".stationList:_online.._value\",
		                           		 baseDP + \".BGLNodeList:_online.._value\",
		                           		 baseDP + \".storageNodeList:_online.._value\",
		                               baseDP + \".state:_online.._invalid\");
  }
}

updateObservation( string dp1, int state,
                   string dp2, string action,
                   string dp3, string error,
                   string dp4, string logMsg,
                   string dp5, int claimPeriod,
                   string dp6, int preparePeriod,
                   string dp7, string startTime,
                   string dp8, string stopTime,
                   string dp9, string subbandList,
                   string dp10, string beamletList,
                   string dp11, string bandFilter,
                   string dp12, int nyquistZone,
                   string dp13, string antenneArray,
                   string dp14, string receiverList,
                   string dp15, string sampleClock,
                   string dp16, string measurementSet,
                   string dp17, string stationList,
                   string dp18, string BGLNodeList,
                   string dp19, string storageNodeList,
                   string dp20, bool invalid) {
    
    

 

	setObsTableValue(\"action\",action); // Contents
	setObsTableValue(\"error\",error); // Contents
	setObsTableValue(\"logMsg\",logMsg); // Contents
	setObsTableValue(\"claimPeriod\",claimPeriod); // Contents
	setObsTableValue(\"preparePeriod\",preparePeriod); // Contents
	setObsTableValue(\"startTime\",startTime); // Contents
	setObsTableValue(\"stopTime\",stopTime); // Contents
	setObsTableValue(\"subbandList\",subbandList); // Contents
	setObsTableValue(\"beamletList\",beamletList); // Contents
	setObsTableValue(\"bandFilter\",bandFilter); // Contents
	setObsTableValue(\"nyquistZone\",nyquistZone); // Contents
	setObsTableValue(\"antenneArray\",antenneArray); // Contents
	setObsTableValue(\"receiverList\",receiverList); // Contents
	setObsTableValue(\"sampleClock\",sampleClock); // Contents
	setObsTableValue(\"measurementSet\",measurementSet); // Contents
	setObsTableValue(\"stationList\",stationList); // Contents
	setObsTableValue(\"BGLNodeList\",BGLNodeList); // Contents
	setObsTableValue(\"storageNodeList\",storageNodeList); // Contents
}

setObsTableValue(string colName,string value) {
	ObservationTable.updateLine(1,\"Property\",colName, \"Value\", value);
}
	
initTable() {
  ObservationTable.deleteAllLines();
  ObservationTable.updateLine(1,\"Property\",\"action\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"error\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"logMsg\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"claimPeriod\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"preparePeriod\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"startTime\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"stopTime\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"subbandList\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"beamletList\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"bandFilter\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"nyquistZone\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"antenneArray\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"receiverList\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"sampleClock\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"measurementSet\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"stationList\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"BGLNodeList\");
  ObservationTable.cellBackCol(\"_3DFace\");
  ObservationTable.appendLine(\"Property\",\"storageNodeList\");
  ObservationTable.cellBackCol(\"_3DFace\");
}

" 0
EE E E 1 0 0 0  10 10
"" 0 1
E"string baseDP=\"\";" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 0
"Text1"
""
1 58 16 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 60 18 191 42
0 2 0 "s" 0 0 0 64 0 0  60 18
 1
1
LANG:1 105 -microsoft windows-Arial-bold-r-normal-*-*-180-100-100-*-*-iso8859-1|-21,0,0,0,700,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 12 Observation:
2 1
"Observation_txt"
""
1 228 16 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 230 18 502 42
0 2 0 "s" 0 0 0 64 0 0  230 18
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-180-100-100-*-*-iso8859-1|-21,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
1 2 0 "" 1
0
25 17
"ObservationTable"
""
1 20 70 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
18 68 932 702
E E 1 0 1 2 1 "Property" 0 1 0 "s" 1
LANG:1 8 Property
E1
LANG:1 0 
 200 "Value" 0 1 0 "s" 1
LANG:1 5 Value
E1
LANG:1 0 
 707 32 32 "" 1 1
LANG:1 2 #1
8 200 1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
0 0 2 3 0
1 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "selfState"
"objects\\nav_usr\\CS1\\lofar_self_state.pnl" 31 29 T 20 1 0 1  -1 -6  
1
"$object""Observation"
0