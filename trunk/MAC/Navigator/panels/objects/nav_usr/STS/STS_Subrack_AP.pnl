V 10
1
LANG:1 10 Subrack_AP
PANEL,1016 387 184 193 N "_3DFace" 2
"$APNr"
"$datapoint"
"main()
{
  
  setValue(\"text_APNr\", \"text\", \"AP\" + $APNr);
  string dpAP = $datapoint + \".AP\"+ $APNr;
  //DebugTN(\"AP: \", dpAP);
  navPMLloadPropertySet(dpAP);
  rect_AP.toolTipText = dpAP;
  if(dpAccessable(dpAP +\".temperature:_online.._value\"))
  {
    dpConnect(\"ControlGUIAP\", dpAP +\".temperature:_online.._value\",
                              dpAP +\".state:_online.._value\");
    setValue(\"output_packetsReceived\", \"editable\", FALSE);
    dpConnect(\"showVersion\", dpAP +\".version:_online.._value\");
  }
  else
  {
    setValue(\"rect_AP\", \"backCol\", \"_dpdoesnotexist\");
    setValue(\"btn_details\", \"backCol\", \"_dpdoesnotexist\");
    setValue(\"txt_temperature\", \"text\", \"x.x\");
  }
  // connect for selfUpdates
  showSelfState(dpAP);
}





/////////////////////////////////////////////////////////////////////
// Function: Controls the GUI object of the AP
//
// FunctionName: getSubviewName
/////////////////////////////////////////////////////////////////////
ControlGUIAP(string dp1, float temperature,
             string dp2, int status)
{
	//DebugTN(dp1,temperature,dp2,status);
  // 1. Display the temperature with format xxx
  setValue(\"txt_temperature\", \"text\", temperature);
  setValue(\"txt_temperature\", \"visible\", TRUE);
}
" 0
"main()
{
  navPMLunloadPropertySet($datapoint + \".AP\"+ $APNr);
}" 0
E E E 1 -1 -1 0  20 60
"" 0 1
EE 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
6 0
"rect_AP"
""
1 20 180 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E "// SimpleCtrlScriptStart {valid}
main(int iType)
{
  dyn_errClass err;

  int          i, iReturnValue = 1, iDpCount = 1;
  dyn_int      diType = makeDynInt();
  dyn_string   dsDps;

  dsDps[1] = $datapoint+\"_Board1_AP\"+$APNr+\"_status.\" + \":_alert_hdl.._ack\";

  if ( isFunctionDefined(\"isAckable\") )
  {
    isAckable( iType, dsDps, iReturnValue );
    if ( iReturnValue == 0 || dynlen (dsDps ) < 1 ) return;
  }

  for ( i = 1; i <= dynlen(dsDps); i++ )
    diType[i] = iType;

  dpSetWait( dsDps, diType );

  err = getLastError();
  if ( dynlen(err) > 0 )
    DebugN(err);
}
// SimpleCtrlScript {EP_confirm}
// dpCount {1}
// dp1 {$datapoint  + \"_Board1_AP\"+ $APNr +\"_status.\"}
// SimpleCtrlScriptEnd {EP_confirm}
" 0

 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 20 20 160 180
6 17
"Border1"
""
1 96 50 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
16 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 96 30 150 50
2 3
"text_APNr"
""
1 25 31 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
4 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 27 33 45 49
0 2 0 "s" 0 0 0 192 0 0  27 33
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 2 AP
2 6
"txt_version"
""
1 119 164 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
6 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 158 166 195 180
0 2 0 "s" 0 0 0 194 0 0  158 166
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 8 ver: x.x
2 8
"label_sampleCount"
""
1 20 95 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
8 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 22 97 72 116
0 2 0 "s" 0 0 0 66 0 0  22 97
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 7 Sample:
2 9
"label_syncCount"
""
1 37 118 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 39 120 72 136
0 2 0 "s" 0 0 0 66 0 0  39 120
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 5 Sync:
2 7
"label_errorCount"
""
1 37 141 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
7 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 39 143 72 159
0 2 0 "s" 0 0 0 66 0 0  39 143
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 6 Error:
2 18
"txt_temperature"
""
1 124 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 133 32 140 48
0 2 0 "3.0f" 4 0 0 194 0 0  133 32
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 1 x
2 4
"label_temperature"
""
1 132 30 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 148 32 162 48
0 2 0 "s" 0 0 0 194 0 0  148 32
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 2 °C
1 19 0 "" 1
0
14 12
"output_errorCount"
""
1 80 141 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
12 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
78 139 152 164
3 "s" 0 0 0 2 0 0 
E
E
E
14 13
"output_sampleCount"
""
1 80 92 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
13 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
78 90 152 115
3 "s" 0 0 0 2 0 0 
E
E
E
14 14
"output_syncCount"
""
1 80 116 E E E 1 E 0 E N "_WindowText" E N "_Window" E E
 E E
14 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-11,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
78 114 152 139
3 "s" 0 0 0 2 0 0 
E
E
E
20 10
"btn_details"
""
1 87 55 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
10 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-110-100-100-*-*-iso8859-1|-12,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
85 53 149 77
1
T 
1
LANG:1 7 Details
 0
1
LANG:1 0 
 E  E  0 0 0 0 0
1
E E 
E"main(int button, bool state)
{
	string dpAP = $datapoint + \".AP\"+ $APNr;
  if (button == 0)
  {
    setValue(\"label_errorCount\", \"visible\", state);
    setValue(\"output_errorCount\", \"visible\", state);
    setValue(\"output_errorCount\" , \"editable\", FALSE);
    setValue(\"label_sampleCount\", \"visible\", state);
    setValue(\"output_sampleCount\", \"visible\", state);
    setValue(\"output_sampleCount\", \"editable\", FALSE);
    setValue(\"output_syncCount\", \"visible\", state);
    setValue(\"label_syncCount\", \"visible\", state);
    setValue(\"output_syncCount\"  , \"editable\", FALSE);
    
    if (state == TRUE)        // if checkbox is checked, show details and connect textbox to the datapoints
    {
      if(!dpAccessable(dpAP + \".SYNC.sampleCount:_online.._value\") ||
         !dpAccessable(dpAP + \".SYNC.syncCount:_online.._value\") ||
         !dpAccessable(dpAP + \".SYNC.errorCount:_online.._value\"))
      {
        setValue(\"output_syncCount\", \"backCol\", \"_dpdoesnotexist\");
        setValue(\"output_sampleCount\", \"backCol\", \"_dpdoesnotexist\");
        setValue(\"output_errorCount\", \"backCol\", \"_dpdoesnotexist\");
        return;
      }
      else
      {
        navPMLloadPropertySet(dpAP + \".SYNC\");
        setValue(\"output_syncCount\", \"backCol\", \"white\");
        setValue(\"output_sampleCount\", \"backCol\", \"white\");
        setValue(\"output_errorCount\", \"backCol\", \"white\");
        dpConnect(\"FPGASyncDetails\", dpAP + \".SYNC.sampleCount:_online.._value\",
                                     dpAP + \".SYNC.syncCount:_online.._value\",
                                     dpAP + \".SYNC.errorCount:_online.._value\");
      }
                                   
    }
    else if (state == FALSE)  // if checkbox is NOT checked, show details and connect textbox to the datapoints
    {
      dpConnect(\"FPGASyncDetails\", dpAP + \".SYNC.sampleCount:_online.._value\",
                                   dpAP + \".SYNC.syncCount:_online.._value\",
                                   dpAP + \".SYNC.errorCount:_online.._value\");
      navPMLunloadPropertySet(dpAP + \".SYNC\");
    }

      
   }
}


FPGASyncDetails(string dp1, int sampleCount,
                string dp2, int syncCount,
                string dp3, int errorCount)
{
  setValue(\"output_errorCount\" , \"text\", errorCount);
  setValue(\"output_sampleCount\", \"text\", sampleCount);
  setValue(\"output_syncCount\"  , \"text\", syncCount);
}" 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 "selfState"
"objects\\nav_usr\\CS1\\lofar_self_state.pnl" 25 171 T 17 1 0 1  -2 -8  
1
"$object""AP"
0