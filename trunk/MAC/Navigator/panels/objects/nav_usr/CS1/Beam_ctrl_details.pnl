V 10
1
LANG:1 8 (NoName)
PANEL,382 110 1057 342 N "_3DFace" 1
"$datapoint"
"main()
{
	systemName = dpSubStr($datapoint,DPSUB_SYS);  
  
  // Set base Datapoint
  baseDP = systemName + \"LOFAR_ObsSW_\";
  
  //DebugTN(\"SystemName: \", systemName);
  
  string observationsDP = \"MCU001:LOFAR_PermSW_MACScheduler\";	
  if (dpAccessable(observationsDP + \".activeObservations\")) {
    //DebugTN(\"connect to updateObservationsTable\");
	  dpConnect(\"updateObservationsTable\",observationsDP+\".activeObservations:_online.._value\",
	                                      observationsDP+\".state:_online.._invalid\");
  }
  
}" 0
EE E E 1 0 0 0  10 280
"" 0 1
E"// Set base Datapoint
string baseDP=\"\";
string systemName = \"\";  
 
string getObsName(string aString) {
  return strsplit(aString,\"_\")[3];
}


updateObservationsTable(string dpe, dyn_string dpv,
							          string dp1, bool invalid) {					          
  string obsQuery = \"SELECT '_online.._value' FROM 'LOFAR_ObsSW_Observation*_BeamCtrl.state' REMOTE '\"+systemName+\"'\";
  dpQueryConnectAll(\"updateBeamCtrlTable\",true,\"BeamObsUpdate\",obsQuery);
}  

updateBeamCtrlTable(string dpe, dyn_dyn_anytype tab)
{

	//empty table
	beamControlTable.deleteAllLines();

  if (dynlen(tab) > 1) {
	 	for (int z = 2; z <= dynlen(tab); z++)
		{
			string obsName = getObsName(tab[z]);
      beamControlTable.appendLine(\"Observation\",obsName);
      string dpPrefix = baseDP + obsName + \"_BeamCtrl\";

      for(int i=0; i<10 && !dpAccessable(dpPrefix);i++)
      {
        delay(0,250);
      }

      dpConnect(\"updateBeamCtrlTableValues\",dpPrefix + \".state:_online.._value\",
                                            dpPrefix + \".connected:_online.._value\",
                                            dpPrefix + \".subbandList:_online.._value\",
                                            dpPrefix + \".beamletList:_online.._value\",
                                            dpPrefix + \".subArray:_online.._value\",
                                            dpPrefix + \".angle1:_online.._value\",
                                            dpPrefix + \".angle2:_online.._value\",
                                            dpPrefix + \".angleTimes:_online.._value\",
                                            dpPrefix + \".beamID:_online.._value\",
                                            dpPrefix + \".state:_online.._invalid\");
		}
	}
}
	
updateBeamCtrlTableValues(string dp1, int state,
                          string dp2, bool connected,
                          string dp3, string subbandList,
                          string dp4, string beamletList,
                          string dp5, string subArray,
                          string dp6, string angle1,
                          string dp7, string angle2,
                          string dp8, string angleTimes,
                          string dp9, int beamID,
                          string dp10, bool invalid)                              
{
  string stateCol=\"\";
  
  if (invalid) 
	{
		stateCol=\"Lofar_invalid\";
  } else {
		stateCol=getStateColor(state);	  
  }  
    for(int i=0; i < beamControlTable.lineCount; i++)
  {
    if(getObsName(dp1) == beamControlTable.cellValueRC(i,\"Observation\"))
    {
      beamControlTable.cellBackColRC(i, \"Status\", stateCol);
      beamControlTable.cellValueRC(i,\"SubbandList\",subbandList);
      beamControlTable.cellValueRC(i,\"BeamletList\",beamletList);
      beamControlTable.cellValueRC(i,\"SubArray\",subArray);
      beamControlTable.cellValueRC(i,\"Angle1\",angle1);
      beamControlTable.cellValueRC(i,\"Angle2\",angle2);
      beamControlTable.cellValueRC(i,\"AngleTimes\",angleTimes);
      beamControlTable.cellValueRC(i,\"BeamID\",beamID);
      if (connected) {
        beamControlTable.cellBackColRC(i, \"Connected\", \"green\");
      } else {
        beamControlTable.cellBackColRC(i, \"Connected\", \"red\");
      }
    }
  }
}	
	



" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
6 0
"Border1"
""
1 10 200 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
1 0 0 0 0 0
EE E
1
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 2 1 0 1 E U  1 E 10 10 940 200
2 1
"Text4"
""
1 10 19 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 21 141 47
0 2 0 "s" 0 0 0 64 0 0  12 21
 1
1
LANG:1 105 -microsoft windows-Arial-bold-r-normal-*-*-140-100-100-*-*-iso8859-1|-16,0,0,0,700,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 14 Beam Control :
25 15
"beamControlTable"
""
1 28 -167 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
16 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
17 45 933 192
E "main(int row, string column, string value)
{
 
	string dp = \"LOFAR_ObsSW_\" + beamControlTable.cellValueRC(row,\"Observation\")+\"_BeamCtrl\";
	DebugTN(\"ColumnCommand: trigger Navigator with datapoint=\",dp);
	navConfigTriggerNavigatorRefreshWithDP(dp);
}" 0
 1 0 1 10 1 "Status" 0 1 0 "s" 1
LANG:1 1 S
E1
LANG:1 6 Status
 20 "Connected" 0 1 0 "s" 1
LANG:1 1 C
E1
LANG:1 10 Connected?
 20 "Observation" 0 1 0 "s" 1
LANG:1 11 Observation
E1
LANG:1 0 
 200 "BeamID" 0 1 0 "s" 1
LANG:1 4 B-ID
E1
LANG:1 6 BeamID
 40 "Angle1" 0 1 0 "s" 1
LANG:1 7 Angle 1
E1
LANG:1 0 
 55 "Angle2" 0 1 0 "s" 1
LANG:1 7 Angel 2
E1
LANG:1 0 
 55 "AngleTimes" 0 1 0 "s" 1
LANG:1 11 Angle Times
E1
LANG:1 0 
 83 "SubArray" 0 1 0 "s" 1
LANG:1 8 SubArray
E1
LANG:1 0 
 142 "SubbandList" 0 1 0 "s" 1
LANG:1 11 SubbandList
E1
LANG:1 0 
 142 "BeamletList" 0 1 0 "s" 1
LANG:1 11 BeamletList
E1
LANG:1 0 
 135 16 16 "" 1 1
LANG:1 2 #1
8 30 1
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
0 2 2 3 0
1 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0