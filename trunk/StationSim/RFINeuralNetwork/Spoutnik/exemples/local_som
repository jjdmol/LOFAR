#!/bin/csh -f

### ################################################################################
### Substitier 'MonFichierDeDonnees' et 'PrefixDeSorties' par des
### valeurs a vous:
###
###   - 'MonFichierDeDonnees' est le nom du foichier de donnees au
###     format Spoutnik.
###
###   - 'PrefixDeSorties' est le prefix qui auront les fichiers crees
###     par SOM. Voir commentaires plus bas.
### ################################################################################

# Chemin d'acces aux executables
set BINDIR   = /mesiow0/jdromer/spoutnik/Spoutnik/src/

# \rm ${CASE}_SOM_* >& /dev/null

### ################################################################################
### APPEL AU PROGRAMME
### ################################################################################
### Changer ici les arguments du programme:

${BINDIR}/som -map-size 2 9 9 \
    -temp  5  1                 \
    -learn-rate  0.10  0.037    \
    -cycles 3000  100           \
   sauvegardecont2.txt holcont5_ 

### ################################################################################
### Calling program './Lnx86/bin/som':
###         ./Lnx86/bin/som [options] <LearnFile> <FilePrefix>
### 
### Arguments:
###         <LearnFile> ....... fichier de formes a classer.
###         <FilePrefix> ...... prefix des fichiers de sortie qui seront :
###              - <FilePrefix>_SOM_Wei.map ........ poids de la carte.
###              - <FilePrefix>_SOM_WeiCard.map .... poids + cardinalite pour Sammon.
###              - <FilePrefix>_SOM_WFEP.res ....... neurone gagnant par forme.
###              - <FilePrefix>_SOM_Card.res ....... cardinalite de chaque neurone.
### 
### List of options:
###                 -test-file <TestSetFileName> :
###                                  to indicate the name of the
###                                  file to test. Default = NULL.
###                 -old-map <InputMapFileName> :
###                                  to indicate the old map file
###                                  name to read. Default = NULL.
###                 -map-size <MapDim> <MapSize1> .. <MapSizeN> :
###                                  Map dimension and size.
###                                  Default = 2 dimensions, 10x10
###                 -map-min-val <MapMinValue> :
###                                  Real value with min map value. This will be
###                                  the same for all dimensions of input data.
###                                  Default = -1.000000
###                 -map-min <MapMinString> :
###                                  string with min map value. Give as many
###                                  values as dimensions of input data.
###                                  Default is related to <MapMinValue> default value.
###                 -map-max-val <MapMaxValue> :
###                                  Real value with max map value. This will be
###                                  the same for all dimensions of input data.
###                                  Default = 1.000000
###                 -map-max <MapMaxString> :
###                                  string with max map value. Give as many
###                                  values as dimensions of input data
###                                  Default is related to <MapMaxValue> default value.
###                 -temp <TemperatureMaximum> <TemperatureMinimum> :
###                                  Maximal (start) and minimal (end) temperature
###                                  or smooth values. Default = [5.0, 1.0].
###                 -learn-rate <PasDApprentissageMaximum> <PasDApprentissageMinimum> :
###                                  Maximal (start) and minimal (end) learning step
###                                  values. Default = [0.10, 0.01].
###                 -threshold-neigh <SomThresholdNeighborhood> :
###                                  indicates the threshold, farther than that,
###                                  neighborhood doesnt counts.
###                                  Default = 0.001000
###                 -cycles <NdCycles> <FrequenceTests> :
###                                  Number of learning cycles and
###                                  test frequency (in cycles). Default = [2000, 100].
###                 -start-cycle <CycleDepart> :
###                                  Start cycle.
###                                  Default = 0.
###                 -best-contrast <Frequency> :
###                                  Activates flag to allow to save weights if
###                                  best contrast. Default = 0.
###                 -best-rms <Frequency> :
###                                  Activates flag to allow to save weights if
###                                  best RMS. Default = 0.
###                 -trace-map <Frequency> :
###                                  Activates flag to allow to save weights at
###                                 each <Frequency> iterations. Default = 0.
###                 -stochastic :
###                                  Flag to compute learning rate and smooth distance in
###                                  stochastic mode (i.e. at each iteration and not each
###                                  cycle.) Default = OFF.
###
###                 -overwrite :
###                                  Flag to allow overwriting all output files if already
###                                  exists. Default = OFF.
###
### ################################################################################
