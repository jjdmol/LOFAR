
(*
	1 = I, 12i, 4s, 543b
	2 = I, 8i, 24s, 327b
	3 = I, 8i, 64s, 155b
	4 = IQUV, 24s, 13b
	5 = IQUV, 64s, 10b
        6 = I, 4i, 64s, 42b

pre_bf_dsp_&_I/O  ->  3.44 %    4.69 %    7.70 %     4.07 %    6.72 %    7.04 %
beam_forming	  -> 14.36 %   49.19 %   67.27 %     2.19 %    4.56 %   17.50 %
coh_dedispersion  ->     0 %       0 %       0 %     2.76 %    2.12 %    9.18 %
stokes		  -> 45.21 %   26.98 %   13.32 %     0.27 %    0.20 %    0.66 %
2nd_xpose	  ->  5.87 %    2.73 %    0.85 %     2.88 %    3.40 %    3.37 %
stokes_reorder    ->  4.99 %    4.44 %    2.11 %     5.77 %    4.45 %    4.68 %
output_I/O        ->  1.45 %    0.48 %    0.20 %     0.80 %    0.36 %    0.38 %

The above data is read from this file and accumulated using the following command, where N is the line number we need:

awk -v N=1 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr

*)
newgraph
	yaxis min 0 max 100 label : BG/P occupation (% CPU time)
	xaxis min 0 max 7 hash 0 label : Case (see Table 1)
        (*
	hash_labels rotate 22 vjt hjr
	hash_label at 1 : I, 16i, 4s, 543b
	hash_label at 2 : I, 8i, 24s, 327b
	hash_label at 3 : I, 8i, 64s, 155b
	hash_label at 4 : IQUV, 24s, 13b
	hash_label at 5 : IQUV, 64s, 10b
        *)
	hash_label at 1 : A
	hash_label at 2 : B
	hash_label at 3 : C
	hash_label at 4 : D
	hash_label at 5 : E
	hash_label at 6 : F

	newcurve
	(* output core pure I/O *)
	marktype xbar marksize 0.8 fill 0 pattern solid
	pts
        shell : awk -v N=7 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : Output to I/O node

	newcurve
	(* output reorder *)
	marktype xbar marksize 0.8 fill 0.8 pattern solid
	pts
        shell : awk -v N=6 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : Output reordering

	newcurve
	(* 2nd xpose *)
	marktype xbar marksize 0.8 fill 1 pattern solid
	pts
        shell : awk -v N=5 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : 2nd all-to-all exchange

	newcurve
	(* stokes calculation *)
	marktype xbar marksize 0.8 pattern stripe 45
	pts
        shell : awk -v N=4 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : Stokes calculations

	newcurve
	(* coh dd *)
	marktype xbar marksize 0.8 fill 0.2 pattern solid
	pts
        shell : awk -v N=3 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : Coherent dedispersion \
(cases D-F)

	newcurve
	(* beam forming *)
	marktype xbar marksize 0.8 fill 0.5 pattern solid
	pts
        shell : awk -v N=2 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : Beam forming

	newcurve
	(* input core I/O + prebf dsp *)
	marktype xbar marksize 0.8 fill 0.5 pattern stripe -45
	pts
        shell : awk -v N=1 '/->/ {a+=$3;b+=$5;c+=$7;d+=$9;e+=$11;f+=$13;n++; if(n==N) print "1 " a " 2 " b " 3 " c " 4 " d " 5 " e " 6 " f;}' <execution_times.jgr
	label : 1st all-to-all exchange & \
input handling

  	legend top defaults hjl linelength 75 x 4 y 90

