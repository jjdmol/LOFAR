# This file is built up as follow:
# - Connection data (first all hosts, then all ports, because the hosts need to be changed sometimes, the ports can stay the same)
# - Data format (things like no subbands, station positions
# - Some variables for producing fake data, these will be read by several applications
# - Some general variables (like number of runs)
# - Variables per application. The idea is that these variables are only read by that specific application (if they must be read by more applications, put them in General...)


# The hosts for all (socket)connections
# Do not change these hosts without changing the machinefile(s). Host on which TFC_DelayCompensation runs.
Connections.Input_Delay.ServerHost     =10.20.98.1
Connections.Input_BGLProc.ServerHosts  =[10.20.98.4]
Connections.BGLProc_Storage.ServerHosts=[192.168.100.254]
Connections.Delay_BGLProc.ServerHost   =10.20.98.1

# The ports for all (socket)connections
Connections.Input_Delay.Ports    =[7200,7201]
Connections.Input_BGLProc.Ports  =[8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015]
Connections.BGLProc_Storage.Ports=[8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215]

# The format of the data
Observation.NSubbands=1
Observation.NChannels = 256
Observation.NPolarisations=2
Observation.NSamplesToIntegrate= 196608 #155648
Observation.NStations=2
Observation.StationPositions =      # position (lat(rad),long(rad),height(m)) \
[0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, \
1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, \
0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, 1,1,1, 0,0,0, \
1,1,1, 0,0,0, 1,1,1, 2,2,2] 
Observation.PositionType = ITRF     # position type
Observation.NBeams = 1              # number of beams used
Observation.BeamDirections = [0,0]  # pair of RA/DEC per beam (angle in rad)
Observation.DirectionType = J2000   # direction type
Observation.StartTime = 123         # number of seconds since Jan 1, 1970 (UTC)
Observation.EndTime   =  1          # number of seconds since Jan 1, 1970 (UTC)
Observation.RefFreqs = [99950592.0, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8, 1.0e8]  # the reference frequency for each stored(!) subband (Hz)
Observation.ChanWidth = 1.0e8       # width of each channel (Hz)

# The amount of fake data (this includes the normal data, so it should always be more than Data.*)
FakeData.NSubbands=1
FakeData.NStations=37

# General Variables
General.NRuns = 30      # Number of seconds to process. NB: must be a multiple of 'BGLProc.SlavesPerSubband'

# Variables for the DelayCompensation

# Variables for the InputSection
Input.NPacketsInFrame=125
Input.SzEPAheader=16
Input.SzEPApayload=8  # must be a multiple of 8 (Npol * 4) and it must be more than NSubbands * 8
Input.IPHeaderSize=32
Input.NSamplesToBuffer=401408
Input.Transport.0.th        = FILE  # should be one of ETHERNET, FILE, SOCKET, NULL
Input.Transport.0.inputFile = "udp_rsp0.data"
Input.Transport.1.th        = FILE  # should be one of ETHERNET, FILE, SOCKET, NULL
Input.Transport.1.inputFile = "udp_rsp1.data"

# Variables for BGLProcessing
# This defines the number of computing "cells" in the application
# and the number of filters within a cell. 
# These parameters MUST match the compiled in values in TFC_Config.h
# Note that some values may differ from values defined in the Input section.
BGLProc.SubbandsPerCell = 1
BGLProc.SlavesPerSubband = 6
BGLProc.NPPFTaps = 16

# Variables for Storage
Storage.MSName = ObservationA.MS
Storage.WriteToMAC = F

Generator.NoRuns = 3             # 0 means run indefinitely
Generator.OutputRate = 0        # number of ethernet frames per second
Generator.SignalType = ZERO	  # should be one of ZERO, RANDOM, PATTERN
Generator.StationIds = [0, 1]
Generator.StationDelays = [0, 0]
Generator.UseEth = F
Generator.OutputFiles = ["Generator1.out", "Generator2.out"]
Generator.Interfaces = ["eth0", "eth0"]
Generator.RecordBufferSize = 20

Recorder.bufferSize=6400
Recorder.inTH.th=Ethernet
Recorder.inTH.interface="eth1"
Recorder.inTH.srcMac="00:00:00:00:00:01"
Recorder.inTH.dstMac="00:04:23:B5:C4:6A"
Recorder.outTH.th=File
Recorder.outTH.file="Recorder1.out"
Recorder.ExampleSocketTH.hostName='remoteHost' # only needed if isServer = F
Recorder.ExampleSocketTH.port='12345'
Recorder.ExampleSocketTH.isServer=F

