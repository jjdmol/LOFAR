#!/bin/sh

#  lofarconf

#  Copyright (C) 2002
#  ASTRON (Netherlands Foundation for Research in Astronomy)
#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  $Id$


# Run configure for a specific build variant.
# The current directory is used as the variant name.
#
# Use as
#    lofarconf configure-directory [configure-options]

# Get the current directory.
lfr_curdir=`pwd`
# Get the LOFAR base from the full path of this script.
lfr_sdir=`dirname $0`
lfr_root=`(cd $lfr_sdir && pwd) | sed -e "s%/LOFAR/.*%/LOFAR%"`
lfr_base=$lfr_root/autoconf_share

# Find package, lofar root, compiler, variant.
# Exit if not found.
lfr_result=`$lfr_base/findpkg -l`
if [ $? != 0 ]; then
  echo "Could not derive package from current build directory";
  echo "The build directory should be in the source tree like"
  echo "      LOFAR/'package'/build/'variant'"
  echo "or in another tree like"
  echo "      something/build/'variant'/'package'"
  echo "or    something/'package'/build/'variant'"
  echo "where variant is, for example, gnu_opt."
  exit 2
fi
lfr_pkg=`echo $lfr_result | awk '{print $1}'`
lfr_cmp=`echo $lfr_result | awk '{print $2}'`
lfr_var=`echo $lfr_result | awk '{print $3}'`

# The configure script for the package is in the same tree as
# this script is in.
lfr_confdir=$lfr_root/$lfr_pkg;

# Get the configure and make options from the variants file.
# Look first for a host specific one; if not found, for a general one.
# Remove possible domain part from host name.
lfr_host=`uname -n | sed -e "s%\..*%%"`
cmpopts=
varopts=
cmpmakes=
varmakes=
if [ -f $lfr_base/variants.$lfr_host ]; then
  cmpopts=`egrep "^$lfr_cmp.compiler.conf:" $lfr_base/variants.$lfr_host`
  varopts=`egrep "^$lfr_var.variant.conf:" $lfr_base/variants.$lfr_host`
  cmpmakes=`egrep "^$lfr_cmp.compiler.make:" $lfr_base/variants.$lfr_host`
  varmakes=`egrep "^$lfr_var.variant.make:" $lfr_base/variants.$lfr_host`
fi
if [ "x$cmpopts" = "x" ]; then
  cmpopts=`egrep "^$lfr_cmp.compiler.conf:" $lfr_base/variants`
fi
if [ "x$varopts" = "x" ]; then
  varopts=`egrep "^$lfr_var.variant.conf:" $lfr_base/variants`
fi
if [ "x$varmakes" = "x" ]; then
  varmakes=`egrep "^$lfr_var.variant.make:" $lfr_base/variants`
fi
if [ "x$cmpmakes" = "x" ]; then
  cmpmakes=`egrep "^$lfr_cmp.compiler.make:" $lfr_base/variants`
fi

# Exit if the compiler is unknown.
if [ "x$cmpopts" = "x" ]; then
  echo "Cannot configure; $lfr_cmp.compiler.conf not found in $lfr_base/variants[.$lfr_host]"
  exit 1;
fi
# Get the options only from the configure lines.
# Substitute possible variables by their value defined in a variants file.
cmpopts=`echo $cmpopts | sed -e "s%.*\.compiler\.conf: *%%"`
varopts=`echo $varopts | sed -e "s%.*\.variant\.conf: *%%"`
opts=`$lfr_base/lofarconf_subst "$lfr_base" "$lfr_host" "$lfr_cmp" "$lfr_var" "$cmpopts $varopts"`
if [ $? != 0 ]; then
  echo "$opts"
  exit 2
fi

# Now do the configure.
# First create a new lofar_config.h file.
# Note that "$@" preserves quotes around each argument.
\rm -f lofar_config.h
touch lofar_config.h
echo "${lfr_cmp}_$lfr_var configure will be done on host $lfr_host for package $lfr_pkg"
echo $lfr_confdir/configure $opts "$@"
$lfr_confdir/configure $opts "$@"  ||  exit 2


# Get the compiler make options.
cmpmakes=`echo $cmpmakes | sed -e "s%.*\.compiler\.make: *%%"`
varmakes=`echo $varmakes | sed -e "s%.*\.variant\.make: *%%"`

# Write the options into the makeoptions file.
\rm -f makeoptions
touch makeoptions

# Substitute possible variables by their value defined in a variants file.
if [ "$cmpmakes$varmakes" != "" ]; then
  opts=`$lfr_base/lofarconf_subst "$lfr_base" "$lfr_host" "$lfr_cmp" "$lfr_var" "$cmpmakes $varmakes"`
  if [ $? != 0 ]; then
    echo "$opts"
    exit 2
  fi

  echo ""
  echo "$opts" > makeoptions
  echo "make options"
  echo "  $opts";
  echo "written into makeoptions file";
fi
