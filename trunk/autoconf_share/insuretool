#!/bin/sh

#
# Check for enough arguments
#
if test $# -lt 6 ; then
  echo "usage: insuretool [0|1]  [0|1]    [0|1] top_builddir insuretool_prefix compiler ..."
  echo "                  ^      ^        ^"
  echo " enable         insure inuse tca"
  exit 1
fi

#
# Determine which tools have been installed
#
have_insure=$1
shift
have_inuse=$1
shift
have_tca=$1
shift

#
# Determine location of build directory
#
top_builddir=$1
shift

#
# Determine whether running insure, inuse, or tca
#
insuretools_prefix=$1
shift

#
# Test whether QA env variable is set
#
if test "${QA+set}" != "set"; then

  #
  # INSURE not defined so simply strip the path to the insure binary
  # and call the compiler directly
  #
  $*

else

  #
  # Insure found, so save the path to insure and call insure
  # with INSURE_OPTIONS as arguments
  #
  error=0
  case $QA in
    insure);;
    inuse);;
    tca);;
    *)
	echo QA should be set to one of:
	if test $have_insure -eq 1; then
	    echo "    insure"
        fi
	if test $have_inuse -eq 1; then
	    echo "    inuse"
        fi
	if test $have_tca -eq 1; then
	    echo "    tca"
        fi
	error=1
  esac

  #
  # Define options for insure, inuse, and tca
  #
  if test "${INSURE_OPTIONS+set}" != "set"; then

    #
    # Set different options for each insure tool
    #
    case $QA in
	insure) INSURE_OPTIONS="-Zi" ;;
	inuse)  INSURE_OPTIONS="-Zuse" ;;
	tca)    INSURE_OPTIONS="-Zcov" ;;
    esac
  fi

  if test $error -eq 0; then

    # Insure cannot deal with compiler (compiler is mentioned in .psrc file).
    # So copy .psrc created in lofar_qatools.m4 and add compiler line.
    # Add inuse line if that is used.
    \rm -f .psrc
    cp $top_builddir/psrc .psrc
    echo "compiler $1" >> .psrc
    shift
    case $QA in
	inuse)  echo "insure++.inuse on" >> .psrc
    esac
    $insuretools_prefix/insure $INSURE_OPTIONS $*
  else
    false
  fi
fi
