
=== Constant expressions ===
Expr(1)                                            : 1
Expr(3.14)                                         : 3.14
Expr("Where's Johnny?!")                           : 'Where''s Johnny?!'

=== Arithmetic expressions ===
+Expr()                                            : Null expression argument is not allowed
-Expr()                                            : Null expression argument is not allowed
+Expr(1)                                           : +1
-Expr(2.0)                                         : -2
Expr() + Expr()                                    : Null expression argument is not allowed
Expr(0) - Expr()                                   : Null expression argument is not allowed
Expr() * Expr(0)                                   : Null expression argument is not allowed
Expr(0) / Expr(0)                                  : (0/0)
Expr(1) + Expr(-2)                                 : (1+-2)
Expr(2.0) - Expr(3)                                : (2-3)
Expr(-3) * Expr(-4.2)                              : (-3*-4.2)
Expr(-4.1) / Expr(2.7)                             : (-4.1/2.7)
Expr(Expr(3) + Expr(4)) * Expr(Expr(5) - Expr(6))  : ((3+4)*(5-6))

=== Comparison expressions ===
Expr() < Expr()                                    : Null expression argument is not allowed
Expr(0) > Expr()                                   : Null expression argument is not allowed
Expr(0) == Expr(0)                                 : (0=0)
Expr(-1) != Expr(1)                                : (-1<>1)
Expr(2.0) >= Expr(3)                               : (2>=3)
Expr(4) > Expr(2.7)                                : (4>2.7)
Expr(-1.5) <= Expr(3)                              : (-1.5<=3)
Expr(3) < Expr(-2.7)                               : (3<-2.7)

=== Logical expressions ===
!Expr(0)                                           : NOT 0
Expr() || Expr()                                   : 
Expr() || Expr(0)                                  : 0
Expr(0) && Expr()                                  : 0
Expr(0) && Expr(0)                                 : (0 AND 0)
Expr(Expr() == Expr()) && Expr(Expr(0) != Expr(0)) : Null expression argument is not allowed
Expr(Expr() < Expr(0)) || Expr(Expr(0) > Expr())   : Null expression argument is not allowed
Expr(Expr(0) <= Expr(1)) && Expr(Expr(1) >= Expr(0))
                                                   : ((0<=1) AND (1>=0))
Expr(! Expr(1)) || Expr(! Expr(-1))                : (NOT 1 OR NOT -1)
Expr("hello") != Expr("world")                     : ('hello'<>'world')

=== SQL BETWEEN expressions ===
Expr().between(Expr(),Expr())                      : Null expression argument is not allowed
Expr().between(Expr(0),Expr())                     : Null expression argument is not allowed
Expr().between(Expr(-1),Expr(1))                   : Null expression argument is not allowed
Expr(0).between(Expr(),Expr())                     : Null expression argument is not allowed
Expr(0).between(Expr(-1),Expr())                   : Null expression argument is not allowed
Expr(0).between(Expr(- Expr(1)),Expr(1))           : (0 BETWEEN -1 AND 1)
Expr(Expr(5) - Expr(2)).between(Expr(2),Expr(4))   : ((5-2) BETWEEN 2 AND 4)
Expr(Expr(2) - Expr(5)).notBetween(Expr(2),Expr(4))
                                                   : ((2-5) NOT BETWEEN 2 AND 4)

=== SQL IN expressions ===
Expr(1).in(c)                                      : Null expression argument is not allowed
Expr(Expr(4) + Expr(3)).in(c)                      : (4+3) IN (2)
Expr(Expr(3) * Expr(- Expr(4))).notIn(c)           : (3*-4) NOT IN (2,3,4)

=== SQL LIKE expressions ===
Expr("Hello_World").like("Hello_*")                : 'Hello_World' LIKE 'Hello\\_%' ESCAPE '\\'
Expr("Hello_World").like("*_World")                : 'Hello_World' LIKE '%\\_World' ESCAPE '\\'
Expr("Hello_World").like("Hello_?")                : 'Hello_World' LIKE 'Hello\\__' ESCAPE '\\'
Expr("Hello_World").like("?_World")                : 'Hello_World' LIKE '_\\_World' ESCAPE '\\'
Expr("Hello_World").like("Hello?World")            : 'Hello_World' LIKE 'Hello_World' ESCAPE '\\'

Expr("Hello%World").notLike("Hello%*")             : 'Hello%World' NOT LIKE 'Hello\\%%' ESCAPE '\\'
Expr("Hello%World").notLike("*%World")             : 'Hello%World' NOT LIKE '%\\%World' ESCAPE '\\'
Expr("Hello%World").notLike("Hello%?")             : 'Hello%World' NOT LIKE 'Hello\\%_' ESCAPE '\\'
Expr("Hello%World").notLike("?%World")             : 'Hello%World' NOT LIKE '_\\%World' ESCAPE '\\'
Expr("Hello%World").notLike("Hello?World")         : 'Hello%World' NOT LIKE 'Hello_World' ESCAPE '\\'

Expr("Hello*World").like("Hello\\**")              : 'Hello*World' LIKE 'Hello*%' ESCAPE '\\'
Expr("Hello*World").like("*\\*World")              : 'Hello*World' LIKE '%*World' ESCAPE '\\'
Expr("Hello*World").like("Hello\\*?")              : 'Hello*World' LIKE 'Hello*_' ESCAPE '\\'
Expr("Hello*World").like("?\\*World")              : 'Hello*World' LIKE '_*World' ESCAPE '\\'
Expr("Hello*World").like("Hello?World")            : 'Hello*World' LIKE 'Hello_World' ESCAPE '\\'

Expr("Hello?World").notLike("Hello\\?*")           : 'Hello?World' NOT LIKE 'Hello?%' ESCAPE '\\'
Expr("Hello?World").notLike("*\\?World")           : 'Hello?World' NOT LIKE '%?World' ESCAPE '\\'
Expr("Hello?World").notLike("Hello\\??")           : 'Hello?World' NOT LIKE 'Hello?_' ESCAPE '\\'
Expr("Hello?World").notLike("?\\?World")           : 'Hello?World' NOT LIKE '_?World' ESCAPE '\\'
Expr("Hello?World").notLike("Hello?World")         : 'Hello?World' NOT LIKE 'Hello_World' ESCAPE '\\'

Expr("Hello\\\\World").like("Hello\\\\*")          : 'Hello\\World' LIKE 'Hello\\\\%' ESCAPE '\\'
Expr("Hello\\\\World").like("*\\\\World")          : 'Hello\\World' LIKE '%\\\\World' ESCAPE '\\'
Expr("Hello\\\\World").like("Hello\\\\?")          : 'Hello\\World' LIKE 'Hello\\\\_' ESCAPE '\\'
Expr("Hello\\\\World").like("?\\\\World")          : 'Hello\\World' LIKE '_\\\\World' ESCAPE '\\'
Expr("Hello\\\\World").like("Hello?World")         : 'Hello\\World' LIKE 'Hello_World' ESCAPE '\\'

Expr("Hello'World").notLike("Hello'*")             : 'Hello''World' NOT LIKE 'Hello''%' ESCAPE '\\'
Expr("Hello'World").notLike("*'World")             : 'Hello''World' NOT LIKE '%''World' ESCAPE '\\'
Expr("Hello'World").notLike("Hello'?")             : 'Hello''World' NOT LIKE 'Hello''_' ESCAPE '\\'
Expr("Hello'World").notLike("?'World")             : 'Hello''World' NOT LIKE '_''World' ESCAPE '\\'
Expr("Hello'World").notLike("Hello?World")         : 'Hello''World' NOT LIKE 'Hello_World' ESCAPE '\\'

=== Invalid composite expressions ===
Expr(Expr(0).between(Expr(-1),Expr(2))) + Expr(3)  : ((0 BETWEEN -1 AND 2)+3)
Expr(Expr("Hello") + Expr("World")).like("Hello*") : ('Hello'+'World') LIKE 'Hello%' ESCAPE '\\'
