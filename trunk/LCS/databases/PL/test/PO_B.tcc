//# This file was generated by genLCScode v1.0 on Tue Nov 11 17:20:45 CET 2003
//# with the command: genLCScode MyModule.map.proto MyModule.fun.proto P 
//# from the directory: /export/home/loose/temp
//#
//# EDITING THIS FILE MANUALLY IS AT YOUR OWN RISK
//# IT MIGHT BE OVERWRITTEN BY THE NEXT MAKE OF YOUR PROJECT
//#
#include "PO_B.h"
#include <PL/TPersistentObject.h>

using namespace dtl;

namespace LOFAR {

  namespace PL {

    // The BCA<B> structure 'binds' the database columns
    // to the members of the DBRep<B> class.
    template<>
    void BCA<B>::operator()(BoundIOs& cols, DataObj& rowbuf)
    {
      BCA<PersistentObject::MetaData>()(cols,rowbuf);
      cols["ItsBool"]   == rowbuf.itsBool;
      cols["ItsShort"]  == rowbuf.itsShort;
      cols["ItsFloat"]  == rowbuf.itsFloat;
      cols["ItsString"] == rowbuf.itsString;
    }

    // toDBRep copies the fields of the B class to the DBRep<B> structure.
    template<>
    void TPersistentObject<B>::toDBRep(DBRep<B>& dest) const
    {
      dest.itsBool = itsObjectPtr->itsBool;
      dest.itsShort  = itsObjectPtr->itsShort;
      dest.itsFloat  = itsObjectPtr->itsFloat;
      dest.itsString  = itsObjectPtr->itsString;
    }


    // fromDBRep copies the fields of the DBRep<B> structure to the B class.
    template<>
    void TPersistentObject<B>::fromDBRep(const DBRep<B>& org)
    {
      itsObjectPtr->itsBool  = org.itsBool;
      itsObjectPtr->itsShort  = org.itsShort;
      itsObjectPtr->itsFloat  = org.itsFloat;
      itsObjectPtr->itsString  = org.itsString;
    }

    // Initialize the internals of TPersistentObject<B>
    template<>
    void TPersistentObject<B>::init()
    {
      // Set the correct database table name
      tableName("B");
    }

    // Initialize the attribute map for TPersistentObject<B>
    template<>
    void TPersistentObject<B>::initAttribMap()
    {
      theirAttribMap["itsBool"]   = "ITSBOOL";
      theirAttribMap["itsShort"]  = "ITSSHORT";
      theirAttribMap["itsFloat"]  = "ITSFLOAT";
      theirAttribMap["itsString"] = "ITSSTRING";
    }

  } // close namespace PL

}  // close namespace LOFAR

