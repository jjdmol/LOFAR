//# This file was generated by genDBcode v2.9 on Wed Mar  2 10:49:00 CET 2005
//# with the command: genDBcode P C.plmap  
//# from the directory: /home/loose/LOFAR/LCS/databases/PL/test
//#
//# EDITING THIS FILE MANUALLY IS AT YOUR OWN RISK
//# IT MIGHT BE OVERWRITTEN BY THE NEXT MAKE OF YOUR PROJECT
//#
#include "PO_B.h"
#include <PL/TPersistentObject.h>

namespace LOFAR {
	namespace PL {

// bindCols() 'binds' the database columns represented by a cols
// to the members of the DBRep< B > class.
void DBRep< B >::bindCols(dtl::BoundIOs& cols) {
	cols["itsBool"]	== itsBool;
	cols["itsShort"]	== itsShort;
	cols["itsFloat"]	== itsFloat;
	cols["itsString"]	== itsString;
}


// toDBRep copies the fields of the B class to the
// DBRep< B > structure
void TPersistentObject< B >::toDBRep(DBRep< B >& dest) const
{
	dest.itsBool	= data().itsBool;
	dest.itsShort	= data().itsShort;
	dest.itsFloat	= data().itsFloat;
	dest.itsString	= data().itsString;
}


// fromDBRep copies the fields of the DBRep< B > structure
// to the B class.
void TPersistentObject< B >::fromDBRep(const DBRep< B >& src)
{
	data().itsBool	= src.itsBool;
	data().itsShort	= src.itsShort;
	data().itsFloat	= src.itsFloat;
	data().itsString	= src.itsString;
}


// Initialize the internals of TPersistentObject< B >
void TPersistentObject< B >::init()
{
	// set the correct database table name
	tableName("B");
}


// Initialize the attribute map for TPersistenObject< B >
template<>
void TPersistentObject< B >::initAttribMap()
{
	theirAttribMap["itsBool"]	= "itsBool";
	theirAttribMap["itsShort"]	= "itsShort";
	theirAttribMap["itsFloat"]	= "itsFloat";
	theirAttribMap["itsString"]	= "itsString";
}


	} // close namespace PL
}	// close namespace LOFAR

