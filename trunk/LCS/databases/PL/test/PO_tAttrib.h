//# This file was generated by genDBcode v2.8 on Wed Mar 10 09:58:09 CET 2004
//# with the command: genDBcode P tAttrib.plmap.proto  
//# from the directory: /home/loose/LOFAR/LCS/databases/PL/test
//#
//# EDITING THIS FILE MANUALLY IS AT YOUR OWN RISK
//# IT MIGHT BE OVERWRITTEN BY THE NEXT MAKE OF YOUR PROJECT
//#
//# only include this file once
#if !defined(PO_040310095809_TATTRIB_H)
#define PO_040310095809_TATTRIB_H

#include "tAttrib.h"
#include <PL/DBRep.h>

namespace LOFAR {
	namespace PL {


// The DBRep< Z > structure is a contigious representation of
// all fields that should be stored to the database
template <>
struct DBRep< Z > {
	void bindCols(dtl::BoundIOs& cols);
	string			s;
};


// The DBRep< Y > structure is a contigious representation of
// all fields that should be stored to the database
template <>
struct DBRep< Y > {
	void bindCols(dtl::BoundIOs& cols);
	string			s;
};


// The DBRep< X > structure is a contigious representation of
// all fields that should be stored to the database
template <>
struct DBRep< X > {
	void bindCols(dtl::BoundIOs& cols);
	string			s;
};


// The DBRep< A > structure is a contigious representation of
// all fields that should be stored to the database
template <>
struct DBRep< A > {
	void bindCols(dtl::BoundIOs& cols);
	string			s;
};


// The DBRep< B > structure is a contigious representation of
// all fields that should be stored to the database
template <>
struct DBRep< B > {
	void bindCols(dtl::BoundIOs& cols);
	string			s;
};


// The DBRep< C > structure is a contigious representation of
// all fields that should be stored to the database
template <>
struct DBRep< C > {
	void bindCols(dtl::BoundIOs& cols);
	string			s;
};

	} // close namespace PL
}	// close namespace LOFAR

#include "PO_tAttrib.tcc"	// Include template code

#endif
