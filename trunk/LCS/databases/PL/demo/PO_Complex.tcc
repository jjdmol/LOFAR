//# This file was generated by genDBcode v2.8 on Wed Mar 10 10:58:37 CET 2004
//# with the command: genDBcode P Complex.plmap  
//# from the directory: /home/loose/LOFAR/LCS/databases/PL/demo
//#
//# EDITING THIS FILE MANUALLY IS AT YOUR OWN RISK
//# IT MIGHT BE OVERWRITTEN BY THE NEXT MAKE OF YOUR PROJECT
//#
#include "PO_Complex.h"
#include <PL/TPersistentObject.h>

namespace LOFAR {
	namespace PL {

// bindCols() 'binds' the database columns represented by a cols
// to the members of the DBRep< Complex > class.
void DBRep< Complex >::bindCols(dtl::BoundIOs& cols) {
	cols["REAL"]	== value_re;
	cols["IMAG"]	== value_im;
}


// toDBRep copies the fields of the Complex class to the
// DBRep< Complex > structure
void TPersistentObject< Complex >::toDBRep(DBRep< Complex >& dest) const
{
	dest.value_re	= data().itsValue.re;
	dest.value_im	= data().itsValue.im;
}


// fromDBRep copies the fields of the DBRep< Complex > structure
// to the Complex class.
void TPersistentObject< Complex >::fromDBRep(const DBRep< Complex >& src)
{
	data().itsValue.re	= src.value_re;
	data().itsValue.im	= src.value_im;
}


// Initialize the internals of TPersistentObject< Complex >
void TPersistentObject< Complex >::init()
{
	// set the correct database table name
	tableName("Complex");
}


// Initialize the attribute map for TPersistenObject< Complex >
template<>
void TPersistentObject< Complex >::initAttribMap()
{
	theirAttribMap["value.re"]	= "REAL";
	theirAttribMap["value.im"]	= "IMAG";
}

	} // close namespace PL
}	// close namespace LOFAR

