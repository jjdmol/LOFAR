#!/bin/sh
#-----------------------------------------------------------------------------
# lofarcvsmv: Move files or directories within the LOFAR CVS repository
#-----------------------------------------------------------------------------
#
# Copyright (C) 2005
# ASTRON (Netherlands Foundation for Research in Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, seg@astron.nl
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# $Id$


#-----------------------------------------------------------------------------
# Usage: lofarcvsmv [-recursive] <source> <destination>
#-----------------------------------------------------------------------------
# lofarcvsmv moves a file or a directory full of files within the master
# CVS repository. The change history is preserved with BOTH
# the new copy and the deleted original. However, all tags are stripped from
# the new copy. This is done so that (1) history is preserved, (2) old states
# of the system can be retrieved using old tags, and (3) new tags do not
# affect the deleted files.
#
# -recursive indicates that all subdirectories within the directory
# are moved recursively. Subdirectories are found by looking in the
# user's directory, not in the CVS directory. The build subdirectory
# is not taken into account.
#
# The actual move is done on the CVS server.
# On the CVS server the authorized_keys file should contain entries
# for all users being able to execute lofarcvsmv. The entries have to contain
# the restricted shell script remote_lofarcvsmv.

#
# Status returns:
#    0:  initialization succeeded
#    1:  initialization error
#
#=============================================================================

  SOURCES=
  DESTINATION=
  RECURSIVE=

# Check arguments.
  if [ "$1" = "-h" ]; then
    echo ""
    echo "lofarcvsmv can move source files and directories in the CVS repository"
    echo "while keeping the CVS history of the files."
    echo ""
    echo "Usage: lofarcvsmv [-recursive] <source-list> <destination>" 1>&2
    echo "All file/directory names must be relative to the cvs root."
    echo " e.g.   LOFAR/LCS/Common/src/BlobOStream.h"
    echo ""
    echo "lofarcvsmv has several modes:"
    echo "- Renaming a single file"
    echo "   lofarcvsmv LOFAR/LCS/Common/src/Timer.h LOFAR/LCS/Common/src/NSTimer.h"
    echo "- Moving one or more files to another directory"
    echo "   lofarcvsmv LOFAR/LCS/Common/src/Timer.h LOFAR/LCS/Common/include"
    echo "   lofarcvsmv LOFAR/LCS/Common/src/*.h LOFAR/LCS/Common/include"
    echo "- Moving all regular files in a directory to another directory"
    echo "   lofarcvsmv LOFAR/LCS/Common/src LOFAR/LCS/Common/include"
    echo "- Moving an entire directory tree"
    echo "   lofarcvsmv -recursive LOFAR/LCS LOFAR/NewLCS"
    echo "     Note that this mode uses the directory tree in your shadow,"
    echo "     thus not as it is in the CVS repository."
    echo ""
    exit 0
  fi
  if [ "$1" = "-recursive" ]; then
    RECURSIVE=YES
    shift
  fi
  if [ $# -lt 2 ]; then
    echo "Usage: lofarcvsmv [-recursive] <source-list> <destination>" 1>&2
    exit 1
  fi

  NR=$#
  while [ $# -gt 1 ]
  do
    SOURCES="$SOURCES $1"
    shift
  done
  DESTINATION=$1

  for SOURCE in $SOURCES
  do
    if [ "$SOURCE" = "$DESTINATION" ]; then
      echo "Source and destination are the same" 1>&2
      exit 1
    fi
  done

  # The "cvs MOVE" command will be executed on the cvs server.
  REMOTE_CMD="ssh -q cvs@dop50.astron.nl cvs" ###
  #  REMOTE_CMD="ssh -q cvsmgr@cvs.astron.nl cvs"

  # If multiple sources, they can only be files.
  # The destination must be a directory.
  if [ $NR != 2 ]; then
    for SOURCE in $SOURCES
    do
      $REMOTE_CMD MOVE FIL2DIR $SOURCE $DESTINATION
    done
    exit 0
  fi
    
  # A single source is handled immediately.
  if [ "$RECURSIVE" != "YES" ]; then
    # Check if the source is a directory.
    # If not, a single source file is moved.
    if [ ! -d $SOURCE ]; then
      $REMOTE_CMD MOVE FIL $SOURCE $DESTINATION
      exit 0
    fi
    # A directory is to be moved. Ask if this is what the user wants.
    echo "All source files in CVS directory $SOURCE will be moved to $DESTINATION" 1>&2
    echo "The move is NOT recursive (use -recursive for a recursive move)" 1>& 2
    echo -n "Is this okay? (y,n) [n]: " 1>&2
    read answer
    if [ "$answer" != "y" ]; then
      echo "exiting" 1>&2
      exit 1
    fi
    $REMOTE_CMD MOVE DIR $SOURCE $DESTINATION
    exit 0
  fi

  # Recursive, make sure the user's source directory exists.
  cdir=`pwd`/
  cbdir=`echo $cdir | sed 's%/LOFAR/.*%%'`
  if [ "$cdir" = "$cbdir" ]; then
    echo "-recursive given, but LOFAR directory could not be derived from your current path" 1>&2
    exit 1
  fi
  if [ ! -d $cbdir/$SOURCE ]; then
    echo "-recursive given, but source directory could not be found in your tree" 1>&2
    exit 1
  fi
  # Check that the destination is not a subdirectory of the source.
  rest=`echo $DESTINATION | sed "s%$SOURCE%%"`
  if [ "$rest" != "$DESTINATION" ]; then
    echo "destination is a subdirectory of the source directory" 1>&2
    echo -n "Do you really want this? (y,n) [n]: " 1>&2
    read answer
    if [ "$answer" != "y" ]; then
      echo "exiting" 1>&2
      exit 1
    fi
  fi
  # Now try to find all subdirectories.
  newdirs=$SOURCE
  while [ "$newdirs" != "" ]
  do
    alldirs="$alldirs $newdirs"
    dirs=$newdirs
    newdirs=
    for dir in $dirs
    do
      ndirs=`ls -F $cbdir/$dir | grep '/$'`
      ndirs=`echo $ndirs`           #remove newlines
      ndirs=`echo " $ndirs " | sed 's%/ % %g' | sed -e 's/ build / /' -e 's/ CVS / /' -e s'/ [^ ]*\.cache / /'`
      for ndir in $ndirs
      do
        newdirs="$newdirs $dir/$ndir"
      done
    done
    newdirs=`echo $newdirs | sed 's/  */ /g' | sed 's/^ //'`
  done
  # Show all directories to be moved.
  echo "The following CVS directories will be moved:" 1>&2
  for dir in $alldirs
  do
    bname=`echo $dir | sed "s%$SOURCE%%"`
    echo " $dir --> $DESTINATION$bname" 1>&2
    if [ "$dir" = "$DESTINATION" ]; then
      echo "Error, this source subdirectory and destination are the same" 1>&2
      exit 1
    fi
  done
  echo -n "Is this okay? (y,n) [n]: " 1>&2
  read answer
  if [ "$answer" != "y" ]; then
    echo "exiting" 1>&2
    exit 1
  fi
  # Now do the actual move.
  for dir in $alldirs
  do
    bname=`echo $dir | sed "s%$SOURCE%%"`
    echo
    echo "Moving $dir to $DESTINATION$bname ..."
    echo "Moving $dir to $DESTINATION$bname ..." 1>&2
    $REMOTE_CMD MOVE DIR $dir $DESTINATION$bname
  done

  exit 0
