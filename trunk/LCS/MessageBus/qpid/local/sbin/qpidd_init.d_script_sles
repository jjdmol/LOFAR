#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#
# qpidd        Startup script for the Qpid messaging daemon.
#

### BEGIN INIT INFO
# Provides: qpidd
# Required-Start: $local_fs
# Required-Stop: $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start or stop qpidd
# Description: Qpidd is an AMQP broker. It receives, stores, routes and	
# forwards messages using the AMQP protcol.
### END INIT INFO

prog=qpidd
lockfile=/var/lock/subsys/$prog
pidfile=/var/run/${prog}.pid

[[ -r /etc/sysconfig/$prog ]] && . /etc/sysconfig/$prog

. /etc/rc.status
# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_failed        set local and overall rc status to failed
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status

# First reset status of this service
rc_reset

# Qpid install directory. Has to be added to /etc/sysconfig/qpidd
[[ $QPID_INSTALL_DIR ]] || QPID_INSTALL_DIR=/opt/qpid

# QPID_DATA_DIR should have been set in /etc/sysconfig/qpidd 
# (RHEL systems). If not, set it here
[[ $QPID_DATA_DIR ]] || QPID_DATA_DIR=/data/qpid/.qpidd

# Additional necessary startup options (should be in /etc/sysconfig/qpidd)
[[ $QPIDD_OPTIONS ]] || QPIDD_OPTIONS="--config ${QPID_INSTALL_DIR}/etc/qpid/qpidd.conf --auth no --log-to-file ${QPID_DATA_DIR}/qpid.log"

daemon=${QPID_INSTALL_DIR}/sbin/${prog}

RETVAL=0

#ensure binary is present and executable
if [[ !(-x $daemon) ]] ; then
    echo "$daemon not found or not executable" 
    exit 5
fi

start() {
        echo -n $"Starting Qpid AMQP daemon: "
	start_daemon -u qpid $daemon \
               --data-dir $QPID_DATA_DIR --federation-tag `hostname -f` \
               $QPIDD_OPTIONS \
              --daemon --pid-dir $QPID_DATA_DIR
        
        rc_status -v
}

stop() {
	echo -n $"Stopping Qpid AMQP daemon: "
	$daemon --pid-dir $QPID_DATA_DIR -q
	RETVAL=$?
	rc_status -v
}

reload() {
	echo 1>&2 $"$0: reload not supported"
	exit 3
}

restart() {
	stop
	start
}

# See how we were called.
case "$1" in
  start|stop|restart)
	$1
	;;
  *)
	echo 1>&2 $"Usage: $0 {start|stop|restart}"
	exit 2
esac

rc_exit


