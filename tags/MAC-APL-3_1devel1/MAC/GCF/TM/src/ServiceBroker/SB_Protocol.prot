//
// Protocol definition for the Service Broker deamon
//
autogen definitions protocol;

description = "Protocol for the Service Broker deamon";
prefix = "SB"; // for the signal names
id = "(GCF::TM::F_GCF_PROTOCOL + 3)";

// specify extra include files
include = '<GSB_Defines.h>';

//
// An "event" has a "signal" and a "dir" (direction)
// and zero or more "param"s.
// "dir" can be one of "IN" or "OUT".
// A "param" has a "name" and a "type".
//
event = {
	signal = REGISTER_SERVICE;
	dir = IN;
	param = {
		name = "seqnr";
		type = "unsigned short";
	};
	param = {
		name = "servicename";
		type = "string";
	};
	param = {
		name = "host";
		type = "string";
	};
};

event = {
	signal = UNREGISTER_SERVICE;
	dir = IN;
	param = {
		name = "servicename";
		type = "string";
	};
};

event = {
	signal = GET_SERVICEINFO;
	dir = IN;
	param = {
		name = "seqnr";
		type = "unsigned short";
	};
	param = {
		name = "servicename";
		type = "string";
	};
};

event = {
	signal = SERVICE_REGISTERED;
	dir = OUT;
	param = {
		name = "seqnr";
		type = "unsigned short";
	};
	param = {
		name = "portnumber";
		type = "unsigned int";
	};	
	param = {
		name = "result";
		type = "GCF::SB::TSBResult";
	};
};

event = {
	signal = SERVICE_INFO;
	dir = OUT;
	param = {
		name = "seqnr";
		type = "unsigned short";
	};
	param = {
		name = "portnumber";
		type = "unsigned int";
	};
	param = {
		name = "host";
		type = "string";
	};
	param = {
		name = "result";
		type = "GCF::SB::TSBResult";
	};
};

event = {
	signal = SERVICE_GONE;
	dir = OUT;
	param = {
		name = "servicename";
		type = "string";
	};
};