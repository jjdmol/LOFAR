#!/bin/sh
#
# Script to start MPI. It tries to wrap (part of) the different scripts that
# exist to start MPI (e.g., mpirun, mpiexec, etc.)

error()
{
  echo "ERROR: $@"
  exit 1
}

# Ignore all mpirun options
parse_nompi_options()
{
  # Assume the last "option" is the name of the executable
  while [ $# -gt 1 ]
  do
    shift
  done
  EXECUTABLE=$1
}

parse_openmpi_options()
{
  # Assume the last "option" is the name of the executable
  while [ $# -gt 1 ]
  do
    MPIEXEC_PREFLAGS="$MPIEXEC_PREFLAGS $1"
    shift
  done
  EXECUTABLE=$1
}

parse_mvapich2_options()
{
  while :
  do
    case $1 in
      -c | -np | --np)
        MPIEXEC_PREFLAGS="$MPIEXEC_PREFLAGS -np $2"
        shift 2 || error "argument for option $1 missing"
        ;;
      -H | -host | --host)
        MPIEXEC_PREFLAGS="$MPIEXEC_PREFLAGS -hosts $2"
        shift 2 || error "argument for option $1 missing"
        ;;
      -*)
        error "$1 is an unknown option"
        shift
        ;;
      *) # no more options
        EXECUTABLE="$1"
        break;
        ;;
    esac
  done
}

if [ "@HAVE_MPI@" = "TRUE" ]
then
  MPIEXEC=@MPIEXEC@
  MPIEXEC_PREFLAGS=@MPIEXEC_PREFLAGS@
  MPIEXEC_POSTFLAGS=@MPIEXEC_POSTFLAGS@

  # Determine MPI flavour
  VERSION_HEADER=$(${MPIEXEC} --version 2>&1 | head -n 1)

  if echo ${VERSION_HEADER} | grep "OpenRTE" >/dev/null; then
    MPI_FLAVOUR=openmpi
  elif echo ${VERSION_HEADER} | grep "HYDRA" >/dev/null; then
    MPI_FLAVOUR=mvapich2
  else
    error "Cannot determine flavour of ${MPIEXEC}"
  fi

else
  # Not using MPI
  MPI_FLAVOUR=nompi
fi

parse_${MPI_FLAVOUR}_options "$@"

COMMAND="${MPIEXEC} ${MPIEXEC_PREFLAGS} ${EXECUTABLE} ${MPIEXEC_POSTFLAGS}"

echo "Executing: $COMMAND"
eval $COMMAND
