2006-02-07 11:08  loose

	* configure.in: BugID: 627

	  Prepare for release 1.1

2006-02-07 09:38  loose

	* scripts/Makefile.am: BugID: 625

	  Merged PLGEN and PL package, by moving the scripts from the
	  PLGEN/src directory to the PL/scripts directory.

2006-02-07 09:34  loose

	* test/: Makefile.am, VersionNrTrigger.plpgsql: BugID: 625

	  This file, containg a triggered procedure, was moved to the
	  `scripts' directory.

2006-02-07 09:31  loose

	* Makefile.am, README, configure.in: BugID: 625

	  Merged PLGEN and PL package, by moving the scripts from the
	  PLGEN/src directory to the PL/scripts directory.

2006-02-07 09:10  cvs

	* scripts/: genDBbase, genDBcode, genDBi, genDBsql,
	  VersionNrTrigger.plpgsql: %lofarcvsmv%: Moved from
	  LOFAR/LCS/databases/PLGEN/src, creating new revision

2006-01-25 09:38  loose

	* test/tAttr1.cc: BugID: 597

	  Catch a LOFAR::Exception, because it is a bit more informative
	  than a std::exception.

2006-01-24 09:51  loose

	* AUTHORS, COPYING, ChangeLog, INSTALL, Makefile.am, NEWS,
	  PL.spec.in, README, TODO, configure.in, demo/Makefile.am,
	  include/Makefile.am, include/PL/Makefile.am, src/Makefile.am,
	  test/Makefile.am, test/tA.run, test/tAttr1.run, test/tC.run:
	  BugID: 597

	  * Updated the Makefile.am files to reflect the new situation
	  (i.e. all   header files are now in include/PL instead of src).
	  * Removed all occurrences of nobase_ in all Makefile.am files.  *
	  Added a lot of EXTRA_DIST files to all Makefile.am files, so that
	  the	distribution will contain all the necessary files.  *
	  Modified some .run files to use $(srcdir) instead of a relative
	  path to   locate input files (otherwise it would fail with
	  distcheck) * Added extra clean-up in some .run files, because
	  distcheck complained.  * Added files required for a proper (GNU)
	  distribution.

2006-01-20 15:36  cvs

	* src/Query/: BinaryExprNode.h, ColumnExprNode.h, ConstExprNode.h,
	  Expr.h, ExprNode.h, FunctionExprNode.h, SQLExprNode.h,
	  UnaryExprNode.h: %lofarcvsmv%: Moved to
	  LOFAR/LCS/databases/PL/include/PL/Query

2006-01-20 15:36  cvs

	* include/PL/Query/: BinaryExprNode.h, ColumnExprNode.h,
	  ConstExprNode.h, Expr.h, ExprNode.h, FunctionExprNode.h,
	  SQLExprNode.h, UnaryExprNode.h: %lofarcvsmv%: Moved from
	  LOFAR/LCS/databases/PL/src/Query, creating new revision

2006-01-20 15:36  cvs

	* include/PL/: DTLBase.h, Exception.h, ObjectId.h,
	  PersistenceBroker.h, PersistentObject.h, PLfwd.h, QueryObject.h,
	  TPersistentObject.h, PersistenceBroker.tcc,
	  TPersistentObject.tcc: %lofarcvsmv%: Moved from
	  LOFAR/LCS/databases/PL/src, creating new revision

2006-01-20 15:36  cvs

	* src/: DBRepMeta.h, DTLBase.h, Exception.h, ObjectId.h,
	  PersistenceBroker.h, PersistentObject.h, PLfwd.h, QueryObject.h,
	  TPersistentObject.h, PersistenceBroker.tcc,
	  TPersistentObject.tcc: %lofarcvsmv%: Moved to
	  LOFAR/LCS/databases/PL/include/PL

2006-01-20 15:36  cvs

	* include/PL/Query/: BinaryExprNode.h, ColumnExprNode.h,
	  ConstExprNode.h, Expr.h, ExprNode.h, FunctionExprNode.h,
	  SQLExprNode.h, UnaryExprNode.h: %lofarcvsmv%: Moved from
	  LOFAR/LCS/databases/PL/src/Query, creating new revision

2006-01-20 15:35  cvs

	* src/: Attrib.h, Collection.h, ConnectionHandler.h, DBRep.h,
	  DBRepHolder.h, DBRepMeta.h, DTLBase.h, Exception.h, ObjectId.h,
	  PersistenceBroker.h, PersistentObject.h, PLfwd.h, QueryObject.h,
	  TPersistentObject.h, PersistenceBroker.tcc,
	  TPersistentObject.tcc: %lofarcvsmv%: Moved to
	  LOFAR/LCS/databases/PL/include/PL

2006-01-20 15:35  cvs

	* include/PL/: Attrib.h, Collection.h, ConnectionHandler.h,
	  DBRep.h, DBRepHolder.h, DBRepMeta.h, DTLBase.h, Exception.h,
	  ObjectId.h, PersistenceBroker.h, PersistentObject.h, PLfwd.h,
	  QueryObject.h, TPersistentObject.h, PersistenceBroker.tcc,
	  TPersistentObject.tcc: %lofarcvsmv%: Moved from
	  LOFAR/LCS/databases/PL/src, creating new revision

2006-01-20 11:58  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/FunctionExprNode.h,
	  include/PL/Query/SQLExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Query/BinaryExprNode.cc, src/Query/BinaryExprNode.h,
	  src/Query/ColumnExprNode.cc, src/Query/ColumnExprNode.h,
	  src/Query/ConstExprNode.cc, src/Query/ConstExprNode.h,
	  src/Query/Expr.cc, src/Query/Expr.h, src/Query/ExprNode.h,
	  src/Query/FunctionExprNode.h, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.cc,
	  src/Query/UnaryExprNode.h: BugID: 597

	  Replaced all occurences of std::string, std::iostream, and
	  std::stringstream with their LOFAR counterparts.

2006-01-20 11:06  loose

	* demo/: Transport.h.1, Transport.h.2, Transport.h.3, dComplex.cc,
	  dPerson.cc, dTransport.cc, dTransport.cc.1, dTransport.cc.2,
	  dTransport.cc.3: BugID: 597

	  Minor changes to bring example files *.{h,cc}.[123] in line with
	  the "normal" *.{h,cc} files.

2005-12-27 11:02  loose

	* include/PL/Attrib.h, include/PL/Collection.h,
	  include/PL/ConnectionHandler.h, include/PL/DBRep.h,
	  include/PL/DBRepHolder.h, include/PL/DBRepMeta.h,
	  include/PL/DTLBase.h, include/PL/Exception.h,
	  include/PL/ObjectId.h, include/PL/PLfwd.h,
	  include/PL/PersistenceBroker.h, include/PL/PersistentObject.h,
	  include/PL/QueryObject.h, include/PL/TPersistentObject.h,
	  include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/FunctionExprNode.h,
	  include/PL/Query/SQLExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Attrib.h, src/Collection.h, src/ConnectionHandler.h,
	  src/DBRep.h, src/DBRepHolder.h, src/DBRepMeta.h, src/DTLBase.h,
	  src/Exception.h, src/ObjectId.h, src/PLfwd.h,
	  src/PersistenceBroker.h, src/PersistentObject.h,
	  src/QueryObject.h, src/TPersistentObject.h,
	  src/Query/BinaryExprNode.h, src/Query/ColumnExprNode.h,
	  src/Query/ConstExprNode.h, src/Query/Expr.h,
	  src/Query/ExprNode.h, src/Query/FunctionExprNode.h,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.h: BugID: 394

	  Removed argument to the Doxygen \file command. It caused subtle
	  documentation bugs and it defaults to the current filename
	  anyway.

2005-11-14 16:50  cvs

	* test/: tA.out, tAttr1.out, tAttrib.out, tC.out, tCollection.out,
	  tExpr.out, tObjectId.out, tQuery.out: %lofarcvsmv%: Moved to
	  LOFAR/LCS/databases/PL/test

2005-11-14 16:50  cvs

	* test/: tA.stdout, tAttr1.stdout, tAttrib.stdout, tC.stdout,
	  tCollection.stdout, tExpr.stdout, tObjectId.stdout,
	  tQuery.stdout: %lofarcvsmv%: Moved from
	  LOFAR/LCS/databases/PL/test, creating new revision

2005-10-24 14:15  lofar

	* package.doc, package.dox: BugID: 271 moved al doxygen related
	  .doc file to .dox

2005-10-04 11:43  diepen

	* demo/Makefile.am, src/Makefile.am, Makefile.am, test/Makefile.am:
	  BugId: 396 Use $(top_srcdir)/Makefile.common

2005-10-04 11:40  diepen

	* configure.in: BugId: 396 Use lofar_GENERAL

2005-06-24 15:42  lofar

	* configure.in: changed lofar_INTERNAL entry

2005-06-01 14:25  diepen

	* configure.in: %[ER: 70]% Added check for LOG4CPLUS

2005-05-27 17:03  coolen

	* configure.in: %[ER: 273]%

	  Changed lofar_PACKAGE into lofar_INTERNAL.

2005-05-23 16:26  coolen

	* src/Makefile.am: last changes for lofar_PACKAGE to lofar_INTERNAL
	  change

2005-05-09 10:56  coolen

	* configure.in, src/Makefile.am: %[ER: 273]% minor bugs removed &&
	  PACKAGE .. INTERNAL changed in configure.in files

2005-04-15 12:26  loose

	* src/: PersistenceBroker.cc, Query/BinaryExprNode.cc,
	  Query/SQLExprNode.cc, Query/UnaryExprNode.cc: %[PR: 144]%

	  Definition of THROW macro was moved from Common/Exception.h to
	  Common/LofarLogger.h.

2005-04-15 12:18  loose

	* demo/Person.h, demo/Transport.h, demo/dComplex.cc,
	  demo/dPerson.cc, demo/dTransport.cc, include/PL/DTLBase.h,
	  src/Attrib.cc, src/DTLBase.h, src/PersistenceBroker.cc,
	  src/TPersistentObject.cc: %[PR: 100]%

	  Removed all `#include <config.h>' and `#include <lofar_config.h>'
	  from .h and .tcc files. Added `#include <lofar_config.h>' to .cc
	  files where necessary.

2005-04-14 23:59  loose

	* demo/Person.h, demo/Transport.h, demo/dComplex.cc,
	  demo/dPerson.cc, demo/dTransport.cc, include/PL/DTLBase.h,
	  src/Attrib.cc, src/DTLBase.h, src/PersistenceBroker.cc,
	  src/TPersistentObject.cc: %[PR: 100]%

	  Removed `#include <config.h>' and `#include <lofar_config.h>'
	  from .h and .tcc files. Added `#include <lofar_config.h> to .cc
	  files where necessary.

2005-03-22 13:48  diepen

	* test/: A.h, PO_A.tcc, tA.cc, tC.cc: %[ER: 247]% Use builtin
	  complex

2005-03-02 12:11  loose

	* test/tA.cc, test/tAttr1.cc, test/tAttrib.cc, test/tC.cc,
	  test/tCollection.cc, test/tExpr.cc, test/tObjectId.cc,
	  test/tQuery.cc, include/PL/Attrib.h, include/PL/Collection.h,
	  include/PL/ConnectionHandler.h, include/PL/PersistenceBroker.h,
	  include/PL/PersistentObject.h, include/PL/QueryObject.h,
	  include/PL/TPersistentObject.tcc, src/Attrib.cc, src/Attrib.h,
	  src/Collection.h, src/ConnectionHandler.cc,
	  src/ConnectionHandler.h, src/PersistenceBroker.cc,
	  src/PersistenceBroker.h, src/PersistentObject.cc,
	  src/PersistentObject.h, src/QueryObject.cc, src/QueryObject.h,
	  src/TPersistentObject.tcc: %[ER: 161]%

	  Updated test programs to conform with latest C++ coding
	  standards.

2005-03-02 12:09  loose

	* test/: tA.run, tC.run: %[ER: 161]%

	  * Updated in order to match the new structure of the PLGENerated
	  PO_*.sql   files.

2005-03-02 12:05  loose

	* test/: A.plmap, C.plmap: %[ER: 161]%

	  * Regenerated the .plmap files and made the necessary
	  modifications. Added	 them to the CVS repository to make future
	  regeneration of PO_*.{h,tcc} files   easier.

2005-03-02 12:01  loose

	* test/: PO_A.h, PO_A.sql, PO_A.tcc, PO_A_create_databases.sql,
	  PO_B.h, PO_B.sql, PO_B.tcc, PO_C.h, PO_C.sql, PO_C.tcc,
	  PO_C_create_databases.sql, ABC.sql: %[ER: 161]%

	  * Updated test programs to conform with latest C++ coding
	  standards.  * Regenerated the PO_?.{h,tcc} files and made the
	  necessary (tiny)   modifications.  * Added the .sql files that
	  contain PSQL commands for creating the tables   needed for
	  running the tests.

2005-03-02 11:56  loose

	* test/A.h: %[ER: 161]%

	  Updated test programs to conform with latest C++ coding
	  standards.

2005-03-02 10:43  loose

	* test/: B.h, C.h, tAttrib.h: %[ER: 161]%

	  Updated test programs to conform with latest C++ coding
	  standards.

2005-02-28 09:34  loose

	* configure.in, include/PL/Attrib.h, include/PL/DBRep.h,
	  include/PL/DBRepHolder.h, include/PL/DBRepMeta.h,
	  include/PL/DTLBase.h, include/PL/ObjectId.h, include/PL/PLfwd.h,
	  include/PL/PersistenceBroker.h, include/PL/PersistentObject.h,
	  include/PL/TPersistentObject.h,
	  include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/FunctionExprNode.h,
	  include/PL/Query/SQLExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Attrib.h, src/DBRep.h, src/DBRepHolder.h, src/DBRepMeta.cc,
	  src/DBRepMeta.h, src/DTLBase.h, src/ObjectId.h, src/PLfwd.h,
	  src/PersistenceBroker.h, src/PersistentObject.h,
	  src/TPersistentObject.h, src/Query/BinaryExprNode.h,
	  src/Query/ColumnExprNode.h, src/Query/ConstExprNode.h,
	  src/Query/Expr.h, src/Query/ExprNode.h,
	  src/Query/FunctionExprNode.h, src/Query/SQLExprNode.h,
	  src/Query/UnaryExprNode.h: %[ER: 236]%

	  * Minor changes in documentation.  * Removed all #include's of
	  lofar_config.h or config.h from header files.

2005-02-14 12:29  loose

	* include/PL/Attrib.h, include/PL/Collection.h,
	  include/PL/ConnectionHandler.h, include/PL/DBRep.h,
	  include/PL/DBRepHolder.h, include/PL/DBRepMeta.h,
	  include/PL/DTLBase.h, include/PL/Exception.h,
	  include/PL/ObjectId.h, include/PL/PLfwd.h,
	  include/PL/PersistenceBroker.h, include/PL/PersistentObject.h,
	  include/PL/QueryObject.h, include/PL/TPersistentObject.h,
	  include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/FunctionExprNode.h,
	  include/PL/Query/SQLExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Attrib.h, src/Collection.h, src/ConnectionHandler.h,
	  src/DBRep.h, src/DBRepHolder.h, src/DBRepMeta.h, src/DTLBase.h,
	  src/Exception.h, src/ObjectId.h, src/PLfwd.h,
	  src/PersistenceBroker.h, src/PersistentObject.h, src/Query.h,
	  src/QueryObject.h, src/TPersistentObject.h,
	  src/Query/BinaryExprNode.h, src/Query/ColumnExprNode.h,
	  src/Query/ConstExprNode.h, src/Query/Expr.h,
	  src/Query/ExprNode.h, src/Query/FunctionExprNode.h,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.h, package.doc:
	  %[ER: 236]%

	  Updated documentation and added doxygen group structure.

2005-01-03 14:12  romein

	* test/: tA.in_sqld, tA.run, tAttr1.run, tC.in_sqld, tC.run:
	  %[ER:221]% Use fully-qualified domain names.

2004-12-10 14:44  loose

	* src/: Makefile.am, ObjectCache.cc, ObjectCache.h, SQLTimeStamp.h:
	  %[ER: 61]%

	  Removed "obsolete" files.

	  - SQLTimeStamp is not used anymore.  - ObjectCache was not (yet)
	  implemented. It is needed once we want to support   aggregate
	  relationships (i.e. one-to-many relationships, usually
	  implemented	with "pointer-to" semantics).

2004-12-10 13:45  loose

	* configure.in: %[ER: 61]%

	  Now uses lofar_DTL macros to test for DTL library.

2004-11-26 15:37  loose

	* demo/Makefile.am: %[ER: 61]%

	  Demo programs are now built during 'make all' instead of 'make
	  check'. They will not be installed.

2004-11-19 17:28  loose

	* demo/dPerson.cc, demo/dTransport.cc, demo/dTransport.cc.1,
	  demo/dTransport.cc.2, demo/dTransport.cc.3,
	  include/PL/TPersistentObject.tcc, src/Attrib.cc,
	  src/QueryObject.cc, src/TPersistentObject.tcc, test/tA.cc,
	  test/tAttr1.cc, test/tAttrib.cc, test/tC.cc, test/tQuery.cc:
	  %[PR: 113]%

	  PL now uses the LofarLogger framework instead of the deprecated
	  Debug macros.

2004-10-29 16:42  loose

	* configure.in: %[ER: 0]%

	  Changed the dependency on ODBC to "optional". You don't need the
	  ODBC libraries at compile time, however you DO need them at link
	  time.

2004-10-29 08:17  diepen

	* test/: tA.run, tAttr1.run, tC.run: %[ER: 70]% The way the
	  checktool i passed has changed

2004-10-29 07:51  diepen

	* test/: tA.run, tAttr1.run, tC.run: %[ER: 70]% An extra argument
	  is added to the .run file

2004-10-26 14:10  diepen

	* Makefile.am, src/Makefile.am: %[ER: 70]% Change such that make
	  install works correctly

2004-10-13 11:49  loose

	* demo/dPerson.cc, demo/dTransport.cc, test/tAttr1.cc,
	  test/tAttrib.cc, test/tAttrib.h, test/tC.cc, test/tQuery.cc:
	  %[ER: 161]%

	  * Almost all code in the 'Common' package now resides in the
	  namespace LOFAR.    Work is still in progress.  * The lofar_*.h
	  files (like lofar_string.h) now make the using declarations of
	  the standard types in the namespace LOFAR, instead of the global
	  namespace.	For backward compatibility, the compiler
	  MAKE_LOFAR_SYMBOLS_GLOBAL can be    used. It is recommended that
	  you use these lofar_*.h header files instead of    the standard
	  header files.  * The line 'AM_CPPFLAGS =
	  MAKE_LOFAR_SYMBOLS_GLOBAL' has been added to most of	 the
	  Makefile.am files. The packages that are currently being built in
	    the weekly build are known to compile using the new 'Common'
	  package when	 backward compatibility is enabled. Where
	  necessary, source code or header   files were modified. This
	  usually meant adding a line like e.g.    'using LOFAR::Thread'.

2004-10-06 11:44  loose

	* include/PL/TPersistentObject.h, src/TPersistentObject.h: %[ER:
	  61]%

	  The using declaration for PersistentObject::retrieve should be in
	  the public secition, not the private section. GCC 3.4 correctly
	  complained about this.

2004-10-01 22:18  loose

	* test/: C.h, tC.cc: Made code compatible with DTL 3.6.5, which
	  defines blob as a real class

2004-09-21 12:11  loose

	* TODO: Updated

2004-09-09 16:06  loose

	* include/PL/PLfwd.h, include/PL/PersistenceBroker.h,
	  include/PL/TPersistentObject.h, src/PLfwd.h,
	  src/PersistenceBroker.h, src/TPersistentObject.h: %[ER: 0]%

	  Removed explicit forward declarations in PersistenceBroker.h and
	  TPersistentObject.h. They now include the (updated) PLfwd.h file.

2004-06-23 09:14  coolen

	* test/: Makefile.am, tA.run, tAttr1.run, tC.run: %[ER: 70]% Added
	  possibilities to do CHECKTOOL builds

2004-04-22 08:53  diepen

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 105]% Fixed little bug in retrieveInPlace

2004-04-20 10:39  loose

	* include/PL/Query/Expr.h, src/Query/Expr.h: %[ER: 65]%

	  Added description about expression trees and nodes.

2004-04-20 10:38  loose

	* include/PL/ObjectId.h, src/ObjectId.h: %[ER: 61]%

	  Added description of how the unique ID is generated.

2004-04-19 12:30  loose

	* include/PL/ConnectionHandler.h, src/ConnectionHandler.h: %[ER:
	  61]%

	  Rephrased class description, because it was unclear what the
	  purpose of this class is.

2004-04-19 12:29  loose

	* include/PL/Collection.h, src/Collection.h: %[ER: 61]%

	  * Rephrased class description.  * Removed return statement in
	  void remove() method.

2004-04-19 12:27  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%

	  Corrected documentation error in doUpdate() method.

2004-04-19 12:05  loose

	* include/PL/PersistenceBroker.h, src/PersistenceBroker.h: %[ER:
	  61]%

	  Commented out the two methods that were already marked as "Do we
	  need these methods?", in order to not confuse users of the PL
	  library.

2004-04-15 17:04  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%

	  Corrected a few English language errors.

2004-04-15 16:53  loose

	* src/ConnectionHandler.cc: %[ER: 61]%

	  Added \todo item to remark on autocommit.

2004-04-15 16:03  loose

	* src/PersistentObject.cc: %[ER: 61]%

	  Removed comments in the retrieve() method, which suggested that
	  this code was still experimental. (Ref. PL code review: item
	  317).

2004-04-15 15:38  loose

	* src/: Makefile.am, Query/Expr.cc, Query/LogicalBinaryExprNode.cc,
	  Query/LogicalBinaryExprNode.h, Query/LogicalUnaryExprNode.cc,
	  Query/LogicalUnaryExprNode.h: %[ER: 65]%

	  Removed the obsolete files/classes LogicalBinaryExprNode and
	  LogicalUnaryExprNode.

2004-04-15 14:39  loose

	* include/PL/PersistentObject.h, include/PL/QueryObject.h,
	  include/PL/TPersistentObject.tcc, src/Makefile.am,
	  src/PersistentObject.h, src/Query.cc, src/Query.h,
	  src/QueryObject.cc, src/QueryObject.h, src/TPersistentObject.tcc:
	  %[ER: 65]%

	  Moved the class declaration and definition of the class
	  QueryObject to the files QueryObject.{h,cc}. Retained the file
	  Query.h for backward compatibility.

2004-04-15 13:26  loose

	* include/PL/Query/Expr.h, include/PL/Query/SQLExprNode.h,
	  src/Query/Expr.cc, src/Query/Expr.h, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h: %[ER: 65]%

	  The LikeExprNode now takes a string as the pattern argument,
	  instead of an Expr, because a pattern can only be a string.

2004-04-15 09:39  loose

	* test/: tExpr.cc, tExpr.out, tExpr.stdout: %[ER: 65]%

	  Added a few extra tests for constant expressions and for like()
	  with some extra string patterns.

2004-04-15 08:49  diepen

	* src/TPersistentObject.cc: %[ER: 105]% Specialized template code

2004-04-14 13:01  diepen

	* include/PL/DBRep.h, include/PL/PersistentObject.h,
	  include/PL/TPersistentObject.h, include/PL/TPersistentObject.tcc,
	  src/DBRep.h, src/Makefile.am, src/PersistentObject.h,
	  src/TPersistentObject.h, src/TPersistentObject.tcc: %[ER: 105]%
	  Defined template specializations to be able to use
	  TPersistentObject<ObjectID> Added function retrieveInPlace (for
	  libTransport)

2004-04-13 15:35  loose

	* include/PL/Query/Expr.h, src/Query/Expr.h: %[ER: 65]%

	  Added a note in the documentation about the special behaviour of
	  the logical binary operators.

2004-04-13 14:21  loose

	* test/: tA.cc, tC.cc, tCollection.cc, tExpr.cc, tObjectId.cc,
	  tQuery.cc: %[ER: 61]%

	  Added standard comment header to source files.

2004-04-13 14:03  loose

	* test/: tExpr.cc, tExpr.out, tExpr.stdout: %[ER: 65]%

	  Modified test program and output file to match with changed
	  behaviour of isNull() method and the constructors (which now
	  throw).

2004-04-13 13:47  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/SQLExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Query/BinaryExprNode.cc, src/Query/BinaryExprNode.h,
	  src/Query/Expr.cc, src/Query/LogicalBinaryExprNode.cc,
	  src/Query/LogicalBinaryExprNode.h,
	  src/Query/LogicalUnaryExprNode.cc,
	  src/Query/LogicalUnaryExprNode.h, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.cc,
	  src/Query/UnaryExprNode.h: %[ER: 65]%

	  Removed the previously added override for isNull(); hence
	  isNull() will always return false, except for NullExprNode
	  objects. The check for null expressions is now done in the
	  constructor; an exception is thrown if one of the constructor
	  arguments is a null expression.

2004-04-05 17:17  loose

	* test/: tExpr.cc, tExpr.out, tExpr.stdout: %[ER: 65]%

	  Completely rewrote this test program. It is now much more
	  structured, and tests the expression classes quite extensively.

2004-04-05 16:35  loose

	* demo/: PO_Person.h, PO_Person.sql, PO_Person.tcc, Person.plmap:
	  %[ER: 61]%

	  This program shows how you can use the Persistence Layer, using a
	  simple class. A simple class is a class that contains only
	  primitive data members.

2004-04-05 16:32  loose

	* demo/PO_Complex.sql: %[ER: 61]%

	  This demo program shows how you can store complex numbers into
	  the database.

2004-04-02 08:43  diepen

	* test/tAttr1.cc: %[ER: 61]% Made it easier to write the functions
	  setting the result

2004-04-01 11:15  diepen

	* test/: tExpr.out, tExpr.stdout: %[ER: 61]% Changed for new output

2004-03-30 14:51  loose

	* src/Query/SQLExprNode.cc: %[ER: 65]%

	  Removed some spurious parentheses, and added some parentheses
	  where they were missing. In general, an expression that ends with
	  a numeric value needs to be enclosed by a pair of parentheses.

2004-03-29 16:05  diepen

	* test/: tAttr1.cc, tAttr1.out, tAttr1.stdout: %[ER: 64]% Use table
	  A only once in or3 test

2004-03-29 16:04  diepen

	* test/: tExpr.out, tExpr.stdout: %[ER: 64]% Parentheses were
	  needed around subexpressions

2004-03-29 15:31  loose

	* src/Query/Expr.cc: %[ER: 65]%

	  Logical expressions (!, &&, and ||) no longer use logical
	  expression nodes, but their "ordinary" counterparts. It turned
	  out that the join constraints should *always* be ouput last, even
	  for logical expression nodes. If you don't do that, the generated
	  query will be wrong, as the database engine will create
	  "unwanted" cartesian products for the different tables in the
	  query. Hence, the query will take a very long time to run and the
	  result will be incorrect.

2004-03-29 15:00  coolen

	* test/: tA.out, tA.stdout, tAttr1.cc, tAttrib.out, tAttrib.stdout,
	  tC.out, tC.stdout, tExpr.out, tExpr.stdout: %[ER:98 ]% changed
	  outputfiles based on new code from Marcel. New testfile changes
	  for tAttrib1.cc, more comments and output.

2004-03-24 12:42  loose

	* src/Query/BinaryExprNode.cc: %[ER: 65]%

	  Oops! I was too enthusiatic in removing parenthesis. The ones
	  around a binary expression are really necessary!

2004-03-24 12:24  loose

	* src/Query/LogicalBinaryExprNode.cc: %[ER: 65]%

	  Moved printing of the constraints to the end. Hence, the
	  operation is now printed first, and the constraints last.

2004-03-24 09:54  diepen

	* test/: tAttr1.cc, tAttr1.out, tAttr1.stdout: %[ER: 64]% Added Or2
	  test and (still outcommented) Or3 test

2004-03-22 15:20  coolen

	* test/: tAttr1.cc, tAttr1.out, tAttr1.stdout: %[ER: 98]%

	  Added new tests with between, not between, in && not in

2004-03-19 18:04  loose

	* include/PL/Query/BinaryExprNode.h, src/Query/BinaryExprNode.cc,
	  src/Query/BinaryExprNode.h, src/Query/LogicalBinaryExprNode.cc,
	  src/Query/LogicalBinaryExprNode.h,
	  src/Query/LogicalUnaryExprNode.cc,
	  src/Query/LogicalUnaryExprNode.h, include/PL/Query/SQLExprNode.h,
	  include/PL/Query/UnaryExprNode.h, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.cc,
	  src/Query/UnaryExprNode.h: %[ER: 65]%

	  Implemented an override for isNull() in several classes. We need
	  this information in order to properly print an expression when it
	  contains one or more empty expressions itself.

2004-03-19 15:38  loose

	* test/: tA.out, tA.stdout, tC.out, tC.stdout, tAttrib.out,
	  tAttrib.stdout: %[ER: 65]%

	  Output format of query string changed; spurious parentheses were
	  removed.

2004-03-19 15:37  loose

	* test/: tA.cc, tC.cc: %[ER: 61]%

	  Added initialization of debug tracer routine.

2004-03-19 15:08  loose

	* include/PL/Query/SQLExprNode.h, src/Query/BinaryExprNode.cc,
	  src/Query/LogicalBinaryExprNode.cc, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.cc: %[ER: 65]%

	  * Fixed bug in printing of logical binary operators (aka. the OR
	  problem):   the parentheses were wrongly placed.  * Implemented
	  getConstraint() for the SQL-like operators, because they were
	  missing! * Removed printing of spurious parentheses.

2004-03-19 15:02  loose

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 61]%

	  Added tracer output for composed where clause in retrieve<T>()
	  method.

2004-03-18 12:06  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%

	  * Moved declaration of nested class MetaData to the private
	  section of class   PersistentObject.	* Corrected, and updated
	  the code documentation.

2004-03-18 12:02  loose

	* src/PersistentObject.cc: %[ER: 61]%

	  Fixed a potential referential integrity bug in erase(). Aall
	  ownedPOs are now erased in reverse order and the owning object is
	  erased last.

2004-03-18 11:01  loose

	* include/PL/DBRep.h, include/PL/DBRepHolder.h,
	  include/PL/DBRepMeta.h, include/PL/ObjectId.h,
	  include/PL/PersistenceBroker.h, include/PL/TPersistentObject.tcc,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, src/DBRep.h, src/DBRepHolder.h,
	  src/DBRepMeta.h, src/ObjectId.h, src/PersistenceBroker.h,
	  src/Query.h, src/TPersistentObject.tcc,
	  src/Query/ConstExprNode.h, src/Query/Expr.h,
	  src/Query/ExprNode.h, src/Query/LogicalBinaryExprNode.h,
	  src/Query/LogicalUnaryExprNode.h: %[ER: 61]%

	  Corrected, and updated the code documentation.

2004-03-17 13:23  diepen

	* test/PO_tAttr1.sql: %[ER: 64]% SQL file for tAttr1.run

2004-03-17 11:52  coolen

	* test/Makefile.am: %[ER: 98]% removes double tattr1 lines

2004-03-17 11:06  diepen

	* test/: Makefile.am, PO_tAttr1.h, PO_tAttr1.tcc, tAttr1.cc,
	  tAttr1.h, tAttr1.out, tAttr1.run, tAttr1.sh, tAttr1.stdout: %[ER:
	  64]% Test program to test various Query expressions

2004-03-16 16:55  coolen

	* test/: Makefile.am, SQLTimeStampCxxTest.hh, SQLTimeStampTest.cc,
	  SQLTimeStampTest.h, tA.cc, tA.in_sqld, tA.out, tA.run, tA.stdout,
	  tA_test.sh, tC.cc, tC.in_sqld, tC.out, tC.run, tC.stdout,
	  tC_test.sh, tCollection.cc, tCollection.out, tCollection.sh,
	  tCollection.stdout, tFooBar.cc, tObjectId.cc, tObjectId.out,
	  tObjectId.sh, tObjectId.stdout, tSQLTimeStamp.cc,
	  tSQLTimeStamp.out, tSQLTimeStamp.sh, tTPO.cc: %[ER: 98]% expanded
	  test files for PL to be able to run tests automated.	removed
	  obsolete tests after consulting Marcel Loose

2004-03-16 10:48  loose

	* demo/: PO_Transport.h, PO_Transport.sql, PO_Transport.tcc,
	  Transport.plmap: %[ER: 61]%

	  Added three versions of the demo program dTransport and the
	  associated PLGENerated files. They were merely added to simplify
	  the regeneration of the examples in the PL User Manual.

2004-03-16 10:05  loose

	* demo/: PO_Transport.sql.1, PO_Transport.sql.2,
	  PO_Transport.sql.3: %[ER: 61]%

	  Added three versions of the demo program dTransport and the
	  associated PLGENerated files. They were merely added to simplify
	  the regeneration of the examples in the PL User Manual.

2004-03-16 09:58  loose

	* demo/: PO_Transport.h.1, PO_Transport.h.2, PO_Transport.h.3,
	  PO_Transport.tcc.1, PO_Transport.tcc.2, PO_Transport.tcc.3,
	  Transport.h.1, Transport.h.2, Transport.h.3, Transport.plmap.1,
	  Transport.plmap.2, Transport.plmap.3, dTransport.cc.1,
	  dTransport.cc.2, dTransport.cc.3: %[ER: 61]%

	  Added three versions of the demo program dTransport and the
	  associated PLGENerated files. They were merely added to simplify
	  the regeneration of the examples in the PL User Manual.

2004-03-15 16:02  loose

	* test/: ABC.sql, PO_A.h, PO_A.tcc: %[ER: 61]%

	  Added support for storage/retrieval of complex numbers in class
	  A.

2004-03-15 15:36  loose

	* test/tAttrib.cc: %[ER: 65]%

	  Added return 1 to catch clause; very handy for automated testing
	  ;-)

2004-03-15 11:56  loose

	* test/: PO_tAttrib.h, PO_tAttrib.tcc, tAttrib.cc, tAttrib.h,
	  tAttrib.out, tAttrib.stdout: %[ER: 65]%

	  Completely rewrote tAttrib test program. The idea behind the test
	  program was not changed.

2004-03-15 11:34  loose

	* Makefile.am: %[ER: 61]%

	  Removed demo directory from SUBDIRS. The demo programs cannot be
	  built automatically, because they require the use of the PLGEN
	  tools. There are no dependency rules (yet) to generate .h and
	  .tcc files from the .plmap file.

2004-03-10 11:32  loose

	* demo/dTransport.cc: %[ER: 61]%

	  Ran auto-indent to fix some code layout errors.

2004-03-10 11:31  loose

	* demo/PO_Complex.tcc: %[ER: 61]%

	  Made the necessary changes to the PLGENerated sources in order to
	  get the code to compile.

2004-03-10 11:28  loose

	* demo/dComplex.cc: %[ER: 61]%

	  Typographic corrections.

2004-03-10 11:09  loose

	* demo/: Complex.h, Complex.plmap, PO_Complex.h, PO_Complex.tcc,
	  dComplex.cc: This demo program shows how you can store complex
	  numbers into the database

2004-03-10 11:02  loose

	* test/: Makefile.am, tQuery.sh: %[ER: 65]%

	  Added script to run tQuery program.

2004-03-10 10:49  loose

	* test/Makefile.am: %[ER: 65]%

	  Added test program tQuery, which tests the getSql() method of the
	  QueryObject class.

2004-03-10 10:48  loose

	* test/: tQuery.cc, tQuery.out, tQuery.stdout: %[ER: 65]%

	  Tiny test program to test the proper functioning of the getSql()
	  method of the QueryObject class.

2004-03-10 10:47  loose

	* test/: PO_tAttrib.h, PO_tAttrib.tcc: %[ER: 65]%

	  Added PLGENerated source files to the repository, because the
	  LOFAR build environemnt does not (yet) have a rule to generate
	  them from a plmap-file.

2004-03-09 15:57  loose

	* Makefile.am: %[ER: 61]%

	  Added an entry for the demo subdirectory.

2004-03-09 15:56  loose

	* configure.in: %[ER: 61]%

	  Added Makefile entry for demo directory.

2004-03-09 15:49  loose

	* demo/Makefile.am: %[ER: 61]%

	  Removed a spurious backslash. Ouch! That one caused a link error
	  in dComplex.

2004-03-05 18:06  loose

	* demo/Makefile.am: %[ER: 61]%

	  These are the demo programs that should be built.

2004-03-04 11:08  loose

	* include/PL/PersistenceBroker.tcc, src/PersistenceBroker.tcc:
	  %[ER: 61]%

	  Added implementation of save() method for a Collection of
	  TPersistentObjects.

2004-03-04 11:05  loose

	* src/PersistenceBroker.cc: %[ER: 61]%

	  Removed commented out code.

2004-03-04 11:04  loose

	* include/PL/PersistenceBroker.h, src/PersistenceBroker.h: %[ER:
	  61]%

	  Added "todo" items for a couple of methods that need to be
	  (re)implemented.

2004-03-04 11:03  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%

	  Reformatted output for printing the MetaData.

2004-03-04 11:01  loose

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 61]%

	  Moved the construction of the dtl::DBView objects within a
	  try-catch block, because the constructor may throw an exception.
	  We do not want any DTL-specific exceptions to leak through, hence
	  we should catch them and throw a PL-specific exception instead.

2004-03-04 10:58  loose

	* include/PL/Exception.h, src/Exception.h: %[ER: 61]%

	  Removed exception class NotImplemented. Methods that are not
	  (yet) implemented are now simply removed from the implementation
	  file. The advantage is that the user is informed at link-time,
	  instead of at run-time, when he/she uses a feature that is not
	  (yet) implemented. The header file should contain a "todo" remark
	  in the Doxygen documentation.

2004-03-01 16:02  loose

	* test/tAttrib.cc: %[ER: 65]%

	  Removed already commented-out code which is now in tAttrib.h and
	  PO_tAttrib.h respectively.

2004-02-26 13:36  loose

	* demo/: Person.cc, Person.h, Transport.cc, Transport.h,
	  dPerson.cc, dTransport.cc: %[ER: 61]%

	  Created two demo programs that demonstrate how the PL package
	  could be used.

2004-02-26 11:50  loose

	* test/tAttrib.cc: %[ER: 65]%

	  Added standard comment header.

2004-02-26 11:45  loose

	* test/: tA.cc, tC.cc: %[ER: 61]%

	  Updated the tests: - corrected several ambiguities and errors in
	  the diagnostic output.  - added test for erasing objects.

2004-02-26 11:38  loose

	* test/: tAttrib.cc, tAttrib.h, tAttrib.out, tAttrib.stdout: %[ER:
	  65]%

	  * Moved class definitions for tAttrib into separate header file.
	  * The PO-header file should now be generated using the PLGEN
	  tools.  * Updated the output file for the regression test.

2004-02-23 16:37  loose

	* src/: Query.cc, Query.h: %[ER: 65]%

	  Fixed a bug where the call to getSql() on an empty QueryObject
	  resulted in only the string "WHERE" being output; it now outputs
	  an empty string.

2004-02-13 17:29  loose

	* test/: tFooBar.cc, tTPO.cc: %[ER: 61]%

	  * Banned use of private member itsObjectPtr in favor of data()
	  accessor method.  * Changed some catch clauses.

2004-02-13 17:26  loose

	* test/: tA.cc, tC.cc: %[ER: 61]%

	  * Removed the DTL dependent setAutoCommit() method.  * Changed
	  some catch clauses.  * Added erase test in tA (should be added in
	  tC as well)

2004-02-13 17:24  loose

	* test/: PO_A.tcc, PO_B.tcc, PO_C.tcc: %[ER: 61]%

	  * Removed "using namespace dtl" as these .tcc files are included
	  by their .h	cousins; using directives should not be used within
	  header files.  * Banned use of private member itsObjectPtr in
	  favor of data() accessor method.

2004-02-13 17:21  loose

	* test/: A.h, B.h, C.h: %[ER: 61]%

	  Need to use full class specification now for TPersistentObject,
	  due to changes in PLfwd.h.

2004-02-13 17:20  loose

	* include/PL/Exception.h, src/Exception.h: %[ER: 61]%

	  Renamed root class for PL exceptions from PLException to
	  Exception. Hopefully, this doesn't break any code.

2004-02-13 17:18  loose

	* src/Makefile.am: %[ER: 61]%

	  Moved unused header files "ObjectCache.h" and "SQLTimeStamp.h" to
	  NOINSTHDRS; should be done for the source file "ObjectCache.cc"
	  as well, but there no variable like e.g. NOCOMPILESRC.

2004-02-13 17:16  loose

	* src/ConnectionHandler.cc: %[ER: 61]%

	  * ConnectionHandler now throws a BrokerException when connecting
	  fails.  * Added comment about enabling auto-commit.

2004-02-13 17:14  loose

	* src/: Query.cc, Query.h: %[ER: 65]%

	  * Minor fix in the getSql() method. The output string now always
	  starts with	"WHERE".  * Slightly rephrased documentation.

2004-02-13 12:53  loose

	* include/PL/TPersistentObject.h, src/TPersistentObject.h: %[ER:
	  61]%

	  * Removed the template specializations of toDBRep() and fromDBRep
	  for	ObjectId, because they were never used.  * Renamed private
	  members:     itsObjectPtr --> itsObjPtr  and	itsObjectSharedPtr
	  --> itsObjShrPtr.

2004-02-13 12:51  loose

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 61]%

	  * Exceptions thrown by DTL are now caught and rethrown using a
	  proper   PLException object.	* Removed the template
	  specializations of toDBRep() and fromDBRep for   ObjectId,
	  because they were never used.

2004-02-13 12:45  loose

	* src/: Query.cc, Query.h: %[ER: 65]%

	  QueryObject class now properly supports both the construction
	  from a raw SQL string, and construction from a Query::Expr
	  object. In the previous version the getSqlString() method was
	  broken, because it always returned a stringified Query::Expr even
	  if the QueryObject was constructed using a raw SQL string.

2004-02-13 12:42  loose

	* include/PL/PLfwd.h, src/PLfwd.h: %[ER: 61]%

	  Removed the two using statements at the end of this file. Header
	  files should not contain using directives or declarations.

2004-02-13 12:38  loose

	* include/PL/Exception.h, src/Exception.h: %[ER: 61]%

	  Renamed to Exception classes:   DeleteError --> EraseError  and
	  SelectError --> RetrieveError

2004-02-13 11:51  loose

	* test/ABC.sql: %[ER: 61]%

	  Now uses new trigger method UpdateVersionNr() in the PostgreSQL
	  database instead of the older update_versionnr().

2004-02-03 18:01  loose

	* test/: tA.cc, tC.cc, tTPO.cc: %[ER: 61]% Should connect to the
	  "test" database, instead of the "<username>" database.

2004-02-03 17:59  loose

	* test/: tAttrib.cc, tAttrib.out, tAttrib.sh, tAttrib.stdout,
	  Makefile.am: %[ER: 65]%

	  The "final" test program for the attrib<T>() methods. It has been
	  added to list of tests in the build environment.

2004-02-03 15:02  loose

	* include/PL/Attrib.h, src/Attrib.cc, src/Attrib.h: %[ER: 65]%
	  Added support for specifying base class attributes using the
	  double colon notation: e.g. attrib<X>("Y::s"); here Y is the base
	  class of X, and Y has an attribute s.

2004-02-03 14:58  loose

	* include/PL/PersistenceBroker.tcc, src/PersistenceBroker.tcc:
	  %[ER: 65]% Added implementation of erase() method for a
	  Collection of TPersistentObject.

2004-02-03 14:58  loose

	* include/PL/TPersistentObject.h, src/TPersistentObject.h: %[ER:
	  65]% Removed unused commented method declarations.

2004-02-03 10:18  loose

	* include/PL/PLfwd.h, src/PLfwd.h, test/A.h, test/B.h, test/C.h,
	  test/tFooBar.cc: %[ER: 65]%

	  Moved forward declarations file from <Common/fwd/PL.h> to
	  <PL/PLfwd.h>.

2004-01-30 17:56  loose

	* test/tAttrib.cc: %[ER: 65]%

	  Completely new test program to test the attrib() methods.

2004-01-30 17:29  loose

	* test/: Makefile.am, tExpr.cc, tExpr.out, tExpr.sh, tExpr.stdout,
	  tFooBar.cc: %[ER: 65]%

	  * Added some tests in tExpr and added output file for comparison.
	   * tFooBar can now be run using tracing.

2004-01-30 16:38  loose

	* include/PL/Query/Expr.h, src/Query/BinaryExprNode.cc,
	  src/Query/Expr.cc, src/Query/Expr.h,
	  src/Query/LogicalBinaryExprNode.cc,
	  src/Query/LogicalUnaryExprNode.cc, src/Query/SQLExprNode.cc,
	  src/Query/UnaryExprNode.cc: %[ER: 65]%

	  Interchanged the meaning of Expr::print() and operator<<() for
	  Expr.  operator<<() now prints both the expression and the
	  associated constraints, whereas Expr::print() now only prints the
	  expression.

	  As a result it is now much easier to print a complete expression
	  (including constraint) onto the output stream.

2004-01-28 11:26  diepen

	* src/Attrib.cc, src/Query.cc, test/tTPO.cc: %[ER: 61]% Use TRACER
	  instead of cout to avoid output in normal programs

2004-01-27 18:07  loose

	* include/PL/DBRep.h, include/PL/DBRepHolder.h,
	  include/PL/DBRepMeta.h, include/PL/DTLBase.h,
	  include/PL/PersistentObject.h, include/PL/TPersistentObject.h,
	  include/PL/TPersistentObject.tcc, src/DBRep.h, src/DBRepHolder.h,
	  src/DBRepMeta.cc, src/DBRepMeta.h, src/DTLBase.h,
	  src/PersistentObject.cc, src/PersistentObject.h,
	  src/TPersistentObject.h, src/TPersistentObject.tcc, test/A.h,
	  test/B.h, test/C.h, test/PO_A.h, test/PO_A.tcc, test/PO_B.h,
	  test/PO_B.tcc, test/PO_C.h, test/PO_C.tcc, test/tAttrib.cc,
	  test/tCollection.cc, test/tFooBar.cc, test/tTPO.cc: %[ER: 65]%

	  Changed the implementation of the DBRep* classes in such a way
	  that the user does not have add `friend class DBRep<T>' to his
	  own class anymore; `friend class TPersistentObject<T>' now
	  suffices.

	  Might still need some polishing as DBRep<T> is now a struct, but
	  is has one method: bindCols(). The user must remember to
	  redeclare this method in the specialized DBRep<T> structs. May
	  this method can be moved to DBRepHolder<T> or to
	  TPersistentObject<T>; don't know yet what is best.

2004-01-26 09:35  diepen

	* include/PL/TPersistentObject.tcc, src/Makefile.am,
	  src/TPersistentObject.tcc: %[ER: 64]% Include Collection.h and
	  Query.h

2004-01-23 14:11  loose

	* configure.in: %[ER: 65]% Removed Loki library; it was only used
	  for compile time checking (a bit meager).

2004-01-23 14:09  loose

	* test/: A.h, B.h, C.h, Makefile.am, PO_A.h, PO_A.tcc, PO_B.h,
	  PO_B.tcc, PO_C.h, PO_C.tcc, tA.cc, tAttrib.cc, tC.cc,
	  tCollection.cc, tFooBar.cc, tObjectId.cc, tTPO.cc: %[ER: 65]%
	  Handling of the meta data of a persistent object is now
	  completely hidden from the user. The user now only needs to
	  specialize the DBRep<T> class. There's one gotcha, though: the
	  user-defined class must now declare both DBRep<T> and
	  TPersistentObject<T> friend.

2004-01-23 13:58  loose

	* include/PL/DBRep.h, include/PL/DBRepHolder.h,
	  include/PL/DBRepMeta.h, include/PL/DTLBase.h,
	  include/PL/PersistentObject.h, include/PL/TPersistentObject.h,
	  include/PL/TPersistentObject.tcc, src/DBRep.h, src/DBRepHolder.h,
	  src/DBRepMeta.cc, src/DBRepMeta.h, src/DTLBase.h,
	  src/Makefile.am, src/PersistentObject.cc, src/PersistentObject.h,
	  src/Query.h, src/TPersistentObject.h, src/TPersistentObject.tcc:
	  %[ER: 65]% Handling of the meta data of a persistent object is
	  now completely hidden from the user. The user now only needs to
	  specialize the DBRep<T> class. There's one gotcha, though: the
	  user-defined class must now declare both DBRep<T> and
	  TPersistentObject<T> friend.

2004-01-22 15:48  loose

	* include/PL/DTLBase.h, include/PL/TPersistentObject.tcc,
	  src/DTLBase.h, src/TPersistentObject.tcc: %[ER: 65]% Removed all
	  occurences of BPA. We don't really need this helper class
	  anymore, because we will build our queries using the Query
	  classes.

2004-01-22 15:46  loose

	* test/LCS_base.h: %[ER: 61]% The new file DTLBase.h is a merge of
	  the file LCS_base.h which used to be generated by the genPL
	  tools, and DTLHelperClasses.h

2004-01-22 13:22  loose

	* test/: tAttrib.cc, tExpr.cc, tFooBar.cc: %[ER: 65]% Some test
	  programs to exercise the query capabilities of the PL layer.

2004-01-20 18:04  loose

	* test/: Makefile.am, PO_A.h, PO_A.tcc, PO_B.h, PO_B.tcc, PO_C.h,
	  PO_C.tcc, tA.cc, tC.cc, tTPO.cc: %[ER: 65]% Added support for
	  attribute maps. Also added the first move towards complete hiding
	  of the meta data from the user-defined classes. It's not complete
	  yet, but usuable for an alpha release.

2004-01-20 18:02  loose

	* include/PL/DTLBase.h, include/PL/PersistentObject.h,
	  src/DTLBase.h, src/PersistentObject.cc, src/PersistentObject.h,
	  src/Query.cc, src/Query.h, include/PL/TPersistentObject.h,
	  include/PL/TPersistentObject.tcc, src/TPersistentObject.h,
	  src/TPersistentObject.tcc: %[ER: 65]% First move towards hiding
	  the meta data completely from the user. The current solution is
	  not exactly what we want, be it is usuable as an alpha release.

2004-01-20 10:54  loose

	* include/PL/DBRep.h, src/DBRep.h: %[ER: 65]% The DBRep classes are
	  used to map the attributes of the user-defined classes into
	  contiguous storage classes, which is required for DTL and ODBC.

2004-01-19 14:51  diepen

	* src/Query.h: %[ER: 72]% Made constructor implicit

2004-01-19 14:51  diepen

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 72]% Use getOid again

2004-01-19 13:49  loose

	* include/PL/DTLBase.h, src/DTLBase.h: %[ER: 61]% Changed includes.
	  Now only the DTL header that we really need are included.

2004-01-19 13:47  loose

	* include/PL/TPersistentObject.h, src/TPersistentObject.h,
	  include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 65]% Renamed (temporarily?) Query to QueryObject in order
	  to resolve a name clash with namespace Query.  Added support for
	  attribute maps.

2004-01-19 13:46  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 65]%
	  Added support for attribute maps. Moved some typedefs and methods
	  from the protected to the public section, because we need access
	  to them outside of the inheritance hierarchy.

2004-01-19 13:43  loose

	* include/PL/PersistenceBroker.h, src/PersistenceBroker.h,
	  src/Query.cc, src/Query.h, include/PL/PersistenceBroker.tcc,
	  src/PersistenceBroker.tcc: %[ER: 65]% Renamed (temporarily?)
	  Query to QueryObject, due to a name clash with namespace Query.

2004-01-19 13:41  loose

	* src/ConnectionHandler.cc: %[ER: 61]% Enabled auto-commit for DTL
	  layer. (This should probably be done in a more sophisticated way
	  once we have transaction handling for objects in place).

2004-01-19 13:39  loose

	* include/PL/Attrib.h, src/Attrib.cc, src/Attrib.h: %[ER: 65]%
	  These files contain some global methods that translate class
	  attributes into database table/column name pairs.

2004-01-19 09:57  loose

	* src/Makefile.am: %[ER: 65]% Added some files for query support.

2004-01-19 09:56  loose

	* include/PL/Query/Expr.h, src/Query/Expr.h: %[ER: 65]% Added some
	  code documentation.

2004-01-14 12:44  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Query/BinaryExprNode.cc, src/Query/BinaryExprNode.h,
	  src/Query/ColumnExprNode.cc, src/Query/ColumnExprNode.h,
	  src/Query/ConstExprNode.cc, src/Query/ConstExprNode.h,
	  src/Query/Expr.cc, src/Query/Expr.h, src/Query/ExprNode.cc,
	  src/Query/ExprNode.h, src/Query/LogicalBinaryExprNode.cc,
	  src/Query/LogicalBinaryExprNode.h,
	  src/Query/LogicalUnaryExprNode.cc,
	  src/Query/LogicalUnaryExprNode.h, src/Query/UnaryExprNode.cc,
	  src/Query/UnaryExprNode.h: %[ER: 65]% First working and near
	  complete implementation of the Query Expression classes. Needs
	  some more testing and polishing.

2004-01-13 14:06  tanaka

	* configure.in: %[ER: 61]% Boost and Loki are now properly
	  installed on the system. No need for local versions anymore.

2004-01-13 10:08  diepen

	* configure.in: %[ER: 70]% Added compiler flag for gnu3

2004-01-12 10:11  diepen

	* test/: PO_A.h, PO_B.h, PO_C.h, tTPO.cc: %[ER: 61]% Added getOid
	  function

2004-01-12 10:11  diepen

	* include/PL/PersistenceBroker.tcc, src/PersistenceBroker.tcc:
	  %[ER: 61]% retrieve need to create a tpo first

2004-01-12 10:02  diepen

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 61]% retrieve has to set tableName in retrieved objects
	  (otherwise erase and update do not use correct table name)

2004-01-12 10:01  diepen

	* include/PL/TPersistentObject.h, src/TPersistentObject.h: %[ER:
	  61]% retrieve function need to be non-static (otherwise table
	  name is not used)

2004-01-12 10:01  diepen

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%
	  tableName functions need to be public

2004-01-06 15:35  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/ExprNode.h,
	  include/PL/Query/SQLExprNode.h, src/Query/BinaryExprNode.cc,
	  src/Query/BinaryExprNode.h, src/Query/ColumnExprNode.cc,
	  src/Query/ColumnExprNode.h, src/Query/ConstExprNode.cc,
	  src/Query/ConstExprNode.h, src/Query/Expr.cc,
	  src/Query/ExprNode.h, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.cc,
	  include/PL/Query/UnaryExprNode.h, src/Query/UnaryExprNode.h:
	  %[ER: 65]% Made print() method const as is ought to be.

2003-12-23 14:06  loose

	* include/PL/DTLBase.h, src/DTLBase.h: %[ER: 65]% Interchanged
	  include of lofar_config.h and check for HAVE_DTL. The check
	  should be made AFTER lofar_config.h is included, not before!

2003-12-22 12:27  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/FunctionExprNode.h,
	  include/PL/Query/SQLExprNode.h, include/PL/Query/UnaryExprNode.h,
	  src/Query/BinaryExprNode.h, src/Query/ColumnExprNode.h,
	  src/Query/ConstExprNode.h, src/Query/Expr.h,
	  src/Query/ExprNode.h, src/Query/FunctionExprNode.h,
	  src/Query/SQLExprNode.h, src/Query/UnaryExprNode.h,
	  include/PL/DTLBase.h, src/DTLBase.h, src/SQLTimeStamp.h,
	  test/SQLTimeStampTest.h: %[ER: 65]% Changed include of config.h
	  into include of lofar_config.h.

2003-12-22 12:19  loose

	* include/PL/Collection.h, src/Collection.h: %[ER: 61]% Added
	  method empty(), made method size() const as it ought to be.

2003-12-22 12:03  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/SQLExprNode.h,
	  include/PL/Query/UnaryExprNode.h, src/Query/BinaryExprNode.cc,
	  src/Query/BinaryExprNode.h, src/Query/ConstExprNode.h,
	  src/Query/Expr.cc, src/Query/Expr.h, src/Query/ExprNode.h,
	  src/Query/SQLExprNode.cc, src/Query/SQLExprNode.h,
	  src/Query/UnaryExprNode.cc, src/Query/UnaryExprNode.h: %[ER: 65]%
	  Added SQL-like operator like BETWEEN, IN, and LIKE. Fixed couple
	  of bugs.

2003-12-19 11:39  diepen

	* include/PL/DTLBase.h, src/DTLBase.h, src/SQLTimeStamp.h: %[ER:
	  70]% Include config.h again instead of lofar_config.h

2003-12-17 16:19  diepen

	* include/PL/DTLBase.h, src/DTLBase.h, src/SQLTimeStamp.h: %[ER:
	  70]% Include lofar_config.h instead of config.h

2003-12-17 16:19  diepen

	* configure.in: %[ER: 70]% No need anymore to check for LONG_LONG
	  and PRETTY_FUNCTION

2003-12-16 16:53  loose

	* test/: A.h, B.h, C.h, Makefile.am, PO_A.h, PO_A.tcc, PO_B.h,
	  PO_B.tcc, PO_C.h, PO_C.tcc, tA.cc, tC.cc, tTPO.cc: %[ER: 61]%
	  Updated test programs and related files to match with the fact
	  that the methods doErase(), doInsert(), doRetrieve(), and
	  doUpdate() don't need to be specialized anymore. They're now part
	  of the inline implementation of TPersistentObject in the file
	  TPersistentObject.tcc.

2003-12-16 16:25  loose

	* include/PL/TPersistentObject.tcc, src/TPersistentObject.tcc:
	  %[ER: 61]% Added conditional test in retrieve() method, so that
	  the recursive retrieve() method is only called when the current
	  PO owns other POs. This is an improvement for objects that are
	  stored in a single table, but it doesn't solve the inefficencies
	  for objects that are stored in multiple tables.

2003-12-16 15:04  loose

	* include/PL/DTLBase.h, include/PL/TPersistentObject.h,
	  include/PL/TPersistentObject.tcc, src/DTLBase.h,
	  src/DTLHelperClasses.h, src/Makefile.am, src/TPersistentObject.h,
	  src/TPersistentObject.tcc: %[ER: 61]%

	  * Moved the implementation of the methods doErase(), doInsert(),
	  doRetrieve(),   and doUpdate() into a new file
	  TPersistentObject.tcc which is included by   TPersistentObject.h.
	  We did not need to specialize these methods anymore,	 because
	  the only varying part---the name of the database table---was
	  replaced by an accessor method tableName(). Now the only method
	  that still   needs to be specialized is init().

	  * The new file DTLBase.h is a merge of the file LCS_base.h which
	  used to be   generated by the genPL tools, and DTLHelperClasses.h

2003-12-16 14:55  loose

	* include/PL/Query/SQLExprNode.h, src/Query/SQLExprNode.cc,
	  src/Query/SQLExprNode.h: %[ER: 65]% Added expression node classes
	  for SQL-like operators, like BETWEEN, IN, and LIKE.

2003-12-15 17:50  loose

	* include/PL/PersistenceBroker.tcc, src/PersistenceBroker.tcc:
	  %[ER: 61]% Added include guards as the coding standards suggest.

2003-12-15 17:49  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%
	  Moved attribute itsTableName into the nested class MetaData and
	  changed it into a shared pointer to the string.

2003-12-11 14:02  loose

	* include/PL/PersistentObject.h, src/PersistentObject.h: %[ER: 61]%
	  Added tableName() methods. Now the user can define his own
	  tablename.

2003-12-11 13:26  loose

	* include/PL/ObjectId.h, src/ObjectId.h: %[ER: 19]% oid_t is now a
	  real 64-bit integer; DTL and ODBC now properly support 64-bit
	  `long long' integers.

2003-12-10 09:03  diepen

	* configure.in: %[ER: 64]% Use standard path for DTL, boost and
	  loki

2003-12-09 17:25  loose

	* include/PL/Query/BinaryExprNode.h,
	  include/PL/Query/ColumnExprNode.h,
	  include/PL/Query/ConstExprNode.h, include/PL/Query/Expr.h,
	  include/PL/Query/ExprNode.h, include/PL/Query/FunctionExprNode.h,
	  include/PL/Query/UnaryExprNode.h, src/Query/BinaryExprNode.cc,
	  src/Query/BinaryExprNode.h, src/Query/ColumnExprNode.cc,
	  src/Query/ColumnExprNode.h, src/Query/ConstExprNode.cc,
	  src/Query/ConstExprNode.h, src/Query/Expr.cc, src/Query/Expr.h,
	  src/Query/ExprNode.h, src/Query/FunctionExprNode.h,
	  src/Query/UnaryExprNode.cc, src/Query/UnaryExprNode.h: %[ER: 65]%
	  First rudimentary implementation of the Query classes. These
	  classes support the building of a tree of expression nodes which
	  together form the WHERE clause of a query.

2003-12-09 17:22  loose

	* src/Makefile.am: %[ER: 65]% Added a couple of Query classes.

2003-12-09 17:22  loose

	* src/PersistentObject.cc: %[ER: 61]% Slight modification. Method
	  retrieve() now calls retrieve(ObjectId&) in order to avoid code
	  duplication.

2003-12-09 10:12  loose

	* TODO: %[ER: 61]% Update of TODO items.

2003-12-08 18:01  loose

	* test/: PO_A.tcc, PO_B.tcc, PO_C.tcc, tA.cc, tC.cc: %[ER: 61]%
	  Updated test program files. It now also includes a retrieve using
	  a Query, which returns a Collection.

2003-12-08 17:56  loose

	* include/PL/TPersistentObject.h, src/TPersistentObject.h: %[ER:
	  61]% Added data() method that returns a const reference.

2003-12-08 17:55  loose

	* include/PL/Collection.h, src/Collection.h: %[ER: 61]% Added
	  size() method.

2003-12-08 16:53  loose

	* include/PL/PersistentObject.h, src/PersistentObject.cc,
	  src/PersistentObject.h: %[ER: 61]% Implemented retrieve() method
	  that can be used to "refresh" an object.

2003-12-08 14:48  loose

	* test/: PO_A.tcc, PO_B.tcc, PO_C.tcc: %[ER: 61]% Fixed compilation
	  problem with retrieving a collection of objects. However, it
	  still doesn't run properly, but that has to do with DTL. I'll fix
	  that soon.

2003-12-08 14:45  loose

	* include/PL/TPersistentObject.h, src/TPersistentObject.h: %[ER:
	  61]% Oops! The retrieve method for collections did not work
	  (anymore). Fixed it.

2003-12-08 14:44  loose

	* src/SQLTimeStamp.h: %[ER: 61]% Moved SQLTimeStamp into namespace
	  LOFAR::PL.

2003-12-02 14:18  loose

	* test/: A.h, ABC.sql, B.h, C.h, LCS_base.h, PO_A.h, PO_A.tcc,
	  PO_B.h, PO_B.tcc, PO_C.h, PO_C.tcc, VersionNrTrigger.plpgsql,
	  tA.cc, tC.cc: %[ER: 61]% Simple test programs for the PL package.
	  Usually the files PO_?.{h,tcc}, LCS_base.h *.sql and *.plpgsql
	  will generated automatically using the PLGen tools. They can,
	  however, be written by hand, as was done in this case.  In
	  general, the only user-supplied files would be ?.h, which contain
	  the declaration of the user-defined classes, and of course the
	  t?.cc files that contain the test program.

2003-12-02 11:56  loose

	* src/: DTLHelperClasses.h, DTLTypes.h: %[ER: 61]% Changed name of
	  file DTLTypes.h into DTLHelperClasses.h

2003-12-02 11:20  loose

	* Makefile.am, TODO, bootstrap, configure.in,
	  include/PL/Collection.h, include/PL/ConnectionHandler.h,
	  include/PL/Exception.h, include/PL/ObjectId.h,
	  include/PL/PersistenceBroker.h, include/PL/PersistenceBroker.tcc,
	  include/PL/PersistentObject.h, include/PL/TPersistentObject.h,
	  src/Collection.h, src/ConnectionHandler.cc,
	  src/ConnectionHandler.h, src/DTLTypes.h, src/Exception.h,
	  src/Makefile.am, src/ObjectCache.cc, src/ObjectCache.h,
	  src/ObjectId.cc, src/ObjectId.h, src/PersistenceBroker.cc,
	  src/PersistenceBroker.h, src/PersistenceBroker.tcc,
	  src/PersistentObject.cc, src/PersistentObject.h, src/Query.h,
	  src/SQLTimeStamp.h, src/TPersistentObject.h, test/Makefile.am,
	  test/SQLTimeStampCxxTest.hh, test/SQLTimeStampTest.cc,
	  test/SQLTimeStampTest.h, test/tCollection.cc, test/tObjectId.cc,
	  test/tSQLTimeStamp.cc, test/tSQLTimeStamp.out,
	  test/tSQLTimeStamp.sh, test/tTPO.cc: %[ER: 61]% Moved package PL
	  to directory LCS/databases/PL.  Changed namespace LCS into
	  namespace LOFAR.

