CEP/tinyCEP: Version 2.0, date: 2005/06/17
============================================

This is the second major release of the CEP/tinyCEP library. It deals with the
interface changes of the Transport library version 2.0. 
Because of these changes, it is now neccessary to administrate and manage your 
Connections and TransportHolder objects in your ApplicationHolder class. 

Furthermore, your DataHolder::preprocess() method must be renamed to init().
And the DataHolder::postprocess() method is no longer called by the framework. 

The build process has changed as well. The tinyCEP library should now be
built against an installed version of the Transport library. (Ref. ER-270 and
ER-273).


The following Enhancement Requests have been implemented
--------------------------------------------------------

ER 231 : Transport             : Change DH/Transport/TH relationship 

         Change the transport library in such a way DataHolders and
         TransportHolders can be used independently. Plus remove all unused
         functionality from the interfaces of all classes.

ER 270 : Build environment     : Modify build process to use installed
                                 packages

         The current build process uses (locally) built packages and does some
         trickery to derive package dependencies. Although this approach works
         in practice, it causes unwanted build dependencies between
         packages. Furthermore, the current design does not allow running a
         'make distcheck', which is a prerequisite for building a package
         distribution (e.g. tarball or rpm).

ER 273 : Build environment     : Change from lofar_PACKAGE to lofar_INTERNAL

         Instead of lofar_PACKAGE, lofar_INTERNAL should be used in the
         configure.in files. This is in preparation of making distributable
         packages.


The following Problem Reports have been fixed
---------------------------------------------

PR 100 : LOFAR SW development  : Neither config.h nor lofar_config.h should
                                 be included in header files

         Inclusion of either config.h or lofar_config.h in a distributed
         header file is problematic, because the config files themselves
         cannot be distributed; they contain system specific definitions. It
         is therefore unwise to include either of these files in a header
:
