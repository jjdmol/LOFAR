V 11
1
LANG:1 10 CEP_IONode
PANEL,-1 -1 1033 754 N "_3DFace" 0
"main()
{
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");
  /* 

  dyn_string dpAr= strsplit(dpSubStr(g_currentDatapoint,DPSUB_DP),\"_\");
  if (strpos(dpAr[dynlen(dpAr)],\"IONode\") > -1) {
    ioNr = substr(dpAr[dynlen(dpAr)],6,strlen(dpAr[dynlen(dpAr)]));
  } else {
    LOG_ERROR(\"CEP_IONode.pnl:Initialize|No IONode found in currentDatapoint.\");
  }
  
  string nodeName  = navFunct_DPName2CEPName(baseDP);
  setValue(\"nodeName\",\"text\",\"Node: \"+nodeName);
 
  if(dpExists(baseDP + \".usedStation\")) {
    dpConnect(\"controlIOnode\", baseDP + \".station0:_online.._value\",
                               baseDP + \".IP0:_online.._value\",
                               baseDP + \".MAC0:_online.._value\",
                               baseDP + \".station1:_online.._value\",
                               baseDP + \".IP1:_online.._value\",
                               baseDP + \".MAC1:_online.._value\",
                               baseDP + \".usedStation:_online.._value\",
                               baseDP + \".usedIP:_online.._value\",
                               baseDP + \".usedMAC:_online.._value\",
                               CEPDBName + \"LOFAR_PIC_BGP.BGPSwitch:_online.._value\",
                               baseDP + \".usedStation:_online.._invalid\");
    if (!navFunct_dpReachable(baseDP)) {
      controlIOnode(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",true);
    }
  }
  
  // pass baseDP to selfstate Object to work with
  setValue(\"selfState.light\",\"toolTipText\",baseDP); 
   
  // connect for selfUpdates
  showSelfState(baseDP);
 
  reload();
  */
}

void controlIOnode(string dp1, string  station0,
                   string dp2, string  ipAddress0,
                   string dp3, string  macAddress0,
                   string dp4, string  station1,
                   string dp5, string  ipAddress1,
                   string dp6, string  macAddress1,
                   string dp7, string  station,
                   string dp8, string  ipAddress,
                   string dp9, string  macAddress,
                   string dp10, string  bgpSwitch,
                   string dp11, bool invalid) {

  if (!invalid) {  
    setValue(\"ip0_text\",\"text\",ipAddress0);
    setValue(\"mac0_text\",\"text\",macAddress0);
    setValue(\"station0_text\",\"text\",station0);
    setValue(\"ip1_text\",\"text\",ipAddress1);
    setValue(\"mac1_text\",\"text\",macAddress1);
    setValue(\"station1_text\",\"text\",station1);
    setValue(\"ip_text\",\"text\",ipAddress);
    setValue(\"mac_text\",\"text\",macAddress);
    setValue(\"station_text\",\"text\",station);
    if (bgpSwitch) {
      line0.visible(false);
      line1.visible(true);
    } else {
      line0.visible(true);
      line1.visible(false);
    }
  } else {
    setValue(\"ip0_text\",\"text\",\"???????\");
    setValue(\"mac0_text\",\"text\",\"???????\");
    setValue(\"station0_text\",\"text\",\"?????\");    
    setValue(\"ip1_text\",\"text\",\"???????\");
    setValue(\"mac1_text\",\"text\",\"???????\");
    setValue(\"station1_text\",\"text\",\"?????\");    
    setValue(\"ip_text\",\"text\",\"???????\");
    setValue(\"mac_text\",\"text\",\"???????\");
    setValue(\"station_text\",\"text\",\"?????\");    
    line0.visible(false);
    line1.visible(false);
  }
}

void prepareHardwareList() {
  // set the hardware selectable items
  dynAppend(g_stationList,navFunct_bareDBName(sysName));
  dynAppend(g_IONodeList,ioNr);
  
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"CEP_IONode.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"CEP_IONode.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    reload();
  } else if (actionString[1] == \"DistChanged\") {
    // for dist system bound hardware only, if the distsystem went offline we need to replace 
    // the screen with a broken connection screen.
    if (!g_initializing) {
    
      // check if this syst is in the connectionlist and down
      int iPos=dynContains(g_connections[\"NAME\"],sysName);
      if (iPos > 0) {
        if (!g_connections[\"UP\"][iPos]) {
          navPanel_setEvent(\"invalid DP\",\"ChangePanel\");
        }
      }
    }
    return;
  }
}

void reload() {
  
  navFunct_clearGlobalLists();
  
  // set the hardware selectable items for this screen
  prepareHardwareList();
  
  // set panel to ready
  g_objectReady=true;
 
  
  // trigger that the panel values are calculated and ready
  navPanel_setEvent(\"CEP_IONode.pnl\",\"Update\");

}
" 0
 E E E E 1 -1 -1 0  188 128
""0  1
E "#uses \"navPanel.ctl\"
string      baseDP   = \"\";
string      inputBufferDP = \"\";
string      adderDP = \"\";
string      writerDP = \"\";

int         ioNr     = -1;

" 0
 2
"CBRef" "1"
"EClose" E
""
1
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
6 658
"childStateBorder"
""
1 500 80 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 E E
77 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 3 1 2 1 E U  1 E 0 0 999 709
2 917
"nodeName"
""
1 340 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

78 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E "main()
{
  click();
}" 0
 0 1 1 2 1 E U  1 E 340 10 557 34
0 2 2 "0s" 0 0 0 192 0 0  340 10 1
1
LANG:1 33 MS Shell Dlg,14,-1,5,75,0,0,0,0,0
0 1
LANG:1 20 Node: R00-M0-N00-J00
1 949 1 "" 1
0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 1 "selfState" -1
"objects\\lofar_self_state.pnl" 7 8 T 79 1 0 1 300 4
0
0
