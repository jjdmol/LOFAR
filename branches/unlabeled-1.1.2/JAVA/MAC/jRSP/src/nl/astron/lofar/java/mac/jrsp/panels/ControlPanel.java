package nl.astron.lofar.mac.apl.gui.jrsp.panels;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;
import javax.swing.event.EventListenerList;

/**
 * The ControlPanel is a component used by the MainPanel to get the hostname 
 * that should be used to connect to.
 *
 * @author  balken
 */
public class ControlPanel extends JPanel implements ActionListener
{
    /** MainPanel - is used like a sort of ActionListener. All actions call
                    functions in the MainPanel class. */
    private MainPanel mainPanel;
    
    /** 
     * Creates new form ControlPanel.
     */
    public ControlPanel() 
    {
        listenerList = new EventListenerList();
        
        initComponents();
        
        txtHostname.addActionListener(this);
        txtRefreshRate.addActionListener(this);
        btnConnect.addActionListener(this);
        btnStop.addActionListener(this);
    }
    
    /**
     * @return mainPanel
     */
    public MainPanel getMainPanel()
    {
        return mainPanel;
    }
    
    /**
     * Sets the mainPanel.
     * @param   mainPanel   The new mainPanel to set.
     */
    public void setMainPanel(MainPanel mainPanel)
    {
        this.mainPanel = mainPanel;
    }    
    
    /**
     * Invoked when an action occurs.
     * @param   e                       ActionEvent
     * @throws  NumberFormatException   Thrown if txtRefreshRate didn't contain a valid number.
     */
    public void actionPerformed(ActionEvent e)
    {
        // If the source is btnStop, the RefreshThread should be stopped else call initBoard.
        if(e.getSource().equals(btnStop))
        {
            mainPanel.stopRefreshThread();
            return;
        }
                
        int refreshRate = 0;
        
        // The Refreshrate can be empty but then it has to be set to "0".
        if("".equals(txtRefreshRate.getText()))
        {
            txtRefreshRate.setText("0");
        }
        else // parse text from textfield.
        {
            try
            {
                refreshRate = Integer.parseInt(txtRefreshRate.getText());
            }
            catch(NumberFormatException exception)
            {
                // @TODO dit netter oplossen en misschien zelfs in de mainpanel afhandelen.
                // There wasn't a valid number filled in. Give error message and leave method.
                System.out.println("Invalid value inserted.");
                return;
            }
        }
                        
        mainPanel.initBoard(txtHostname.getText(), refreshRate);
    }
    
    /**
     * Return the value of txtHostname.
     * @return txtHostname.getText();
     */
    public String getHostname()
    {
        return txtHostname.getText();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        txtHostname = new javax.swing.JTextField();
        lblHostname = new javax.swing.JLabel();
        btnConnect = new javax.swing.JButton();
        lblRefreshRate = new javax.swing.JLabel();
        txtRefreshRate = new javax.swing.JTextField();
        btnStop = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblHostname.setText("Hostname:");

        btnConnect.setText("Connect");

        lblRefreshRate.setText("Refresh rate:");

        btnStop.setText("Stop");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lblHostname)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtHostname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 113, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(6, 6, 6)
                .add(lblRefreshRate)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtRefreshRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnConnect)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnStop)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(lblHostname)
                .add(txtHostname, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(lblRefreshRate)
                .add(txtRefreshRate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(btnConnect)
                .add(btnStop))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnStop;
    private javax.swing.JLabel lblHostname;
    private javax.swing.JLabel lblRefreshRate;
    private javax.swing.JTextField txtHostname;
    private javax.swing.JTextField txtRefreshRate;
    // End of variables declaration//GEN-END:variables
    
}
