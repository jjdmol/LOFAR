package nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import nl.astron.lofar.mac.apl.gui.jrsp.Board;
import nl.astron.lofar.mac.apl.gui.jrsp.RCUMask;
import nl.astron.lofar.mac.apl.gui.jrsp.panels.*;

/**
 * @TODO add comments
 *
 * @author  balken
 */
public class WaveformSettingsPanel extends JPanel implements ITabPanel
{
    /** The main panel. */
    private MainPanel mainPanel;
    
    /** 
     * Creates new form WaveformSettingsPanel.
     */
    public WaveformSettingsPanel() 
    {
        mainPanel = null;
        
        initComponents();
        
        inputPanel.addActionListener(new InputPanelAction());
        
        selectPanel.init(this);
                
        plotPanel.init(this);
        
    }
    
    /**
     * Get main panel.
     * Mind that there isn't a access specifier given for this method. So this
     * function is only accesible within this package.
     *
     * @return  mainPanel
     */
    MainPanel getMainPanel()
    {
        return mainPanel;
    }
    
    /**
     * Returns the plot panel.
     * _Default_ access specifier: method only available within this package.
     */
    WaveformSettingsPlotPanel getPlotPanel()
    {
        return plotPanel;
    }
        
    /**
     * Initializes this panel and the underlying panels.
     */
    public void init(MainPanel mainPanel)
    {
        this.mainPanel = mainPanel;
    }    
    
    /**
     * Method that can be called by the main panel to update this panel.
     * Be aware of the fact that this function can be called once every second!
     */
    public void update()
    {
        selectPanel.update();
    }
    
    /**
     * Invoked when a action occured at the input panel.
     */
    private class InputPanelAction implements ActionListener
    {
        public void actionPerformed(ActionEvent e)
        {
            Board board = mainPanel.getBoard();

            // if the board isn't connected we dont have to perform a action :)
            if (!board.isConnected())
            {
                return;
            }

            RCUMask mask = new RCUMask();
            mask.setBit(mainPanel.getSelectedBoardIndex());
            int rcuMask = mask.getMask();

            try
            {
                int mode = Integer.parseInt(inputPanel.getMode());
                short phase = 0;
                double frequency = Double.parseDouble(inputPanel.getFrequency());
                int amplitude = Integer.parseInt(inputPanel.getAmplitude());

                if (!board.setWaveformSettings(rcuMask, mode, frequency, phase, amplitude))
                {
                    JOptionPane.showMessageDialog(null, "Failed to change the waveform settings.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            catch(NumberFormatException nfe)
            {
                JOptionPane.showMessageDialog(null, "Incorrect value entered. All fields should contain a positive value.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } // InputPanelAction
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        inputPanel = new nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings.WaveformSettingsInputPanel();
        plotPanel = new nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings.WaveformSettingsPlotPanel();
        selectPanel = new nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings.WaveformSettingsSelectPanel();

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(inputPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(selectPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(95, 95, 95)
                .add(plotPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(plotPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(inputPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(selectPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings.WaveformSettingsInputPanel inputPanel;
    private nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings.WaveformSettingsPlotPanel plotPanel;
    private nl.astron.lofar.mac.apl.gui.jrsp.panels.waveformsettings.WaveformSettingsSelectPanel selectPanel;
    // End of variables declaration//GEN-END:variables
}
