package nl.astron.lofar.mac.apl.gui.jrsp.panels;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import nl.astron.lofar.mac.apl.gui.jrsp.Board;
import nl.astron.lofar.mac.apl.gui.jrsp.RCUMask;

/**
 * @TODO add comments
 *
 * @author  balken
 */
public class WaveformSettingsPanel extends JPanel implements ActionListener
{
    /** Board instance */
    private MainPanel mainPanel;
    
    /** 
     * Creates new form WaveformSettingsPanel.
     */
    public WaveformSettingsPanel() 
    {
        mainPanel = null;
        
        initComponents();
        
        inputPanel.addActionListener(this);       
    }
    
    /**
     * Get main panel.
     * @return  mainPanel
     */
    public MainPanel getMainPanel()
    {
        return mainPanel;
    }
    
    /**
     * Set main panel.
     * @param   mainPanel
     */
    public void setMainPanel(MainPanel mainPanel)
    {
        this.mainPanel = mainPanel;
    }
    
    public void init()
    {
        plotPanel.init(mainPanel.getBoard().getSubbandStats(0));
    }
    
    
    /**
     * Invoked when a action occured; btnSumbit on the inputpanel pressed.
     */
    public void actionPerformed(ActionEvent e)
    {
        Board board = mainPanel.getBoard();
        
        // if the board isn't connected we dont have to perform a action :)
        if(!board.isConnected())
        {
            return;
        }
        
        RCUMask mask = new RCUMask();
        mask.setBit(mainPanel.getSelectedBoardIndex());
        int rcuMask = mask.getMask();
        
        try
        {
            int mode = Integer.parseInt(inputPanel.getMode());
            int frequency = Integer.parseInt(inputPanel.getFrequency());
            int amplitude = Integer.parseInt(inputPanel.getAmplitude());
            
            if(!board.setWaveformSettings(rcuMask, mode, frequency, amplitude))
            {
                JOptionPane.showMessageDialog(null, "Failed to change the waveform settings.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(null, "Incorrect value entered. All fields should contain a positive value.", "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        inputPanel = new nl.astron.lofar.mac.apl.gui.jrsp.panels.WaveformSettingsInputPanel();
        plotPanel = new nl.astron.lofar.mac.apl.gui.jrsp.panels.WaveformSettingsPlotPanel();

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(inputPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(74, 74, 74)
                        .add(plotPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(plotPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 277, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(inputPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private nl.astron.lofar.mac.apl.gui.jrsp.panels.WaveformSettingsInputPanel inputPanel;
    private nl.astron.lofar.mac.apl.gui.jrsp.panels.WaveformSettingsPlotPanel plotPanel;
    // End of variables declaration//GEN-END:variables
}