/*
 * LoginDialog.java
 *
 *  Copyright (C) 2002-2007
 *  ASTRON (Netherlands Foundation for Research in Astronomy)
 *  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, softwaresupport@astron.nl
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package nl.astron.lofar.sas.otbcomponents;

import java.rmi.RemoteException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import nl.astron.lofar.sas.otb.MainFrame;
import nl.astron.lofar.sas.otb.jotdb3.jDefaultTemplate;
import nl.astron.lofar.sas.otb.jotdb3.jOTDBtree;
import nl.astron.lofar.sas.otb.util.OtdbRmi;

/**
 *
 * @created 07-07-2011, 11:50
 *
 * @author  coolen
 *
 * @version $Id$
 */
public class CreateDefaultTemplateDialog extends javax.swing.JDialog {
    
    /** Creates new form LoginDialog */
    public CreateDefaultTemplateDialog(boolean modal, ArrayList<jDefaultTemplate> aList, jOTDBtree aTree, MainFrame aMainFrame) {
        super(aMainFrame, modal);
        initComponents();
        getRootPane().setDefaultButton(jButtonOK);
        itsDFList=(ArrayList)aList.clone();
        itsTree = aTree;
        init();
        ok = true;
    }

    public void setNew(ArrayList<jDefaultTemplate> aList, jOTDBtree aTree) {
        itsDFList=(ArrayList)aList.clone();
        itsTree = aTree;
        init();
    }

    private void init() {
        this.nameInput.setText("");
        this.processTypeInput.setText(itsTree.processType);
        this.processSubtypeInput.setText(itsTree.processSubtype);
        this.strategyInput.setText(itsTree.strategy);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();
        nameInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        processTypeInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        processSubtypeInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        strategyInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Lofar OTB login");
        setAlwaysOnTop(true);
        setModal(true);
        setName("loginDialog"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Default Template Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        jButtonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nl/astron/lofar/sas/otb/icons/16_cancel.png"))); // NOI18N
        jButtonCancel.setText("Cancel");
        jButtonCancel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        jButtonOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nl/astron/lofar/sas/otb/icons/16_apply.png"))); // NOI18N
        jButtonOK.setText("OK");
        jButtonOK.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonOK, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, -1, -1));
        getContentPane().add(nameInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 300, -1));

        jLabel2.setText("ProcessType:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));
        getContentPane().add(processTypeInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 300, -1));

        jLabel3.setText("ProcessSubtype:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, -1, -1));
        getContentPane().add(processSubtypeInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 300, -1));

        jLabel4.setText("Strategy:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));
        getContentPane().add(strategyInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 290, 300, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel5.setText("Create new Default Template");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 220, -1));

        jTextArea1.setBackground(javax.swing.UIManager.getDefaults().getColor("menu"));
        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setText("The default templatename needs to be unique.\nThe combination ProcessType,ProcessSubType,Strategy must be unique.\n\nKeep in Mind that at least MoM and the Scheduler must be aware of any new names.");
        jTextArea1.setBorder(null);
        jTextArea1.setCaretColor(javax.swing.UIManager.getDefaults().getColor("menu"));
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 660, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        ok = true;
        if (check() ) {
            setVisible(false);
            dispose();
        } else {
            ok=false;
        }
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        ok = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed
    
    private boolean check() {
        if (this.nameInput.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Empty Default Template Name", "Empty Name error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (this.processTypeInput.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Empty ProcessType Field", "Empty Name error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        for (jDefaultTemplate it: itsDFList) {
            if (it.name.equals(nameInput.getText())) {
                JOptionPane.showMessageDialog(this, "Duplicate ProcessTypename", "Duplicate Name error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        try {
            if (!OtdbRmi.getRemoteMaintenance().assignProcessType(itsTree.treeID(), processTypeInput.getText(), processSubtypeInput.getText(), strategyInput.getText())) {
                String aS = "Error during assignProcessType(" + itsTree.treeID() + "," + processTypeInput.getText() + "," + processSubtypeInput.getText() + "," + strategyInput.getText() + "): " + OtdbRmi.getRemoteMaintenance().errorMsg();
                JOptionPane.showMessageDialog(this, aS, "assignProcessType error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex, "assignProcessType error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        try {
            if (!OtdbRmi.getRemoteMaintenance().assignTemplateName(itsTree.treeID(),nameInput.getText())) {
                String aS = "Error during assignTemplateName(" + itsTree.treeID() + "," + nameInput.getText()+ "): " + OtdbRmi.getRemoteMaintenance().errorMsg();
                JOptionPane.showMessageDialog(this, aS, "assignTemplateName error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex, "assignTemplateName error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTextField processSubtypeInput;
    private javax.swing.JTextField processTypeInput;
    private javax.swing.JTextField strategyInput;
    // End of variables declaration//GEN-END:variables

    /**
     * Holds value of property ok.
     */
    private boolean ok;
    ArrayList<jDefaultTemplate> itsDFList;
    jOTDBtree itsTree;

    /**
     * Getter for property ok.
     * @return Value of property ok.
     */
    public boolean isOk() {
        return this.ok;
    }
}


