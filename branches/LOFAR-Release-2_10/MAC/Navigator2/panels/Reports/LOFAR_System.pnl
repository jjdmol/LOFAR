V 11
2
LANG:1 15 System overview
LANG:0 15 Systemübersicht
PANEL,-1 -1 1200 823 N "_3DFace" 0
"main()
{
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");

  baseDP = g_currentDatapoint;
  
  reload();
   
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"LOFAR_System.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"LOFAR_System.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    reload();
  }
}

void reload() {
  
  navFunct_clearGlobalLists(); 
 
  initHosts();

 
 
  int manId = convManIdToInt(EVENT_MAN,0); 
  int manId_2 = convManIdToInt(EVENT_MAN,0,0,2); 

  bool bEventConnection = isConnOpen(manId); 
  bool bEventConnection_2 = isConnOpen(manId_2);         
  int i;

  bool bEMActive = TRUE, bEMActive_2 = FALSE;
  string panel;
  
 
  if ( !isDistributed())
  {
    if (isRedundant())
         panel = \"\";
    else
         panel = \"objects/Reports/SystemOverview.pnl\";
 
    addSymbol(myModuleName(), myPanelName() , panel, \"test\", makeDynString(\"$System:\"+getSystemName()), 15,30,0,1,1);
    return;
  }
  else
  {
    diAllredyAddedSystems = makeDynInt(0);
    
    if ( isRedundant())
    {
       dpGet( \"_ReduManager.EvStatus:_online.._value\", bEMActive, 
              \"_ReduManager_2.EvStatus:_online.._value\", bEMActive_2);
    }  
           
    dpConnect(\"workCB\",TRUE,\"_DistManager.State.SystemNums:_online.._value\", \"_DistManager.State.SystemNums:_online.._stime\", \"_Connections.Dist.ManNums:_online.._value\", \"_ReduManager.EvStatus:_online.._value\");            // left active -> use left
    if (isRedundant())
      dpConnect(\"workCB\",TRUE, \"_DistManager_2.State.SystemNums:_online.._value\", \"_DistManager_2.State.SystemNums:_online.._stime\", \"_Connections_2.Dist.ManNums:_online.._value\", \"_ReduManager_2.EvStatus:_online.._value\");    // right active -> use right
  }
  
  // set panel to ready
  g_objectReady=true;
  
  
  // trigger that the panel values are calculated and ready
  navPanel_setEvent(\"LOFAR_System.pnl\",\"Update\");
}





workCB(string dp, dyn_int di,
       string dp2, time t,
       string dp3, dyn_int diDistManagers, 
       string dp4, bool bEMIsActive)
{

 LOG_DEBUG(\"LOFAR_System.pnl:workCB|di: \",di,\" distmanagers: \",diDistManagers,\" bEMIsActive: \",bEMIsActive);
 dyn_string dsSystemNames;
 dyn_uint duiSystemIds;
 dyn_string dsSystemNamesAll;
 dyn_uint duiSystemIdsAll;
 int i;
 string s;
 bool bVisible;
 string panel; 
 string header;
 int iSystemRedundancy;
 dyn_string dsRegisterdPanels_old = dsRegisterdPanels;
 int pos;

 int manId = convManIdToInt(EVENT_MAN,0); 
 int manId_2 = convManIdToInt(EVENT_MAN,0,0,2);

 bool bEventConnection = isConnOpen(manId); 
 bool bEventConnection_2 = isConnOpen(manId_2);         

 bool bDoNotShowOtherSystems;

 bool bUseSys1;
 if (!isRedundant())          // single System; always active
    bEMIsActive = TRUE; 

 if (isReduDp(dp4) && !bEventConnection_2 || !bEMIsActive)
    return;

 if (!isReduDp(dp4) && !bEventConnection)
    return;

 if ( !bEMIsActive)
    return;

if ( isDistributed() && dynlen( diDistManagers) == 0)
 {
   if ( (!isRedundant() && !isReduDp(dp3)) || (isRedundant() /* && isReduDp(dp3) */ )) 
   {
       bDoNotShowOtherSystems = TRUE;
   
       for ( i= dynlen(gdiRegisterdSystems) ;i>0 ; i--)
      {
           if (  gdiRegisterdSystems[i] == getSystemId())
             continue;
             
           panel = \"vision/SystemOverviewMissing.pnl\";     
           header = getSystemName(  gdiRegisterdSystems[i] ); 
                      setValue(\"Systemoverview\", \"registerPanel\", (gdiRegisterdSystems[i]-1),panel,makeDynString(\"$System:\"+ getSystemName(gdiRegisterdSystems[i])));
      
           pos =   dynContains ( gdiRegisterdSystems, gdiRegisterdSystems[i]); 
           if ( pos > 0)
           {
             dynRemove(gdiRegisterdSystems, pos); 
           }
      }        
      dynClear(gdiSystemIds);
      dynClear(diShownSystems);  
   }
 }

 
 if ( di == diShownSystems && dynlen (di) > 0 && dynContains(diShownSystems, getSystemId())>0 )  // double -> cancel but di has to have at least one entry
    return;
 else
    diShownSystems = di;

 dynAppend(di, getSystemId());
 
 dynSortAsc(di);
 dynUnique(di);

 getSystemNames( dsSystemNamesAll, duiSystemIdsAll);

 if ( dynlen( di ) > dynlen( dsSystemNamesAll))
 {
   Systemoverview.visible   = FALSE;
   Error.visible = TRUE;
   return;
 }
    
  if (!bDoNotShowOtherSystems )
     gdiSystemIds = di; 
 
 for ( i= 1; i<= dynlen(di) ; i++)
 {
   dsSystemNames[i] =getSystemName(di[i]);
   strreplace( dsSystemNames[i], \":\",\"\");
  }

  dyn_int diSystemsToDelete = gdiRegisterdSystems;
  int iActiveSystem;
  int iSheetSystemNumber;
  int pos;

  if ( Systemoverview.visible   == FALSE)
     iActiveSystem  = getSystemId();
  else
     iActiveSystem = Systemoverview.activeRegister() + 1;
 
  // find out witch systems ar on display but not any more in the connection list




   for ( i= 1; i<= dynlen(dsSystemNames) ; i++)
  {  
    iSheetSystemNumber = getSystemId(dsSystemNames[i]+\":\"); 
    pos =   dynContains ( diSystemsToDelete, iSheetSystemNumber); 
//    DebugN(\"Checking \", i, iSheetSystemNumber, dsSystemNames[i]+\":\", pos); 
    if ( pos > 0)
      dynRemove(diSystemsToDelete, pos);
  }
 


  // replace registers system with noc contact with  SystemOverviewMissing
    for ( i= 1; i<= dynlen(diSystemsToDelete) ; i++)
  {
//     DebugN(\" DELETE:\", diSystemsToDelete, iActiveSystem); 
     panel = \"vision/SystemOverviewMissing.pnl\";     
     header = getSystemName(  diSystemsToDelete[i] ); 
     
     setValue(\"Systemoverview\", \"registerPanel\", (diSystemsToDelete[i]-1),panel,makeDynString(\"$System:\"+ getSystemName(diSystemsToDelete[i])));

     pos =   dynContains ( gdiRegisterdSystems, diSystemsToDelete[i]); 
     if ( pos > 0)
     {
       dynRemove(gdiRegisterdSystems, pos); 
     }
                  
  }
        
   for( i=1; i<= dynlen(dsSystemNamesAll) ; i++)   
   {

     int iSearch =      (int)getSystemId( dsSystemNamesAll[i]+\":\")-1;
     if (iSearch == 0)
        bUseSys1 = TRUE; 
     
     if (  iSearch >    dynMax(diAllredyAddedSystems) + 1)          // WORKAROUND !!! TO BE REMOVED !!!!
     {
      // DebugN(\"Workaround vision/Redundanz -> generate sheet \"  + iSearch +\" from \" +dynMax(diAllredyAddedSystems)+\"    To be removed !!!\"); 
       for ( int i= dynMax(diAllredyAddedSystems)+1; i<= iSearch -1; i++)
       {
            setValue(\"Systemoverview\",\"insertRegister\", i);      
            setValue(\"Systemoverview\",  \"registerVisible\", i, FALSE );         // set visibility of sheet
            dynAppend(diAllredyAddedSystems, i); 
       }
     }
     
     
     if (dynContains( diAllredyAddedSystems ,iSearch   )<=0)
     {
       setValue(\"Systemoverview\",\"insertRegister\", getSystemId( dsSystemNamesAll[i]+\":\")-1); 
       dynAppend(diAllredyAddedSystems, getSystemId( dsSystemNamesAll[i]+\":\")-1); 
     }
    
      string sName;
      header = dsSystemNamesAll[i]; 
      sprintf(sName, \"#%d\", getSystemId( dsSystemNamesAll[i]+\":\"));
      Systemoverview.registerHeader(getSystemId( dsSystemNamesAll[i]+\":\")-1,header);  
      setValue(\"Systemoverview\",  \"registerVisible\", (getSystemId( dsSystemNamesAll[i]+\":\")-1), TRUE );         // set visibility of sheet
   }
   
   if (!bUseSys1)
     setValue(\"Systemoverview\",  \"registerVisible\", 0, FALSE );         // set visibility of sheet for sys1
     
 if ( dynlen(diDistManagers) > 0)
 {
   Error.visible   = FALSE;
   Systemoverview.visible   = TRUE; 
 
 }
   
  
   pos =   dynContains ( gdiRegisterdSystems, iActiveSystem); 
   if ( pos > 0)
     return;                                             // nothing to do
 
   if  (! dynContains( gdiRegisterdSystems, iActiveSystem) && (dynContains ( diSystemsToDelete, iActiveSystem)<=0) )
   {
      isRemoteSystemRedundant( iSystemRedundancy,  getSystemName(iActiveSystem));
   
      if ((iSystemRedundancy > 0))
           panel = \"\";
      else
           panel = \"objects/Reports/SystemOverview.pnl\";
   
      if (bDoNotShowOtherSystems && iActiveSystem != getSystemId())
      {
        panel = \"vision/SystemOverviewMissing.pnl\";     
      }   
     else   
         dynAppend(gdiRegisterdSystems, iActiveSystem);
   
    
      header = getSystemName(  iActiveSystem ); 
   
     setValue(\"Systemoverview\", \"registerPanel\", (iActiveSystem-1),panel,makeDynString(\"$System:\"+getSystemName(iActiveSystem)));
  }


  Systemoverview.registerVisible(iActiveSystem -1 ) = TRUE; 
  Systemoverview.activeRegister(iActiveSystem -1 ); 

  Systemoverview.visible   = !Error.visible   ;
}
" 0
 E E E E 1 -1 -1 0  460 40
"refFileName"0  1
E "#uses \"navPanel.ctl\"
string baseDP=\"\";

dyn_int gdiRegisterdSystems;
dyn_string gdiSystemIds;
bool bBlock;

dyn_string  dsRegisterdPanels;
bool bShowOnlyOneSystem;
time tRemoveDouble;
dyn_int diShownSystems;
dyn_int diAllredyAddedSystems ;

" 0
 3
"CBRef" "0"
"EClose" E
"LangSwitchMode" "1"
""
NC
DISPLAY_LAYER, 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
LAYER, 0 
1
LANG:1 6 Layer1
2 253
"Error"
""
1 50 260 E E E 1 E 0 E N {255,0,0} E N "_Transparent" E E
 E E
93 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 52 262 768 288
0 2 0 "0s" 0 0 0 64 0 0  52 262 1
2
LANG:1 26 Arial,-1,20,5,40,0,0,0,0,0
LANG:0 84 -*-Arial-*-r-normal-*-20-*-100-100-*-*-iso8859-1|-20,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 2
LANG:1 49 Error: Please check DISTmanager of active system!
LANG:0 66 Fehler: Bitte überprüfen Sie den DISTManager des aktiven Systemes!
2 262
"Text1"
""
1 0 801 E E E 1 E 1 E N {0,0,0} E N "_Transparent" E E
 E E
99 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 2 803 74 818
0 2 0 "0s" 0 0 0 192 0 0  2 803 1
2
LANG:1 26 Arial,-1,12,5,40,0,0,0,0,0
LANG:0 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 2
LANG:1 13 Current user:
LANG:0 19 aktueller Benutzer:
14 260
"TextField1"
""
1 380 800 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
98 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

0
2
LANG:1 26 Arial,-1,12,5,40,0,0,0,0,0
LANG:0 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0  378 798 986 824
2 "0s" 0 0 0 0 0 -1  E "main()
{
  if ( isRedundant())           // possible splitmode
  {
     dpConnect(\"setText\", \"_ReduManager.SplitMode:_online.._value\", \"_ReduManager_2.SplitMode:_online.._value\", \"_Managers.Refresh:_online.._value\", \"_Managers_2.Refresh:_online.._value\");
  }
  else
  {
     setText(\"Dummy\", TRUE, \"Dummy\", TRUE, \"Dummy\", TRUE, \"Dummy\", TRUE);
  }


}

setText(string dp1, bool b1, string dp2, bool b2, string dp3, bool b3, string dp4, bool b4)
{
  string sSystem=  getSystemName();
  string sUi;
  bool bAnswer;
  string sAddHost;



  if (!isDistributed() && sSystem == \"System1:\")  // NoCheckWarning
    sSystem = \"\";
  else
    sSystem = \", \"+sSystem;
    
    
  sUi = getCatStr(  \"managers\", \"PVSS00ui\");

  if ( isRedundant())
  {
     isSplitModeActive( bAnswer, getSystemName());
     if ( bAnswer )
     {
		    bool bEvStatus, bEvStatus_2;
		    dyn_int diDistMan, diDistMan_2;
		    int manId = convManIdToInt(EVENT_MAN,0);
		    int manId_2 = convManIdToInt(EVENT_MAN,0,0,2);
		       
		    bool bEventConnection = isConnActive(manId);    
		    bool bEventConnection_2 = isConnActive(manId_2);         
       
       if ( bEventConnection  && !bEventConnection_2 )   
       {
          sAddHost = \" - \"+host1;
       }
       else  if ( !bEventConnection  && bEventConnection_2 )   
       {
          sAddHost = \" - \"+host2;
       }
       else
       {
          sAddHost = \" - both? -> error\";
       }
     }     
  }
   
  this.text	= sUi +\" #\"+myUiNumber()+ \" (\"+myDisplayName()+\")\"+ sSystem + sAddHost;

}








" 0
 E
14 261
"TextField2"
""
1 129 800 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 E E
98 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

0
2
LANG:1 26 Arial,-1,12,5,40,0,0,0,0,0
LANG:0 84 -*-Arial-*-r-normal-*-12-*-100-100-*-*-iso8859-1|-12,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0  127 798 371 824
2 "0s" 0 0 0 0 0 -1  E "main()
{
STD_showUser();
} " 0
 E
28 264
"Systemoverview"
""
1 17 13.1666666666667 E E E 1 E 0 E N "_3DText" E N "_3DFace" E E
 E E
100 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"selchangedcb" "main()
{
  int iActiveSystem ;   // count starts at zero
  if (Systemoverview.visible	== FALSE)
    iActiveSystem = getSystemId() -1;
  else
    iActiveSystem = Systemoverview.activeRegister();
  iActiveSystem ++;
  int iSystemRedundancy;
  int  pos =   dynContains ( gdiRegisterdSystems, iActiveSystem); 
  string header, panel;

  if (this.visible	== FALSE)
    return;
 
  if ( pos > 0 || bBlock)
     return;                                             // nothing to do
 
   if (! dynContains( gdiRegisterdSystems, iActiveSystem))
   {
 
  
      if ( dynContains(gdiSystemIds,iActiveSystem) > 0 )      // SystemId is in actual connected Systems
       {
         isRemoteSystemRedundant( iSystemRedundancy,  getSystemName(iActiveSystem));
	
	       if ((iSystemRedundancy > 0))
	            panel = \"\";
	       else
	            panel = \"objects/Reports/SystemOverview.pnl\";

     	  dynAppend(gdiRegisterdSystems, iActiveSystem);
        bBlock = FALSE;
       }
       else
       {      
          panel = \"vision/SystemOverviewMissing.pnl\";     
	        bBlock = TRUE;

	     } 
 	
	   setValue(\"Systemoverview\", \"registerPanel\", (iActiveSystem-1),panel,makeDynString(\"$System:\"+getSystemName(iActiveSystem))); 
	   setValue(\"Systemoverview\", \"registerVisible\", (iActiveSystem-1), TRUE);

   }

  if ( bBlock )
    startThread(\"resetbBlock\");

}

resetbBlock()
{
  delay(0,100);
  bBlock = FALSE;
}"
2
LANG:1 26 Arial,-1,13,5,40,0,0,0,0,0
LANG:0 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0  -2 -2 1201 792
E1 "#1" 2
LANG:1 4 #001
LANG:0 2 #1
0

0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
