

//
//  MIS_Protocol.tse.prot: Protocol for MAC Information Exchange
//
//  Copyright (C) 2005
//  ASTRON (Netherlands Foundation for Research in Astronomy)
//  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, softwaresupport@astron.nl
//
//  This program is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//  
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//  
//  You should have received a copy of the GNU Lesser General Public
//  License along with This program; if not, write to:
//             The Free Software Foundation, Inc.,
//             59 Temple Place - Suite 330,
//             Boston,  MA  02111-1307, USA.
//
//  $Id$
//

//    This file contains three sections:
//    [type]      : type definitions
//    [functions] : Messages sent to the Device under Test (DUT)
//    [events]    : Messages received from the DuT.
//
//    The format of each section is explained in brief in the
//    beginning of each section.
//========================================================================

[type]

//    A type has a number of parameters: the first parameter
//    defines the size in bytes. If there is a second and third
//    parameter, these define the lower and upper limit.
//
//    If there is a fourth parameter, it can be a string
//    with the following meanings:
//    TIME          : Parameters of this type reflect a certain
//                    time(span)
//    ENUM          : Parameters of this type have a value with
//                    an enumerated meaning.
//    BITFIELD      : Parameters of this type are bitmap para-
//                    meters.
//    ASCII         : Field contains non-terminated ASCII data.
//    ASCII_0       : Field contains zero-terminated ASCII data.
//                    Field is fixed-sized, but bytes following
//                    the 0-byte are undefined and not checked.
//    ASCII_n       : Field contains <LF> /n-terminated ASCII data.
//                    Field is fixed-sized, but bytes following
//                    the /n-byte are not checked.
//    UNICODE       : Field contains none-terminated UNICODE
//                    data.
//    UNICODE_0     : Field contains zero-terminated UNICODE
//                    data.
//    UNICODE_n     : Field contains <LF> /n-terminated UNICODE
//                    data.
//
//    The meaning of the remaining parameters depends of this
//    string:
//    TIME          : Has one additional parameter, which is
//                    a float. This float indicates the time in
//                    seconds intended of one unit.
//    ENUM          : A list of additional parameters exists.
//                    This list is intended to be self-explaining.
//    BITFIELD      : A list of additional parameters exists.
//                    If the bitfield is denoted as
//                    (0xXXXX,0xXXXX), the first bitfield is
//                    a mask, the second bitfield defines the
//                    bits.


//    First a small list of general purpose types is defined.
//    Default type is interpreted as "Big endian"

t_B1                  = {   1 }
t_B2                  = {   2 }
t_B3                  = {   3 }
t_B4                  = {   4 }
t_B6                  = {   6 }
t_B8                  = {   8 }
t_B16                 = {  16 }

//    The Lofar types:


t_uInt                =  {   4 }
t_Long                =  {   4 }
t_uLong               =  {   4 }
t_String              = -{ 65535-, ASCII } // (-) indicates little endian, 100- indicates 100 characters or less 
t_doubleA             = -{ 65535-, ARRAY, 8 } // (-) indicates little endian, 100- indicates 100 characters or less 
t_uint8A              = -{ 65535-, ARRAY, 1 } // (-) indicates little endian, 100- indicates 100 characters or less 
t_StringLen						=	 {   2 }

int8 									=  {   1 }
uint8									=  {   1 }
int16									=  {   2 }
uint16								=  {   2 }
int32									=  {   4 }
uint32								=  {   4 }
int64									=  {   8 }
uint64								=  {   8 }
int                   =  {   4 }
time_t                =  {   4 }
timeval               =  {   8 }
double              	=  {   8 }

// Here are the types from the Lofar template that need conversion!!

TPSCategory = 
{
  4,0x00000000,0xFFFFFFFF,ENUM,
  0x00000000 : "PS_CAT_TEMPORARY", 
  0x00000001 : "PS_CAT_PERMANENT", 
  0x00000002 : "PS_CAT_PERM_AUTOLOAD"
}

TGCFResult =
{
  4,0x00000000,0xFFFFFFFF,ENUM,
  0x00000000 : "GCF_NO_ERROR", 
  0x00000001 : "GCF_UNKNOWN_ERROR",
  0x00000002 : "GCF_PML_ERROR", 
  0x00000003 : "GCF_EXTPS_LOAD_ERROR",
  0x00000004 : "GCF_PS_CONFIGURE_ERROR",
  0x00000005 : "GCF_EXTPS_UNLOAD_ERROR",
  0x00000006 : "GCF_MYPS_ENABLE_ERROR",
  0x00000007 : "GCF_MYPS_DISABLE_ERROR",
  0x00000008 : "GCF_VALUESTRING_NOT_VALID",
  0x00000009 : "GCF_DIFFERENT_TYPES",
  0x0000000A : "GCF_BUSY",
  0x0000000B : "GCF_ALREADY_LOADED",
  0x0000000C : "GCF_NOT_LOADED",
  0x0000000D : "GCF_PROP_NOT_VALID",
  0x0000000E : "GCF_PROP_WRONG_TYPE",
  0x0000000F : "GCF_PROP_NOT_IN_SET",
  0x00000010 : "GCF_NO_PROPER_DATA",
  0x00000011 : "GCF_SCOPE_ALREADY_REG",
  0x00000012 : "GCF_ALREADY_SUBSCRIBED",
  0x00000013 : "GCF_NOT_SUBSCRIBED",
  0x00000014 : "GCF_WRONG_STATE",
  0x00000015 : "GCF_PVSS_ERROR"
}


[functions]


F_MIS_GENERIC_PINGPONG =
{
  0x01CF,
  0x20000000, // 32 bytes msgLength
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	ttl : uint32
}

F_MIS_GENERIC_IDENTIFY_REQUEST =
{
  0x024F,
  0x1C000000,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32
}

F_MIS_GENERIC_IDENTIFY_RESPONSE =
{
  0x038F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	node_idNOC : t_StringLen, 
	node_id : t_String[node_idNOC],
	sw_versionNOC : t_StringLen, 
	sw_version : t_String[sw_versionNOC]
}

F_MIS_DIAGNOSIS_NOTIFICATION =
{
  0x044F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	componentNOC : t_StringLen, 
	component : t_String[componentNOC],
	diagnosisNOC : t_StringLen, 
	diagnosis : t_String[diagnosisNOC],
	confidence : uint16,
	diagnosis_idNOC : t_StringLen, 
	diagnosis_id : t_String[diagnosis_idNOC]
}

F_MIS_DIAGNOSIS_RESPONSE =
{
  0x058F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC]
}

F_MIS_RECONFIGURATION_REQUEST =
{
  0x064F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	reconfiguration_requestNOC : t_StringLen, 
	reconfiguration_request : t_String[reconfiguration_requestNOC]
}

F_MIS_RECONFIGURATION_RESPONSE =
{
  0x078F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC]
}

F_MIS_LOFAR_STRUCTURE_REQUEST =
{
  0x084F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	mac_node_idNOC : t_StringLen, 
	mac_node_id : t_String[mac_node_idNOC]
}

F_MIS_LOFAR_STRUCTURE_RESPONSE =
{
  0x098F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	component_structureNOC : t_StringLen, 
	component_structure : t_String[component_structureNOC]
}

F_MIS_LOFAR_STRUCTURE_CHANGED_ASYNC =
{
  0x0A8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	mac_node_idNOC : t_StringLen, 
	mac_node_id : t_String[mac_node_idNOC]
}

F_MIS_PVSS_DP_SUBSCRIPTION_REQUEST =
{
  0x0B4F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	dpnameNOC : t_StringLen, 
	dpname : t_String[dpnameNOC],
	requestNOC : t_StringLen, 
	request : t_String[requestNOC]
}

F_MIS_PVSS_DP_SUBSCRIPTION_RESPONSE =
{
  0x0C8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	dptypeNOC : t_StringLen, 
	dptype : t_String[dptypeNOC]
}

F_MIS_PVSS_DP_SUBSCRIPTION_VALUE_CHANGED_ASYNC =
{
  0x0D8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	valueNOC : t_StringLen, 
	value : t_String[valueNOC]
}

F_MIS_SUBBAND_STATISTICS_REQUEST =
{
  0x0E4F,
  0x1C000000, // 28 bytes msgLength
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32
}

F_MIS_SUBBAND_STATISTICS_RESPONSE =
{
  0x0F8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	invalidNOE : t_B4,
	invalid : t_uint8A[invalidNOE],
	rcu_settingsNOE : t_B4,
	rcu_settings : t_uint8A[rcu_settingsNOE],
	dataNOE : t_B4,
	data : t_doubleA[dataNOE]
}

F_MIS_ANTENNA_CORRELATION_MATRIX_REQUEST =
{
  0x104F,
  0x1E000000, // 30 bytes
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	subband_selector : uint16
}

F_MIS_ANTENNA_CORRELATION_MATRIX_RESPONSE =
{
  0x118F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	metadataNOC : t_StringLen, 
	metadata : t_String[metadataNOC],
	dataNOE : t_B4,
	{ data : double}[dataNOE]
}

F_THPVSSBRIDGE_ENABLE_MY_PROPERTY_SET =
{
  0x014E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  type : t_String [ nrOfChars2 ],
  category : TPSCategory
  
}

F_THPVSSBRIDGE_ENABLE_MY_PROPERTY_SET_RESPONSE =
{
  0x028E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
  
}

F_THPVSSBRIDGE_DISABLE_MY_PROPERTY_SET =
{
  0x034E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
  
}

F_THPVSSBRIDGE_DISABLE_MY_PROPERTY_SET_RESPONSE =
{
  0x048E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
  
}

F_THPVSSBRIDGE_MY_GET_VALUE =
{
  0x054E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_MY_GET_VALUE_RESPONSE =
{
  0x068E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

F_THPVSSBRIDGE_MY_SET_VALUE =
{
  0x074E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

F_THPVSSBRIDGE_MY_SET_VALUE_RESPONSE =
{
  0x088E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_LOAD_EXT_PROPERTY_SET =
{
  0x094E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  type : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_LOAD_EXT_PROPERTY_SET_RESPONSE =
{
  0x0A8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
}

F_THPVSSBRIDGE_UNLOAD_EXT_PROPERTY_SET =
{
  0x0B4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
}

F_THPVSSBRIDGE_UNLOAD_EXT_PROPERTY_SET_RESPONSE =
{
  0x0C8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
}

F_THPVSSBRIDGE_SUBSCRIBE_EXT_PROPERTY =
{
  0x0D4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

F_THPVSSBRIDGE_SUBSCRIBE_EXT_PROPERTY_RESPONSE =
{
  0x0E8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

F_THPVSSBRIDGE_UNSUBSCRIBE_EXT_PROPERTY =
{
  0x0F4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

F_THPVSSBRIDGE_UNSUBSCRIBE_EXT_PROPERTY_RESPONSE =
{
  0x108E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

F_THPVSSBRIDGE_EXT_GET_VALUE =
{
  0x114E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

F_THPVSSBRIDGE_EXT_GET_VALUE_RESPONSE =
{
  0x128E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]  
}

F_THPVSSBRIDGE_EXT_SET_VALUE =
{
  0x134E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
}

F_THPVSSBRIDGE_EXT_SET_VALUE_RESPONSE =
{
  0x148E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

F_THPVSSBRIDGE_VALUE_CHANGE_RESPONSE =
{
  0x158E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
}

F_THPVSSBRIDGE_SUBSCRIBE_PROPERTY =
{
  0x164E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_SUBSCRIBE_PROPERTY_RESPONSE =
{
  0x178E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_UNSUBSCRIBE_PROPERTY =
{
  0x184E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_UNSUBSCRIBE_PROPERTY_RESPONSE =
{
  0x198E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_GET_VALUE =
{
  0x1A4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

F_THPVSSBRIDGE_GET_VALUE_RESPONSE =
{
  0x1B8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

F_THPVSSBRIDGE_SET_VALUE =
{
  0x1C4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

F_THPVSSBRIDGE_SET_VALUE_RESPONSE =
{
  0x1D8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

[events]

E_MIS_GENERIC_PINGPONG =
{
  0x01CF,
  0x20000000, //32 bytes msgLength
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	ttl : uint32
}

E_MIS_GENERIC_IDENTIFY_REQUEST =
{
  0x024F,
  0x1C000000, // 28 bytes msgLength
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32
}

E_MIS_GENERIC_IDENTIFY_RESPONSE =
{
  0x038F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	node_idNOC : t_StringLen, 
	node_id : t_String[node_idNOC],
	sw_versionNOC : t_StringLen, 
	sw_version : t_String[sw_versionNOC]
}

E_MIS_DIAGNOSIS_NOTIFICATION =
{
  0x044F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	componentNOC : t_StringLen, 
	component : t_String[componentNOC],
	diagnosisNOC : t_StringLen, 
	diagnosis : t_String[diagnosisNOC],
	confidence : uint16,
	diagnosis_idNOC : t_StringLen, 
	diagnosis_id : t_String[diagnosis_idNOC]
}

E_MIS_DIAGNOSIS_RESPONSE =
{
  0x058F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC]
}

E_MIS_RECONFIGURATION_REQUEST =
{
  0x064F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	reconfiguration_requestNOC : t_StringLen, 
	reconfiguration_request : t_String[reconfiguration_requestNOC]
}

E_MIS_RECONFIGURATION_RESPONSE =
{
  0x078F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC]
}

E_MIS_LOFAR_STRUCTURE_REQUEST =
{
  0x084F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	mac_node_idNOC : t_StringLen, 
	mac_node_id : t_String[mac_node_idNOC]
}

E_MIS_LOFAR_STRUCTURE_RESPONSE =
{
  0x098F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	component_structureNOC : t_StringLen, 
	component_structure : t_String[component_structureNOC]
}

E_MIS_LOFAR_STRUCTURE_CHANGED_ASYNC =
{
  0x0A8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	mac_node_idNOC : t_StringLen, 
	mac_node_id : t_String[mac_node_idNOC]
}

E_MIS_PVSS_DP_SUBSCRIPTION_REQUEST =
{
  0x0B4F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	dpnameNOC : t_StringLen, 
	dpname : t_String[dpnameNOC],
	requestNOC : t_StringLen, 
	request : t_String[requestNOC]
}

E_MIS_PVSS_DP_SUBSCRIPTION_RESPONSE =
{
  0x0C8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	dptypeNOC : t_StringLen, 
	dptype : t_String[dptypeNOC]
}

E_MIS_PVSS_DP_SUBSCRIPTION_VALUE_CHANGED_ASYNC =
{
  0x0D8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	valueNOC : t_StringLen, 
	value : t_String[valueNOC]
}

E_MIS_SUBBAND_STATISTICS_REQUEST =
{
  0x0E4F,
  0x1C000000, // 28 bytes msgLength
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32
}

E_MIS_SUBBAND_STATISTICS_RESPONSE =
{
  0x0F8F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	invalidNOE : t_B4,
	invalid : t_uint8A[invalidNOE],
	rcu_settingsNOE : t_B4,
	rcu_settings : t_uint8A[rcu_settingsNOE],
	dataNOE : t_B4,
	data : t_doubleA[dataNOE]
}

E_MIS_ANTENNA_CORRELATION_MATRIX_REQUEST =
{
  0x104F,
  0x1E000000, // 30 bytes msgLength
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	subband_selector : uint16
}

E_MIS_ANTENNA_CORRELATION_MATRIX_RESPONSE =
{
  0x118F,
  msgLength : t_B4,
	seqnr : uint64,
	replynr : uint64,
	timestamp_sec : int64,
	timestamp_nsec : uint32,
	responseNOC : t_StringLen, 
	response : t_String[responseNOC],
	payload_timestamp_sec : int64,
	payload_timestamp_nsec : uint32,
	metadataNOC : t_StringLen, 
	metadata : t_String[metadataNOC],
	dataNOE : t_B4,
	{ data : double}[dataNOE]
}

E_THPVSSBRIDGE_ENABLE_MY_PROPERTY_SET =
{
  0x014E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  type : t_String [ nrOfChars2 ],
  category : TPSCategory
  
}

E_THPVSSBRIDGE_ENABLE_MY_PROPERTY_SET_RESPONSE =
{
  0x028E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
  
}

E_THPVSSBRIDGE_DISABLE_MY_PROPERTY_SET =
{
  0x034E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
  
}

E_THPVSSBRIDGE_DISABLE_MY_PROPERTY_SET_RESPONSE =
{
  0x048E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
  
}

E_THPVSSBRIDGE_MY_GET_VALUE =
{
  0x054E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_MY_GET_VALUE_RESPONSE =
{
  0x068E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

E_THPVSSBRIDGE_MY_SET_VALUE =
{
  0x074E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

E_THPVSSBRIDGE_MY_SET_VALUE_RESPONSE =
{
  0x088E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_LOAD_EXT_PROPERTY_SET =
{
  0x094E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  type : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_LOAD_EXT_PROPERTY_SET_RESPONSE =
{
  0x0A8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
}

E_THPVSSBRIDGE_UNLOAD_EXT_PROPERTY_SET =
{
  0x0B4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
}

E_THPVSSBRIDGE_UNLOAD_EXT_PROPERTY_SET_RESPONSE =
{
  0x0C8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars : t_StringLen,
  scope : t_String [ nrOfChars ]
}

E_THPVSSBRIDGE_SUBSCRIBE_EXT_PROPERTY =
{
  0x0D4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

E_THPVSSBRIDGE_SUBSCRIBE_EXT_PROPERTY_RESPONSE =
{
  0x0E8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

E_THPVSSBRIDGE_UNSUBSCRIBE_EXT_PROPERTY =
{
  0x0F4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

E_THPVSSBRIDGE_UNSUBSCRIBE_EXT_PROPERTY_RESPONSE =
{
  0x108E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

E_THPVSSBRIDGE_EXT_GET_VALUE =
{
  0x114E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

E_THPVSSBRIDGE_EXT_GET_VALUE_RESPONSE =
{
  0x128E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]  
}

E_THPVSSBRIDGE_EXT_SET_VALUE =
{
  0x134E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
}

E_THPVSSBRIDGE_EXT_SET_VALUE_RESPONSE =
{
  0x148E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}

E_THPVSSBRIDGE_VALUE_CHANGE_RESPONSE =
{
  0x158E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
}

E_THPVSSBRIDGE_SUBSCRIBE_PROPERTY =
{
  0x164E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_SUBSCRIBE_PROPERTY_RESPONSE =
{
  0x178E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_UNSUBSCRIBE_PROPERTY =
{
  0x184E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_UNSUBSCRIBE_PROPERTY_RESPONSE =
{
  0x198E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_GET_VALUE =
{
  0x1A4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
  
}

E_THPVSSBRIDGE_GET_VALUE_RESPONSE =
{
  0x1B8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

E_THPVSSBRIDGE_SET_VALUE =
{
  0x1C4E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ],
  nrOfChars3 : t_StringLen,
  value : t_String [ nrOfChars3 ]
  
}

E_THPVSSBRIDGE_SET_VALUE_RESPONSE =
{
  0x1D8E, // LSB first: signal, protocol, in/out
  msgLength : t_B4,
  response : TGCFResult,
  nrOfChars1 : t_StringLen,
  scope : t_String [ nrOfChars1 ],
  nrOfChars2 : t_StringLen,
  property : t_String [ nrOfChars2 ]
}
