//#  DP_Protocol.prot: Protocol definition for the MAC controllers
//#
//#  Copyright (C) 2006
//#  ASTRON (Netherlands Foundation for Research in Astronomy)
//#  P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, softwaresupport@astron.nl
//#
//#  This program is free software; you can redistribute it and/or modify
//#  it under the terms of the GNU General Public License as published by
//#  the Free Software Foundation; either version 2 of the License, or
//#  (at your option) any later version.
//#
//#  This program is distributed in the hope that it will be useful,
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//#  GNU General Public License for more details.
//#
//#  You should have received a copy of the GNU General Public License
//#  along with this program; if not, write to the Free Software
//#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//#
//#  $Id$


autogen definitions protocol;

description = "Protocol for passing PVSSresponses to GCF-tasks";
prefix = "DP"; // for the signal names
id = "(LOFAR::MACIO::F_GCF_PROTOCOL+2)";

// specify extra include files
// e.g.
// include = '<sys/time.h>';
include = '<GCF/PVSS/GCF_PValue.h>';

prelude = << PRELUDE_END

// The following messages are defined in the DP protocol:
//
// CREATED			 (string DPname, uint16 result)
// DELETED			 (string DPname, uint16 result)
// CONFIGURED		 (string DPname, uint16 result)
// SET				 (string DPname, uint16 result)
// GET				 (string DPname, uint16 result, GCFValue	value)
// CHANGED			 (string DPname, uint16 result, GCFValue	value)
// SUBSCRIBED		 (string DPname, uint16 result)
// UNSUBSCRIBED		 (string DPname, uint16 result)
// QUERYSUBSCRIBED	 (uint16 QryID,  uint16 result)
// QUERYUNSUBSCRIBED (uint16 QryID,  uint16 result)
// QUERYCHANGED		 (uint16 QryID,  uint16 result, 
//					 GCFValueArray DPnames, GCFValueArray DPvalues, GCFValueArray DPtimes)
// LOST_SUBSCRIPTION (string DPname)
// LOST_SERVER		 (string DPname)
//

class PValue : public MACIO::GCFTransportable
{
  public:
    PValue() : _pValue(0), _unpacked(false) {};
    PValue(const LOFAR::GCF::PVSS::GCFPValue& value) : _pValue(&value), _unpacked(false) {};

    virtual ~PValue() 
    {
      if (_unpacked) delete _pValue;
    }

    unsigned int pack(char* buffer)
    {
      assert(_pValue);
      return _pValue->pack(buffer);
    }
    unsigned int unpack(char* buffer)
    {
      assert(!_pValue);
      _unpacked = true;
	  unsigned int	_offset(0);
      _pValue = LOFAR::GCF::PVSS::GCFPValue::unpackValue(buffer, &_offset);
      return _pValue->getSize();
    }
    unsigned int getSize()
    {
      assert(_pValue);
      return _pValue->getSize();
    }

    const LOFAR::GCF::PVSS::GCFPValue* _pValue;

  private:
    bool _unpacked;
};
PRELUDE_END;

error = {
	id  = NO;
	msg = "No errors";
};
error = {
	id  = LOST_CONN;
	msg = "Lost connection";
};

//
// CREATED
//
event = {
	signal = CREATED;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// DELETED
//
event = {
	signal = DELETED;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// CONFIGURED
//
event = {
	signal = CONFIGURED;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// SET
//
event = {
	signal = SET;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// GET
//
event = {
	signal = GET;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
	param = {
		name = "value";
		type = "PValue";
		userdefined;
	};
};

//
// CHANGED
//
event = {
	signal = CHANGED;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
	param = {
		name = "value";
		type = "PValue";
		userdefined;
	};
};

//
// SUBSCRIBED
//
event = {
	signal = SUBSCRIBED;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// UNSUBSCRIBED
//
event = {
	signal = UNSUBSCRIBED;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// QUERY_SUBSCRIBED
//
event = {
	signal = QUERY_SUBSCRIBED;
	dir = IN;
	param = {
		name = "QryID";
		type = "uint16";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// QUERY_UNSUBSCRIBED
//
event = {
	signal = QUERY_UNSUBSCRIBED;
	dir = IN;
	param = {
		name = "QryID";
		type = "uint16";
	};
	param = {
		name = "result";
		type = "uint16";
	};
};

//
// QUERY_CHANGED
//
event = {
	signal = QUERY_CHANGED;
	dir = IN;
	param = {
		name = "QryID";
		type = "uint16";
	};
	param = {
		name = "result";
		type = "uint16";
	};
	param = {
		name = "DPnames";
		type = "PValue";
		userdefined;
	};
	param = {
		name = "DPvalues";
		type = "PValue";
		userdefined;
	};
	param = {
		name = "DPtimes";
		type = "PValue";
		userdefined;
	};
};

//
// LOST_SUBSCRIPTION
//
event = {
	signal = LOST_SUBSCRIPTION;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
};

//
// LOST_SERVER
//
event = {
	signal = LOST_SERVER;
	dir = IN;
	param = {
		name = "DPname";
		type = "string";
	};
};

