#!/bin/sh

#
# Path to the wrapexec_wrapper binary
#
wrapexec_wrapper=INSTALL_BINDIR/wrapexec_wrapper

#
# Find config file
#
if test -f $HOME/.wrapexec.cfg; then
    conffile=$HOME/.wrapexec.cfg;
else
  if test -f INSTALL_SYSCONFDIR/wrapexec.cfg; then
    conffile=INSTALL_SYSCONFDIR/wrapexec.cfg;
  else
    echo "wrapexec: error: Could not find configuration file in '$HOME/.wrapexec.cfg'"
    echo "or INSTALL_SYSCONFDIR/wrapexec.cfg"
    exit 1
  fi
fi

#
# Test for correct usage
#
if test $# -ne 2; then
	echo "Usage: wrapexec /path/to/program_to_wrap <toolname>."
	echo "Example: wrapexec ./mytest ddd"
	echo "<toolname> can be one of:"
	tools=`grep "^\[.*" $conffile | sed -e 's/^\[//'  | sed 's/\]$//' `
	for t in $tools; do
		echo -e "       \t$t";
	done;
	exit 1;
fi

#
# Copy arguments
#
program=$1
shift
toolname=$1
shift

#
# Test whether the program has already been wrapped by comparing inodes
#
wrapexec_inode=`ls -iL $wrapexec_wrapper | cut -c1-8`
program_inode=`ls -iL $program | cut -c1-8`
if test $program_inode -eq $wrapexec_inode; then
	existing_toolname=`ls -1 $program.wrap_* | cut -d_ -f2`
	echo "wrapexec: error: program '$program' already wrapped by '$existing_toolname'"
	exit 1;
fi

#
# Wrap!
#
mv $program $program.wrap_$toolname
ln -s $wrapexec_wrapper $program

