V 10
1
LANG:1 8 (NoName)
PANEL,258 160 900 250 N "_3DFace" 3
"$barNr"
"$configDatapoint"
"$datapoint"
"main() {

   if ((dpGetElementName($datapoint)==\"\") && dpAccessable($configDatapoint)) {
     dpConnect(\"fillBar\",$configDatapoint+\".dpNames\");
  }
}

fillBar(string aDp1,dyn_string names) {
  string aUnit;
  // get the actual AP for this object
  int barNr = $barNr;
  if (dynlen(names) >= barNr) {
    aDp=names[barNr];
    //Only do the following if a DP is actually available
    if (aDp != \"\") {
 
       // get the unit for this AP, set txt_unit to invisible if No unit available
      aUnit=dpGetUnit(dpSubStr(aDp,DPSUB_SYS_DP_EL));
      if (aUnit == \"\" ) {
        setValue(\"txt_unit\",\"visible\",\"false\");
      }
      if (oldDp != \"\" && oldDp != aDp) {
         navPMLunloadPropertySet(oldDp);
         dpDisconnect(\"scaleBar\",oldDp,dpSubStr(oldDp,DPSUB_SYS_DP_EL)+\":_online.._bad\");
         stopThread(aThreadId);
      }
      if (oldDp != aDp) {
        navPMLloadPropertySet(aDp);
        dpConnect(\"scaleBar\",aDp,dpSubStr(aDp,DPSUB_SYS_DP_EL)+\":_online.._bad\");
        aThreadId=startThread(\"simTemp\");
      }
      oldDp=aDp;
      string aStr=dpSubStr(aDp,DPSUB_SYS_DP_EL);
      strreplace(aStr,$datapoint,\"\");
      string newStr=substr(aStr,1,strlen(aStr));
      setValue(\"txt_dp\",\"text\",newStr);
      setValue(\"txt_unit\",\"text\",aUnit);
      setValue(\"txt_dp\",\"visible\",true);
      setValue(\"theBar\",\"visible\",true);
      setValue(\"txt_unit\",\"visible\",true);
      setValue(\"actualVal\",\"visible\",true); 
    } else {
      setValue(\"txt_dp\",\"visible\",false);
      setValue(\"theBar\",\"visible\",false);
      setValue(\"txt_unit\",\"visible\",false);
      setValue(\"actualVal\",\"visible\",false);
    }
  } else {
    if (oldDp != \"\") {
       dpDisconnect(\"scaleBar\",oldDp,dpSubStr(oldDp,DPSUB_SYS_DP_EL)+\":_online.._bad\");
       if (aThreadId != -1) {
         stopThread(aThreadId);
         aThreadId=-1;
       }
       oldDp=\"\";
    }  
    setValue(\"txt_dp\",\"text\",\"No datapoint to show\");
    setValue(\"txt_unit\",\"text\",\"Unit\");
    setValue(\"actualVal\",\"text\",\" \");
    setValue(\"theBar\",\"color\",\"_3DFace\");
    setValue(\"txt_dp\",\"visible\",true);
    setValue(\"theBar\",\"visible\",true);
    setValue(\"txt_unit\",\"visible\",true);
    setValue(\"actualVal\",\"visible\",true);
  }
}

scaleBar(string aDp2,float aT,string aDp3, bool bad){
 anytype minVal;
 anytype maxVal;
 string minValS;
 string maxValS;
 float scaleFactor;
 float warnLevel;
 float alertLevel;
 float totalRange;
 float actWarnLevel;
 float actAlertLevel;
 
 if (bad) {

   setValue(\"theBar\",\"toolTipText\",\"Bar error, Value bad\");
   setValue(\"theBar\",\"scale\",0,1);
   setValue(\"actualVal\",\"text\",\"Bar error, max Value bad \" + aT);
 } else {
   dpGet(dpSubStr(aDp,DPSUB_SYS_DP_EL)+\":_pv_range.._min\",minVal);
   dpGet(dpSubStr(aDp,DPSUB_SYS_DP_EL)+\":_pv_range.._max\",maxVal);
   minValS=minVal;
   maxValS=maxVal;
   if (minValS == \"\" | maxValS == \"\" ) {

     setValue(\"theBar\",\"toolTipText\",\"Bar error, max and/or min range not set.\");
     setValue(\"theBar\",\"scale\",0,1);
     setValue(\"actualVal\",\"text\",\"Bar error, max and/or min range not set. \" + aT);
   } else {
     dpGet(dpSubStr(aDp,DPSUB_SYS_DP_EL)+\":_pv_range.._min\",minVal);
     dpGet(dpSubStr(aDp,DPSUB_SYS_DP_EL)+\":_pv_range.._max\",maxVal);
 
     totalRange= maxVal-minVal;
 
 
     dpGet($configDatapoint+\".warnLevel\",warnLevel);
     dpGet($configDatapoint+\".alertLevel\",alertLevel);
 
     actWarnLevel=totalRange/100*warnLevel;
     actAlertLevel=totalRange/100*alertLevel;
 
     //get the colors for the bar
     string aNormalColor;
     string aFirstLevelColor;
     string aSecondLevelColor;
     
     dpGet($configDatapoint+\".normalColor\",aNormalColor);
     dpGet($configDatapoint+\".firstLevelColor\",aFirstLevelColor);
     dpGet($configDatapoint+\".secondLevelColor\",aSecondLevelColor);
     
     if (aNormalColor == \"\") aNormalColor=\"Green\";
     if (aFirstLevelColor == \"\") aFirstLevelColor=aNormalColor;
     if (aSecondLevelColor == \"\") aSecondLevelColor=aFirstLevelColor;
     
     if (aT < actWarnLevel | (actWarnLevel==0 && actAlertLevel==0)) setValue(\"theBar\",\"color\",aNormalColor);
     if (aT >= actWarnLevel && aT <= actAlertLevel) setValue(\"theBar\",\"color\",aFirstLevelColor);
     if (aT >= actAlertLevel) setValue(\"theBar\",\"color\",aSecondLevelColor);

     if (aT < minVal) aT=minVal;
     if (aT > maxVal) aT=maxVal;
 
     scaleFactor=aT/maxVal;
 
 
     setValue(\"theBar\",\"toolTipText\",\"Range from \"+minValS+\" - \"+maxValS);
     setValue(\"theBar\",\"scale\",scaleFactor,1);
     setValue(\"actualVal\",\"text\",aT);
   }
 }
}
simTemp(){
 float temperature;
 int i=0;
 
 while(true) {
   if (dpExists(dpSubStr(aDp,DPSUB_SYS_DP_EL))) {
//      temperature=(rand()/408);
        temperature=(rand()/385);
        dpSet(dpSubStr(aDp,DPSUB_SYS_DP_EL),temperature);
   }
   delay(4);
 }
}

" 0
EE E E 1 -1 -1 0  30 90
"" 0 1
E"string aDp =\"\";
string oldDp =\"\";
int aThreadId=-1;" 0
 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
6 0
"theBar_border"
""
1 250 110 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 250 80 650 110
6 1
"theBar"
""
1 250 107 E E E 1 E 0 E N "_WindowText" E N "_3DFace" E E
 E E
2 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 250 83 644 107
6 4
"txt_unit_border"
""
1 670 110 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 670 80 720 110
6 9
"txt_dp_border"
""
1 10 110 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
10 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 10 80 250 110
2 10
"txt_dp"
""
1 14 85 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 11 Temperature
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 16 87 248 103
0 2 0 "s" 0 0 0 64 0 0  16 87
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 20 No datapoint to show
2 11
"txt_unit"
""
1 679 84 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 5 Units
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 681 86 704 102
0 2 0 "s" 0 0 0 192 0 0  681 86
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 4 Unit
2 12
"actualVal"
""
1 300 83 E E E 1 E 0 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 302 85 598 101
0 2 0 "s" 0 0 0 65 0 0  302 85
 1
1
LANG:1 105 -microsoft windows-Arial-bold-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,700,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 0 
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0