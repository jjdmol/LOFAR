diff -Naur log4cplus-1.0.2/HOWTOBUILD log4cplus-1.0.2-patch/HOWTOBUILD
--- log4cplus-1.0.2/HOWTOBUILD	1970-01-01 01:00:00.000000000 +0100
+++ log4cplus-1.0.2-patch/HOWTOBUILD	2006-01-05 08:54:28.000000000 +0100
@@ -0,0 +1,8 @@
+Make for gcc322
+./configure --prefix=/usr/local/log4cplus102P1/gcc322
+make install
+
+Make for gcc343
+export  PATH=/usr/local/gcc343/bin:$PATH
+./configure --prefix=/usr/local/log4cplus102P1/gcc343
+make install
diff -Naur log4cplus-1.0.2/include/log4cplus/global-init.h log4cplus-1.0.2-patch/include/log4cplus/global-init.h
--- log4cplus-1.0.2/include/log4cplus/global-init.h	1970-01-01 01:00:00.000000000 +0100
+++ log4cplus-1.0.2-patch/include/log4cplus/global-init.h	2006-01-03 18:37:19.000000000 +0100
@@ -0,0 +1,10 @@
+// Module:  Log4CPLUS
+// File:    global-init.h
+//
+class _static_log4cplus_initializer {
+public:
+	_static_log4cplus_initializer();
+	~_static_log4cplus_initializer();
+};
+static _static_log4cplus_initializer	l4cpInit;
+
diff -Naur log4cplus-1.0.2/src/global-init.cxx log4cplus-1.0.2-patch/src/global-init.cxx
--- log4cplus-1.0.2/src/global-init.cxx	2003-08-22 08:54:18.000000000 +0200
+++ log4cplus-1.0.2-patch/src/global-init.cxx	2006-01-03 18:36:51.000000000 +0100
@@ -33,6 +33,7 @@
 //
 
 #include <log4cplus/config.h>
+#include <log4cplus/global-init.h>
 #include <log4cplus/logger.h>
 #include <log4cplus/ndc.h>
 #include <log4cplus/helpers/loglog.h>
@@ -48,8 +49,9 @@
     void initializeLog4cplus() {
         static bool initialized = false;
         if(!initialized) {
-            log4cplus::helpers::LogLog::getLogLog();
             getNDC();
+			getLogLevelManager();
+            log4cplus::helpers::LogLog::getLogLog();
             Logger::getRoot();
             initializeFactoryRegistry();
             initialized = true;
@@ -58,19 +60,21 @@
 }
 
 
-#if !defined(_WIN32) || !defined(LOG4CPLUS_BUILD_DLL)
 namespace {
-
-    class _static_log4cplus_initializer {
-    public:
-        _static_log4cplus_initializer() {
-            log4cplus::initializeLog4cplus();
-        }
-    } initializer;
+	_static_log4cplus_initializer::_static_log4cplus_initializer() {
+		log4cplus::initializeLog4cplus();
+	}
+	_static_log4cplus_initializer::~_static_log4cplus_initializer() {
+
+		while (log4cplus::getNDC().pop() != "") {
+			;
+		}
+		log4cplus::getNDC().clear();
+	}
 }
 
 
-#else /* Built as part of a WIN32 DLL */ 
+#if defined(_WIN32) || defined(LOG4CPLUS_BUILD_DLL)
 
 BOOL WINAPI DllMain(HINSTANCE hinstDLL,  // handle to DLL module
                     DWORD fdwReason,     // reason for calling function
diff -Naur log4cplus-1.0.2/src/loggingserver.log_prop log4cplus-1.0.2-patch/src/loggingserver.log_prop
--- log4cplus-1.0.2/src/loggingserver.log_prop	1970-01-01 01:00:00.000000000 +0100
+++ log4cplus-1.0.2-patch/src/loggingserver.log_prop	2006-01-04 09:34:27.000000000 +0100
@@ -0,0 +1,11 @@
+# Configure the rootLogger
+log4cplus.rootLogger=DEBUG, STDOUT
+
+# Define the STDOUT appender
+log4cplus.appender.STDOUT=log4cplus::ConsoleAppender
+log4cplus.appender.STDOUT.layout=log4cplus::PatternLayout
+log4cplus.appender.STDOUT.layout.ConversionPattern=%-5p [%x]%c{3} - %m%n
+
+# Define foo at level TRACE4
+#log4cplus.logger.TRC.foo=TRACE4
+
diff -Naur log4cplus-1.0.2/src/Makefile.am log4cplus-1.0.2-patch/src/Makefile.am
--- log4cplus-1.0.2/src/Makefile.am	2003-08-28 07:58:44.000000000 +0200
+++ log4cplus-1.0.2-patch/src/Makefile.am	2006-01-03 14:11:32.000000000 +0100
@@ -17,6 +17,7 @@
 			 ../include/log4cplus/consoleappender.h \
 			 ../include/log4cplus/fileappender.h \
 			 ../include/log4cplus/fstreams.h \
+			 ../include/log4cplus/global-init.h \
 			 ../include/log4cplus/hierarchy.h \
 			 ../include/log4cplus/hierarchylocker.h \
 			 ../include/log4cplus/layout.h \
diff -Naur log4cplus-1.0.2/src/patternlayout.cxx log4cplus-1.0.2-patch/src/patternlayout.cxx
--- log4cplus-1.0.2/src/patternlayout.cxx	2003-09-28 06:30:59.000000000 +0200
+++ log4cplus-1.0.2-patch/src/patternlayout.cxx	2006-01-02 13:52:59.000000000 +0100
@@ -72,6 +72,7 @@
 
 #include <stdlib.h>
 #include <exception>
+#include <string.h>		// ASTRON: basename
 
 using namespace std;
 using namespace log4cplus;
@@ -343,7 +344,8 @@
     case NDC_CONVERTER:      return event.getNDC();
     case MESSAGE_CONVERTER:  return event.getMessage();
     case NEWLINE_CONVERTER:  return LOG4CPLUS_TEXT("\n");
-    case FILE_CONVERTER:     return event.getFile();
+	// ASTRON: use basename of sourcefile.
+    case FILE_CONVERTER:     return basename(event.getFile().c_str());
     case THREAD_CONVERTER:   return event.getThread(); 
 
     case LINE_CONVERTER:
@@ -359,9 +361,10 @@
     case FULL_LOCATION_CONVERTER:
         {
             if(event.getFile().length() > 0) {
-                return   event.getFile() 
-                       + LOG4CPLUS_TEXT(":") 
-                       + convertIntegerToString(event.getLine());
+				// ASTRON: use basename of sourcefile
+				return 	string(basename(event.getFile().c_str()))
+                        + LOG4CPLUS_TEXT(":") 
+                        + convertIntegerToString(event.getLine());
             }
             else {
                 return LOG4CPLUS_TEXT(":");
diff -Naur log4cplus-1.0.2/tests/socket_test/main.cxx log4cplus-1.0.2-patch/tests/socket_test/main.cxx
--- log4cplus-1.0.2/tests/socket_test/main.cxx	2003-05-22 23:26:14.000000000 +0200
+++ log4cplus-1.0.2-patch/tests/socket_test/main.cxx	2006-01-04 10:00:18.000000000 +0100
@@ -1,4 +1,6 @@
 
+#include <log4cplus/config.h>
+#include <log4cplus/configurator.h>
 #include <log4cplus/logger.h>
 #include <log4cplus/socketappender.h>
 #include <log4cplus/loglevel.h>
@@ -12,13 +14,23 @@
 int
 main(int argc, char **argv)
 {
+#if 0
     log4cplus::helpers::sleep(1);
     tstring serverName = (argc > 1 ? LOG4CPLUS_C_STR_TO_TSTRING(argv[1]) : tstring());
 //    tstring host = LOG4CPLUS_TEXT("192.168.2.10");
-    tstring host = LOG4CPLUS_TEXT("192.168.2.169");
-    SharedAppenderPtr append_1(new SocketAppender(host, 9998, serverName));
+    tstring host = LOG4CPLUS_TEXT("192.168.1.117");
+    SharedAppenderPtr append_1(new SocketAppender(host, 8989, serverName));
     append_1->setName( LOG4CPLUS_TEXT("First") );
     Logger::getRoot().addAppender(append_1);
+#endif
+
+    if(argc < 2) {
+        cout << "Usage: config_file" << endl;
+        return 1;
+    }
+    tstring configFile = LOG4CPLUS_C_STR_TO_TSTRING(argv[1]);
+    PropertyConfigurator config(configFile);
+    config.configure();
 
     Logger root = Logger::getRoot();
     Logger test = Logger::getInstance( LOG4CPLUS_TEXT("socket.test") );
diff -Naur log4cplus-1.0.2/tests/socket_test/socket_test.log_prop log4cplus-1.0.2-patch/tests/socket_test/socket_test.log_prop
--- log4cplus-1.0.2/tests/socket_test/socket_test.log_prop	1970-01-01 01:00:00.000000000 +0100
+++ log4cplus-1.0.2-patch/tests/socket_test/socket_test.log_prop	2006-01-04 09:34:11.000000000 +0100
@@ -0,0 +1,20 @@
+log4cplus.rootLogger=DEBUG, mysocket
+
+log4cplus.appender.mysocket=log4cplus::SocketAppender
+log4cplus.appender.mysocket.host=lofar17
+log4cplus.appender.mysocket.port=8989
+log4cplus.appender.mysocket.ServerName=lofar17
+
+
+
+# Configure the rootLogger
+log4cplus.rootLogger=DEBUG, STDOUT
+
+# Define the STDOUT appender
+log4cplus.appender.STDOUT=log4cplus::ConsoleAppender
+log4cplus.appender.STDOUT.layout=log4cplus::PatternLayout
+log4cplus.appender.STDOUT.layout.ConversionPattern=%-5p [%x]%c{3} - %m%n
+
+# Define foo at level TRACE4
+#log4cplus.logger.TRC.foo=TRACE4
+
