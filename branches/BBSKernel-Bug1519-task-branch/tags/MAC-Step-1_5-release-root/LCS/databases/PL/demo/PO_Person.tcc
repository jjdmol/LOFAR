//# This file was generated by genDBcode v2.8 on Tue Mar  9 16:39:41 CET 2004
//# with the command: genDBcode P Person.plmap.proto  
//# from the directory: /home/loose/LOFAR/LCS/databases/PL/demo
//#
//# EDITING THIS FILE MANUALLY IS AT YOUR OWN RISK
//# IT MIGHT BE OVERWRITTEN BY THE NEXT MAKE OF YOUR PROJECT
//#
#include "PO_Person.h"
#include <PL/TPersistentObject.h>

namespace LOFAR {
  namespace PL {

    // bindCols() 'binds' the database columns represented by a cols
    // to the members of the DBRep< Person > class.
    void DBRep< Person >::bindCols(dtl::BoundIOs& cols) {
      cols["NAME"]  == name;
      cols["ADDRESS"]  == address;
      cols["AGE"]  == age;
      cols["GENDER"]  == gender;
    }


    // toDBRep copies the fields of the Person class to the
    // DBRep< Person > structure
    void TPersistentObject< Person >::toDBRep(DBRep< Person >& dest) const
    {
      dest.name  = data().itsName;
      dest.address  = data().itsAddress;
      dest.age  = data().itsAge;
      dest.gender  = data().itsGender;
    }


    // fromDBRep copies the fields of the DBRep< Person > structure
    // to the Person class.
    void TPersistentObject< Person >::fromDBRep(const DBRep< Person >& src)
    {
      data().itsName  = src.name;
      data().itsAddress  = src.address;
      data().itsAge  = src.age;
      data().itsGender  = src.gender;
    }


    // Initialize the internals of TPersistentObject< Person >
    void TPersistentObject< Person >::init()
    {
      // set the correct database table name
      tableName("Person");
    }


    // Initialize the attribute map for TPersistenObject< Person >
    template<>
    void TPersistentObject< Person >::initAttribMap()
    {
      theirAttribMap["name"]  = "NAME";
      theirAttribMap["address"]  = "ADDRESS";
      theirAttribMap["age"]  = "AGE";
      theirAttribMap["gender"]  = "GENDER";
    }

  } // close namespace PL
}  // close namespace LOFAR

