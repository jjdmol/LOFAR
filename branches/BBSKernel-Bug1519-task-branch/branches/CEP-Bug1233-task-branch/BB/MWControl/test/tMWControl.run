#!/bin/sh

# Create a ClusterDesc file.
lfrhost=`uname -n`
cat > tMWControl_tmp.cdesc <<EOF
ClusterName = cl
NNodes = 2
Node0.NodeName = $lfrhost
Node0.NodeFileSys = [node1:/usr]
Node1.NodeName = $lfrhost
Node1.NodeFileSys = [node1:/usr]
EOF

# First run tMWControl without MPI.
# It makes no sense to continue if this fails.
\rm -f tMWControl_tmp.cout*
echo "Doing single process run ..."
./tMWControl
STATUS=$?
if [ $STATUS != 0 ]; then
  exit $STATUS
fi
cat tMWControl_tmp.cout0

# Run tMWControl using mpirun on 3 nodes and 4 nodes.
# If MPI is not available, assume it is ok.
statdiff3=0
statdiff4=0
if [ -f $MPIBIN/mpirun ]; then
  echo "localhost" > tMWControl_tmp.machinefile
  \rm -f tMWControl_tmp.cout*
  echo ""
  echo "Doing MPI run on 3 nodes ..."
  $MPIBIN/mpirun -np 3 -machinefile tMWControl_tmp.machinefile tMWControl
  STATUS=$?
  cat tMWControl_tmp.cout*
  if [ $STATUS != 0 ]; then
    exit $STATUS
  fi
  \rm -f tMWControl_tmp.cout*
  echo ""
  echo "Doing MPI run on 4 nodes ..."
  $MPIBIN/mpirun -np 4 -machinefile tMWControl_tmp.machinefile tMWControl
  STATUS=$?
  cat tMWControl_tmp.cout*
  if [ $STATUS != 0 ]; then
    exit $STATUS
  fi
else
  # No MPI configured. Print the standard files to achieve that the
  # output is correct.
  echo ">>>"
  echo "MPI is not available"
  echo "<<<"
  cat tMWControl.in_mpi_out3 tMWControl.in_mpi_out4
fi

# Run tMWControl on 3 nodes with a socket connection.
echo ""
echo "Doing socket run on 3 nodes ..."
\rm -f tMWControl_tmp.cout*
./tMWControl socket localhost 3851 3 1 &    # prediffer 1
./tMWControl socket localhost 3851 3 2 &    # prediffer 2
./tMWControl socket localhost 3851 3 0      # master + solver
STATUS=$?
# Wait a second to be sure the prediffers ended as well.
sleep 1
cat tMWControl_tmp.cout0
# You cannot tell if the 1st or 2nd prediffer took data part 1. So test.
if `grep xyz1 tMWControl_tmp.cout1 > /dev/null 2>&1`; then
  cat tMWControl_tmp.cout1
  cat tMWControl_tmp.cout2
else
  cat tMWControl_tmp.cout2
  cat tMWControl_tmp.cout1
fi
if [ $STATUS != 0 ]; then
  exit $STATUS
fi

# Run tMWControl on 4 nodes with a socket connection.
echo ""
echo "Doing socket run on 4 nodes ..."
\rm -f tMWControl_tmp.cout*
./tMWControl socket localhost 3851 4 1 &    # solver
./tMWControl socket localhost 3851 4 2 &    # prediffer 1
./tMWControl socket localhost 3851 4 3 &    # prediffer 2
./tMWControl socket localhost 3851 4 0      # master
STATUS=$?
# Wait a second to be sure the prediffers ended as well.
sleep 1
cat tMWControl_tmp.cout1
# You cannot tell if the 1st or 2nd prediffer took data part 1. So test.
if `grep xyz1 tMWControl_tmp.cout2 > /dev/null 2>&1`; then
  cat tMWControl_tmp.cout2
  cat tMWControl_tmp.cout3
else
  cat tMWControl_tmp.cout3
  cat tMWControl_tmp.cout2
fi
if [ $STATUS != 0 ]; then
  exit $STATUS
fi

exit 0
