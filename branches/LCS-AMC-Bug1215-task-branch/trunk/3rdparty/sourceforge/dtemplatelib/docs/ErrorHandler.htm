<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title></title>
</head>

<body>



<head>
<style>
CODE {COLOR: #990000;}
.code{COLOR: #990000}
.codeComment{COLOR: #008000}
.codeHighlight{BACKGROUND-COLOR: #FFFF00}
.codeFileName{FONT-WEIGHT: bold;}
</style>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Author" content="Mike Gradman">
<meta name="KeyWords"
content="DTL, Oracle, ODBC, database API, C++, Template Library">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<!--
  -- Copyright 2001
  -- Michael Gradman & Corwin Joy
  --
  -- Permission to use, copy, modify, distribute and sell this software
  -- and its documentation for any purpose is hereby granted without fee,
  -- provided that the above copyright notice appears in all copies and
  -- that both that copyright notice and this permission notice appear
  -- in supporting documentation.  Corwin Joy & Michael Gradman make no
  -- representations about the suitability of this software for any
  -- purpose.  It is provided "as is" without express or implied warranty.
  --
  --
  -- Copyright (c) 1996-1999
  -- Silicon Graphics Computer Systems, Inc.
  --
  -- Permission to use, copy, modify, distribute and sell this software
  -- and its documentation for any purpose is hereby granted without fee,
  -- provided that the above copyright notice appears in all copies and
  -- that both that copyright notice and this permission notice appear
  -- in supporting documentation.  Silicon Graphics makes no
  -- representations about the suitability of this software for any
  -- purpose.  It is provided "as is" without express or implied warranty.
  --
  -- Copyright (c) 1994
  -- Hewlett-Packard Company
  --
  -- Permission to use, copy, modify, distribute and sell this software
  -- and its documentation for any purpose is hereby granted without fee,
  -- provided that the above copyright notice appears in all copies and
  -- that both that copyright notice and this permission notice appear
  -- in supporting documentation.  Hewlett-Packard Company makes no
  -- representations about the suitability of this software for any
  -- purpose.  It is provided "as is" without express or implied warranty.
  --
  -->
<!-- Generated by htmldoc -->
<title>ErrorHandler</title>
</head>

<body bgcolor="#FFFFFF" text="#000000" link="#0000EE"
vlink="#551A8B" alink="#FF0000">

<p><font size="6" face="Bookman Old Style"><em><strong><u>dtl</u></strong></em></font></p>

<p><img src="stat.gif" width="6" height="6"> <!--end header--> <br>
</p>
<h1>ErrorHandler</h1>


















<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td><img src="functors.gif" width="194" height="38"></td>
        <td align="right"><img src="concept.gif" width="194"
        height="39"></td>
    </tr>
    <tr>
        <td valign="top"><b>Category</b>: functors</td>
        <td align="right" valign="top"><b>Component type</b>:
        concept</td>
    </tr>
</table>
<h3>Description</h3>

<p><font size="2" face="Courier New">ErrorHandler</font> is a
class that is called whenever errors are thrown or warnings are
encountered inside DTL. This class is primarily useful if the
user wants to trap any errors in DTL globally and/or do things
like create a log of all internal errors thrown. (If you want to
trap errors when reading or writing rows from a table see the <a
href="IOHandler.htm">IOHandler</a> class). To use this class
define an error handling function (or a functor if you want to
log information in a class) with the signature </p>

<pre><code>dtl_ios_base::MeansOfRecovery myHandler(const RootException *, ErrorSeverity::SeverityCode severity);
</code></pre>

<p>This function should return <font size="2" face="Courier New">dtl_ios_base::THROW_EXCEPTION</font>
to have the exception thrown and <font size="2"
face="Courier New">dtl_ios_base::SUPPRESS_ERROR</font> to
suppress the error. (Be careful about suppressing errors, DTL
uses internal throws to communicate errors between routines, if
you suppress an error you may prevent a routine from operating
correctly.) The global error handler may be set by calling </p>

<pre><code>dtl::GetErrorHandler().SetHandler(myHandler);
</code></pre>

<p>Where myHandler can be either a function pointer or a functor
class. See the file RootException.h for more details on this
class. </p>

<h3>Usage</h3>

<p>1. Create an error handling function which accepts a pointer
to RootException and a severity code which indicates a warning
(ErrorHandler::ERR_WARNING) or a fatal error
(ErrorHandler::ERR_FAILURE). A typical example with a functor is
(see example/GlobalHandler.cpp)</p>

<pre><code>
dtl_ios_base::MeansOfRecovery 
		GlobalHandlerExample::operator()(const RootException *pEx, ErrorSeverity::SeverityCode severity)
{
	switch (severity)
	{
	    case ErrorSeverity::ERR_WARNING : 
			cout &lt;&lt; &quot;Warning encountered!  Handle your warnings here!&quot; &lt;&lt; endl;
			cout &lt;&lt; &quot;Suppressing error!&quot; &lt;&lt; endl;
			return dtl_ios_base::SUPPRESS_ERROR;
		
		case ErrorSeverity::ERR_FAILURE :
			cout &lt;&lt; &quot;Error encountered!  Handle your exceptions here!&quot; &lt;&lt; endl;
			cout &lt;&lt; &quot;Rethrowing exception!&quot; &lt;&lt; endl;
			return dtl_ios_base::THROW_EXCEPTION;
	}

	cout &lt;&lt; &quot;Shouldn't get here!&quot; &lt;&lt; endl;
	return dtl_ios_base::THROW_EXCEPTION; // suppress return value warning for MSVC
}

</pre></code>

<p>2. In your application code, set the global error handler to
be the error handler you just wrote: </p>

<pre><code>
GetErrorHandler().SetHandler(GlobalHandlerExample()); 
</code></pre>


<h3>See also</h3>

<p><a href="IOHandler.htm"><font size="2"
face="Courier New">IOHandler</font></a><font size="2"
face="Courier New">
<!--start footer--></font></a></p>

<p>
<hr>

<p align="left"><a href="index.htm"><img src="dtl_home.gif" alt="[DTL Home]"
width="54" height="54"></a> <br>
</p>

<p>Copyright © 2002, Michael Gradman and Corwin Joy. <script
language="JavaScript"><!-- hide from old browsers
 var modDate = new Date(document.lastModified)
 document.write("<i> Last Updated:</i> " + (modDate.getMonth()+1) + "/" + 
                modDate.getDate() + "/" + modDate.getYear()+".");
 //-->
 </script> </p>

<p><i>Permission to use, copy, modify, distribute and sell this software and its 
  documentation for any purpose is hereby granted without fee, provided that the 
  above copyright notice appears in all copies and that both that copyright notice 
  and this permission notice appear in supporting documentation. Corwin Joy and 
  Michael Gradman make no representations about the suitability of this software 
  for any purpose. It is provided &quot;as is&quot; without express or implied 
  warranty. </i></p>
<A href="http://sourceforge.net"> <IMG src="http://sourceforge.net/sflogo.php?group_id=17082&amp;type=5" width="210" height="62" border="0" alt="SourceForge Logo"></A> 
<p align="right">This site written using the ORB. <a href="http://www.cinenet.net/~cberry/orbinfo.html"><img src="http://www.cinenet.net/~cberry/orb_icon.gif" alt="[The ORB]"
width="54" height="54"></a></p>
</body> </p>
</body>
</html>
