#!/bin/sh

# This test script runs NDPPP with the polling reader while the MS is
# slowly being filled by makems.

# Find environment (taql and possibly srcdir)
source findenv.run_script

# Make sure no temporary files exist.
rm -rf tMSPollingReader_tmp*

# Create a parset for makems to run with a 0.5 sec wait period between
# writing each time slot, so the polling reader should catch up each time.
cat > tMSPollingReader_tmp-makems.parset <<EOF
StartFreq=1170e6
StepFreq=100000
StartTime=2000/08/03/13:22:30
StepTime=10
RightAscension=16:38:28.205274248
Declination=62.34.44.313606568
NBands=1
NFrequencies=64
NTimes=14
NParts=0
Dirs=["node1:abc"]
WriteAutoCorr=T
WaitTime=0.5
MSName=tMSPollingReader_tmp.ms
AntennaTableName=~/data/WSRT_ANTENNA
EOF

# Create a parset for NDPPP to copy input to output.
cat > tMSPollingReader_tmp-ndppp.parset <<EOF
msin=tMSPollingReader_tmp.ms
msin.concurrent=T
msin.maxwaittime=2
msout=tMSPollingReader_tmp.msout
msout.overwrite=T
steps=[]
showprogress=F
EOF

# Start makems in the background
../../../MS/src/makems tMSPollingReader_tmp-makems.parset &
# Start NDPPP
../src/NDPPP tMSPollingReader_tmp-ndppp.parset || exit 1

# Use taql to check if the input and output match.
echo
$taqlexe 'select from tMSPollingReader_tmp.ms t0, tMSPollingReader_tmp.msout t1 where any(t0.DATA != t1.DATA) or any(t0.FLAG != t1.FLAG) or t0.ANTENNA1 != t1.ANTENNA1  or t0.ANTENNA2 != t1.ANTENNA2  or t0.TIME != t1.TIME' > tMSPollingReader_tmp.log
status=$?
str=`cat tMSPollingReader_tmp.log`
str1=`echo $str | sed -e 's/ 0 rows//'`
if [ $status = 0  -a  '$str' = '$str1' ]
then
    echo $str
    exit 1
fi
echo "OK; input and output MS are the same"
exit 0
