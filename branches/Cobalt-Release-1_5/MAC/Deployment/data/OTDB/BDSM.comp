# -- BDSM --
#
# Component description of BDSM settings
#
# $Id$
#
# name          name of the node
# version       version of this node specification
# quality       stable | test | development
# constraint    python script to check multiparameter constrains
#               may return OK, NotOK, Unknown
# description   What this module does.
#
# Note 1: to seperate the parameterlines from the Node lines each node line
#         begins with the label 'Node'.
# Note 2: To define dependancies between nodes the label 'Uses' is used.
#         A + sign may be added to the versionnr to indicate that the given
#         versionnr is the minimal version the module should have. (NOT YET IMPLEMENTED)
#

#########################################################################################################
#     name              vers   qual  constr.            descr.
#--------------------------------------------------------------------------------------------------------
node  BDSM         4.0.0  development  'node constraint'  "BDSM"

#
# name              name of the parameter
# direction         I: input only; O: changes will be logged during runtime; IO: both
# type              parametertype: should exist in param_type table of OTDB (= ParamTypeConv)
# unit              name of unit of parameter (should exist in unit table (= UnitConv)
# pruninglevel      when parameter values are thrown away from the database. (NOT YET USED)
# validationMoment  moment the parameter values is validated (NOT YET USED)
# value             value(range) of the parameter.
# constraint        script to run to check its value
# description       what the parameter manages.
#--------------------------------------------------------------------------------------------------------
#   name             dir. type   unit   prun. vm   value     		constr.  descr.
#--------------------------------------------------------------------------------------------------------
par advanced_opts    I    pbool  -      10    100    'true|false;false'    -       ''
par atrous_do        I    pbool  -      10    100    'true|false;false'    -       ''
par flagging_opts    I    pbool  -      10    100    'true|false;false'    -       ''
par interactive      I    pbool  -      10    100    'true|false;false'    -       ''
par mean_map         I    text   -      10    100    "default"       	   -       ''
par multichan_opts   I    pbool  -      10    100    'true|false;false'    -       ''
par output_opts      I    pbool  -      10    100    'true|false;false'    -       ''
par polarisation_do  I    pbool  -      10    100    'true|false;false'    -       ''
par psf_vary_do      I    pbool  -      10    100    'true|false;false'    -       ''
par rms_box          I    text   -      10    100    '(15.0,9.0)'      	   -       ''
par rms_map          I    pbool  -      10    100    'true|false;true '    -       ''
par shapelet_do      I    pbool  -      10    100    'true|false;false'    -       ''
par spectralindex_do I    pbool  -      10    100    'true|false;false'    -       ''
par thresh           I    ptext  -      10    100    'hard|none;hard'      -       ''
par thresh_isl       I    dbl    -      10    100     3.0	               -       ''
par thresh_pix       I    dbl    -      10    100     5.0	               -       ''
par quiet            I    pbool  -      10    100    'true|false;false'    -       ''
par clobber          I    pbool  -      10    100    'true|false;true'     -       ''
