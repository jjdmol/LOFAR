<%
import lofar.shm

def parse_selection(argv):
    try:
        id_list = [int(id) for id in argv["selection"].split(",")]
    except KeyError, ValueError:
        return None
    else:
        return id_list


def main(argv):
    db = lofar.shm.db.SysHealthDatabase()
    try:
        db.open()
    except lofar.shm.DatabaseError:
        raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

    try:
        jobctrl = lofar.shm.job_control.JobControl(db)

        # update the job queue
        try:
            jobctrl.update_queue()
        except lofar.shm.DatabaseError:
            pass

        try:
            action = argv["action"]
        except KeyError:
            raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST            

        if action == "start":
            id_list = parse_selection(argv)

            if id_list is None:
                raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST

            try:
                for id in id_list:
                    jobctrl.start(id)
            except lofar.shm.Error:
                raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

        elif action == "stop":
            id_list = parse_selection(argv)

            if id_list is None:
                raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST

            try:
                for id in id_list:
                    jobctrl.stop(id)
            except lofar.shm.Error:
                raise apache.SERVER_RETURN, apache.HTTP_INTERNAL_SERVER_ERROR

        else:
            raise apache.SERVER_RETURN, apache.HTTP_BAD_REQUEST

    finally:
        db.close()

# call main
main(form)
%>
