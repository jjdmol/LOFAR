V 10
1
LANG:1 0 
PANEL,-1 -1 919 94 N "_3DFace" 1
"$locusNr"
"main()
{
  baseDP = g_currentDatapoint;
  
  string database=dpSubStr(baseDP,DPSUB_SYS);

  dyn_string dpAr= strsplit(dpSubStr(baseDP,DPSUB_DP),\"_\");

  for (int i = 1; i <= dynlen(dpAr);i++ ) {
    if (strpos(dpAr[i],\"OSRack\") > -1) {
      rackNr = substr(dpAr[i],6,strlen(dpAr[i]));
    }
  }
  int nr = $locusNr;
  // calculate locusNodeNr
  // all racks have 12 nodes except rack 5, this one has 4 nodes.
  // nodes start counting at 001 and there are 100 total
  int offset=1;
  if (rackNr > 4) offset=-7;
  
  locusNodeNr=rackNr*12+nr+offset;
  string l=\"Locus00\"+locusNodeNr;
  if (locusNodeNr >9 && locusNodeNr < 100) {
     l=\"Locus0\"+locusNodeNr;
  } else if (locusNodeNr > 99) {
     l=\"Locus\"+locusNodeNr;
  }     
  setValue(\"nodename\",\"text\",l);
      
  // pass baseDP to selfstate Object to work with
  setValue(\"selfState.light\",\"toolTipText\",baseDP); 
   
  // connect for selfUpdates
  showSelfState(baseDP);	
}

" 0
 E "main()
{
  click();
}" 0
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0
 1 -1 -1 0  0 0
""0  1
E "#uses \"navPanel.ctl\"
string baseDP;
int locusNodeNr = -1;
int rackNr = -1;
bool   bDoubleClicked  = false;


// routine for single mouse click
void click() {
  // set delay in case double click was meant
  delay(0, 100); 
  if (!bDoubleClicked) {
    navPanel_setEvent(\"LocusNode\"+locusNodeNr,\"EventClick\");
  }
}

// routine for double mouse click
void dblClick() {
  // indicate this is a doubleClick
  bDoubleClicked = true;   
  
  if (dpExists(baseDP) ) {
    LOG_DEBUG(\"CEP_LocusNode_small.pnl:DoubleClick|Setting currentDatapoint from : \"+g_currentDatapoint+\" to \"+baseDP);
    g_currentDatapoint=baseDP;
    navPanel_setEvent(\"LocusNode\"+locusNodeNr,\"ChangePanel\");  
  }
  
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;  
}

// routine for right mouse click
void rClick() {
  navPanel_setEvent(\"LocusNode\"+locusNodeNr,\"EventRightClick\");
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 1
"locusNodeHighlight"
""
1 30 120 E E E 1 E 0 E N "_Transparent" E N "Lofar_highLight" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

2 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  dpConnect( \"LocusNodeCallback\",true,DPNAME_NAVIGATOR + g_navigatorID +\".objectTrigger\" );
}

void LocusNodeCallback(string dp1, bool aTrig) {
  
  LOG_DEBUG(\"CEP_LocusNode_small.pnl:LocusNodeCallback| ObjectTrigger Callback on: \"+dp1+\" trigger: \"+aTrig);
  LOG_DEBUG(\"CEP_LocusNode_small.pnl:LocusNodeCallback|Found highlight : \" + highlight + \" Looking for: LocusNode\" + locusNodeNr);
  bool bHighlight=false;
  if (dynContains(highlight,\"LocusNode\"+locusNodeNr)) {
    bHighlight=true;
  }
  LOG_DEBUG(\"CEP_LocusNode_small.pnl:LocusNodeCallback|Highlight request: \"+bHighlight);
  locusNodeHighlight.visible = bHighlight;  
}" 0
 "main()
{
  click();
}" 0
 0 1 1 2 1 E 12.62100383631714 -4.811121760860558e-020 -1.094697582262634e-017 0.1109369147875619 -69.31505754475711 9.445315426062191 1 E 15 5 37 287
6 0
"ionode"
""
1 3 2 E E E 1 E 1 E N "_3DText" E N {232,229,212} E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E "main()
{
  click();
}" 0
 0 1 1 0 1 E 1 0 1 0 12 1 E 123 0 394 25
1 2 0 "" 1
0
2 3
"nodename"
""
1 149 15 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 149 15 178 29
0 2 2 "0s" 0 0 0 192 0 0  149 15 1
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-*-80-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 5 Locus
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
3 0 "selfState"
"objects\\lofar_self_state.pnl" 7 8 T 3 1 0 1 116 4
0
0