LCS/Transport: Version 2.3, date: 2006/02/01
============================================

The release only contains minor changes. The most notable change is probably
due to the split-off of LCS/Blob. Furthermore, some bugs were fixed in the
TH_Ethernet class.


The following BugIDs have been resolved
---------------------------------------

# 514 : TH_Ethernet: add an interface for setting the kernel level socket
        buffers.
        The size of the socketbuffers can be given to the constructor. They
        will be set during init. Also added TH_Null. This is useful if you do
        not want a connection but you do need an TH-object.

# 524 : TH_Ethernet: does not work properly in a CEPFrame application
        Splitted init routines, changed remote and own mac to src and dest mac

# 537 : Alignment of data in DataHolder
        Added alignment argument to function addField.



LCS/Transport: Version 2.2, date: 2005/11/16
============================================

In preparation of making package distributable as rpm package, all header
files that must be installed have been moved from the `src' directory to the
`inclucde/<package>' directory (ref. BugID #396).

Furthermore, some changes to the build environment require the use of
autoconf_share 2.4 (or later). 


The following BugIDs have been resolved
---------------------------------------

# 349 : ExampleSocket should be XFAIL for gnu_fakebgl
        BG/L does not support hostname lookup, which is why ExampleSocket
        fails for the build variant gnu_fakebgl.

# 405 : Cannot re-init a TH_Socket after shutdown
        When a client tries to reconnect after a server failure, it receives
        an "Transport endpoint is already connected" error. This problem
        arises because TH_Socket only calls shutdown() on the Socket object;
        it does not destroy it. So, when you try to re-connect, the kernel
        will pull the breaks, because you're trying to use a file descriptor
        that's already in use.
        Solution: after peer closed connection, let TH_Socket *always* destroy
        the data socket when it "owns" the socket.



LCS/Transport: Version 2.1, date: 2005/09/05
============================================

This version of the LCS/Transport library incorporates some bug-fixes to source
code and tests. The CyclicBuffer and Lock classes have been moved to CEP/CEPFrame.

The following Bugs have been fixed
----------------------------------

BugID 147 :     Transport  : Missing null-pointer check in DataHolder::putExtra()


BugID 238 :     Transport  : ExampleEthernet fails to compile for gnu_fakebgl


BugID 272 :     Transport  : TH_Socket opening socket in constructor

       Added argument to constructor that determines if the socket is made
        in the constructor. MPI-CEPFrame applications can use this argument
        to postpone the creation of the socket until TH_Socket::init() is
        called.

LCS/Transport: Version 2.0, date: 2005/06/17
============================================

This is the second major release of the LCS/Transport library. The interface
has undergone some major changes. See Enhancement Request ER-231 for details.
Connections between two DataHolder objects are now made using a Connection
object. Hence, DataHolders and TransportHolder can now be used independently.

The build process has changed as well. The Transport library should now be
built against an installed version of the Common library. (Ref. ER-270 and
ER-273).

There has been a significant change in TH_ShMem. It no longer needs MPI to
work, instead a helper TransportHolder of your choice is used once to set up 
the shared memory communication. This helper TransportHolder must be set 
during construction.

The following Enhancement Requests have been implemented
--------------------------------------------------------

ER 231 : Transport             : Change DH/Transport/TH relationship 

         Change the transport library in such a way DataHolders and
         TransportHolders can be used independently. Plus remove all unused
         functionality from the interfaces of all classes.

ER 270 : Build environment     : Modify build process to use installed
                                 packages

         The current build process uses (locally) built packages and does some
         trickery to derive package dependencies. Although this approach works
         in practice, it causes unwanted build dependencies between
         packages. Furthermore, the current design does not allow running a
         'make distcheck', which is a prerequisite for building a package
         distribution (e.g. tarball or rpm).

ER 273 : Build environment     : Change from lofar_PACKAGE to lofar_INTERNAL

         Instead of lofar_PACKAGE, lofar_INTERNAL should be used in the
         configure.in files. This is in preparation of making distributable
         packages.


The following Problem Reports have been fixed
---------------------------------------------

PR 100 : LOFAR SW development  : Neither config.h nor lofar_config.h should
                                 be included in header files

         Inclusion of either config.h or lofar_config.h in a distributed
         header file is problematic, because the config files themselves
         cannot be distributed; they contain system specific definitions. It
         is therefore unwise to include either of these files in a header
         file.

         Note: This Problem Report is closely related to Enhancement Request
               ER 229.

PR 154 : Transport             : Connection.read may not be repeated 

         In branch ER231_development a Connection class is introduced. When
         working with NonBlocking TH's the read() function may not be called
         repeatedly Therefor you can not use the function as a poll mechanism
         which is often used in servers.  The read() call must be implemented
         like the recvNonBocking() function in the TH_Socket of that branch.

PR 159 : Transport             : adjustment for BlueGene 

         #ifndef HAVE_BGL added for compiling on BlueGene

PR 163 : Transport             : Corba stuff is antiquated: remove 

         The Corba stuff is very out-of-date. It will most certainly not build
         anymore. Hence the code should be moved to the CVS attic.
