Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 33245)
+++ CMakeLists.txt	(working copy)
@@ -731,6 +731,7 @@
 else()
   casa_find( WCSLIB
     VERSION 4.3
+    PREFIX_HINTS ${WCSLIB_ROOT_DIR}
     INCLUDES wcslib/wcsconfig.h
     LIBS wcs
     # WCSLIB does "#define WCSLIB_VERSION 4.3.4" without quotes,
@@ -801,7 +802,7 @@
 endif()
 
 casa_find( CASACORE
-           VERSION 2.0.2
+           VERSION 2.0.0
            PREFIX_HINTS ${CASACORE_ROOT_DIR} ${Boost_INCLUDE_DIR}
            INCLUDES casa/aips.h
                     casa/version.h
@@ -1073,14 +1074,14 @@
   #set( LIBSAKURA_ROOT_DIR "$ENV{HOME}/workspace/libsakura/build/installed" )
   set( LIBSAKURA_ROOT_DIR ${casa_packages} )
 endif()
-casa_find( LIBSAKURA
-  VERSION 0.1
-  INCLUDES libsakura/sakura.h libsakura/config.h
-  LIBS sakura
-  PREFIX_HINTS ${LIBSAKURA_ROOT_DIR} ${LIBSAKURA_ROOT_DIR}/lib/libsakura/default
-  CPP_VERSION "LIBSAKURA_VERSION_MAJOR << '.' << LIBSAKURA_VERSION_MINOR"
-  NO_LINK    # The library may depend on newer gcc. Skip generating executable.
-)
+#casa_find( LIBSAKURA
+#  VERSION 0.1
+#  INCLUDES libsakura/sakura.h libsakura/config.h
+#  LIBS sakura
+#  PREFIX_HINTS ${LIBSAKURA_ROOT_DIR} ${LIBSAKURA_ROOT_DIR}/lib/libsakura/default
+#  CPP_VERSION "LIBSAKURA_VERSION_MAJOR << '.' << LIBSAKURA_VERSION_MINOR"
+#  NO_LINK    # The library may depend on newer gcc. Skip generating executable.
+#)
 
 casa_config_end()
 
@@ -1121,8 +1122,8 @@
 casa_add_module( dish CASACORE Boost)
 casa_add_module( nrao CASACORE Boost)
 casa_add_module( miriad CASACORE Boost components)
-casa_add_module( casa_sakura CASACORE LIBSAKURA)
-casa_add_module( singledish CASACORE casa_sakura msvis mstransform)
+#casa_add_module( casa_sakura CASACORE LIBSAKURA)
+#casa_add_module( singledish CASACORE casa_sakura msvis mstransform)
 casa_add_module( bnmin1 Boost GSL GSLCBLAS CASACORE )
 casa_add_module( air_casawvr CASACORE bnmin1 Boost synthesis WCSLIB CFITSIO LAPACK )
 
Index: synthesis/CMakeLists.txt
===================================================================
--- synthesis/CMakeLists.txt	(revision 33245)
+++ synthesis/CMakeLists.txt	(working copy)
@@ -596,6 +596,7 @@
 	TransformMachines/WTerm.h
 	TransformMachines/FTMachine.h
 	TransformMachines/GridFT.h
+	TransformMachines/SetJyGridFT.h
 	TransformMachines/HetArrayConvFunc.h
 	TransformMachines/MosaicFT.h
 	TransformMachines/MultiTermFT.h
@@ -652,6 +653,7 @@
 	Utilities/AppRC.h
 	Utilities/FixVis.h
 	Utilities/ThreadCoordinator.h
+	Utilities/SigHandler.h
 	DESTINATION include/casacode/synthesis/Utilities
 	)
 casa_add_executable( synthesis casasplit apps/casasplit/casasplit.cc )
Index: synthesis/MeasurementEquations/Imager.h
===================================================================
--- synthesis/MeasurementEquations/Imager.h	(revision 33245)
+++ synthesis/MeasurementEquations/Imager.h	(working copy)
@@ -762,7 +762,7 @@
 
   // Create the FTMachines when necessary or when the control parameters
   // have changed. 
-  Bool createFTMachine();
+  virtual Bool createFTMachine();
 
   void openSubTable (const Table & otherTable, Table & table, const TableLock & tableLock);
 
Index: synthesis/TransformMachines/VisModelData.cc
===================================================================
--- synthesis/TransformMachines/VisModelData.cc	(revision 33245)
+++ synthesis/TransformMachines/VisModelData.cc	(working copy)
@@ -207,14 +207,14 @@
       else{
 	///remove keys that point to nowehere
 	////cerr << "The key " << elkey << endl;
-	if(newTab.source().rwKeywordSet().isDefined(elkey))
-	  newTab.source().rwKeywordSet().removeField(elkey);
-	if(newTab.rwKeywordSet().isDefined(elkey))
-	  newTab.rwKeywordSet().removeField(elkey);
-	if(newTab.source().rwKeywordSet().isDefined("definedmodel_field_"+String::toString(fields[k])))
-	  newTab.source().rwKeywordSet().removeField("definedmodel_field_"+String::toString(fields[k]));
-	if(newTab.rwKeywordSet().isDefined("definedmodel_field_"+String::toString(fields[k])))
-	   newTab.rwKeywordSet().removeField("definedmodel_field_"+String::toString(fields[k]));
+//	if(newTab.source().rwKeywordSet().isDefined(elkey))
+//	  newTab.source().rwKeywordSet().removeField(elkey);
+//	if(newTab.rwKeywordSet().isDefined(elkey))
+//	  newTab.rwKeywordSet().removeField(elkey);
+//	if(newTab.source().rwKeywordSet().isDefined("definedmodel_field_"+String::toString(fields[k])))
+//	  newTab.source().rwKeywordSet().removeField("definedmodel_field_"+String::toString(fields[k]));
+//	if(newTab.rwKeywordSet().isDefined("definedmodel_field_"+String::toString(fields[k])))
+//	   newTab.rwKeywordSet().removeField("definedmodel_field_"+String::toString(fields[k]));
       }
   }
   ////Cleaning out orphaned image disk models
@@ -223,12 +223,12 @@
   possibleFT(0)=srctable+"/FT_MODEL*";
   possibleFT(1)=theParts[0]+"/FT_MODEL*";
   
-  Vector<String> ftmods=Directory::shellExpand(possibleFT);
-  for (uInt kk=0; kk < ftmods.nelements(); ++kk){
-    if(Table::canDeleteTable(ftmods[kk])){
-      Table::deleteTable(ftmods[kk]);
-    }
-  }
+//  Vector<String> ftmods=Directory::shellExpand(possibleFT);
+//  for (uInt kk=0; kk < ftmods.nelements(); ++kk){
+//    if(Table::canDeleteTable(ftmods[kk])){
+//      Table::deleteTable(ftmods[kk]);
+//    }
+//  }
 
 }
   void VisModelData::clearModel(const MeasurementSet& thems, const String field, const String specwindows){
