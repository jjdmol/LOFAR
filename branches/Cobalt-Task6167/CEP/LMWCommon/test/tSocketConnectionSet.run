#!/bin/sh

# tSocketConnectionSet: Test class SocketConnectionSet in various ways
#
# Copyright (C) 2008
# ASTRON (Netherlands Institute for Radio Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
#
# This file is part of the LOFAR software suite.
# The LOFAR software suite is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The LOFAR software suite is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with the LOFAR software suite. If not, see <http://www.gnu.org/licenses/>.
#
# @author Ger van Diepen <diepen AT astron nl>
#
# $Id$


# Run the tSocketConnectionSet test program by starting it thrice,
# once as server and twice as client.
./tSocketConnectionSet 3851 > tSocketConnectionSet_tmp.outs1 &
pid1=$!
./tSocketConnectionSet 3851 localhost cl1> tSocketConnectionSet_tmp.outc1 &
pid2=$!
./tSocketConnectionSet 3851 localhost client2 > tSocketConnectionSet_tmp.outc2

# If something went wrong, kill the background processes (if still running)
# and exit.
STATUS=$?
if [ $STATUS != 0 ]; then
  for pid in $pid1 $pid2
  do
    if kill -0 $pid 2>/dev/null; then 
      kill -9 $pid 2>/dev/null
    fi
  done
  exit $STATUS
fi

# Output the result in order.
sleep 1
echo "Run1 ..."
cat tSocketConnectionSet_tmp.outs1 tSocketConnectionSet_tmp.outc1 tSocketConnectionSet_tmp.outc2


# Do another run, now starting the clients before the server.
./tSocketConnectionSet 3851 localhost client1 > tSocketConnectionSet_tmp.outc3 &
pid1=$!
./tSocketConnectionSet 3851 localhost clien2 > tSocketConnectionSet_tmp.outc4 &
pid2=$!
./tSocketConnectionSet 3851 > tSocketConnectionSet_tmp.outs2

# If something went wrong, kill the background processes (if still running)
# and exit.
STATUS=$?
if [ $STATUS != 0 ]; then
  for pid in $pid1 $pid2
  do
    if kill -0 $pid 2>/dev/null; then 
      kill -9 $pid 2>/dev/null
    fi
  done
  exit $STATUS
fi

# Output the result in order.
sleep 1
echo "Run2 ..."
cat tSocketConnectionSet_tmp.outs2 tSocketConnectionSet_tmp.outc3 tSocketConnectionSet_tmp.outc4
exit 0
