V 10
1
LANG:1 0 
PANEL,-1 -1 999 293 N "_3DFace" 1
"$name"
"main()
{
//myTable.typetext($name);
  baseDP = g_currentDatapoint;
  
  database=dpSubStr(baseDP,DPSUB_SYS);

  baseDP+=\"_PermSW_MACScheduler\";
  

  // check if the required datapoint for this view are enabled and accessible
  if (dpExists(baseDP+\".\"+$name)) {
    if (dpConnect(\"updateObservations\", baseDP +\".\"+$name+\":_online.._value\",
                                        baseDP +\".\"+$name+\":_online.._invalid\") == -1) {
      LOG_ERROR(\"Observation_small.pnl:main|Couldn't connect to: \"+baseDP);
    }
  } else {
    LOG_ERROR(\"Observation_small.pnl:main|Couldn't find DP to connect to: \"+baseDP);
  }	

}

" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "#uses \"navPanel.ctl\"

string baseDP          = \"\";
string database        = \"\";
bool   bDoubleClicked  = false;

// routine for single mouse click
void click(int row) {
  // set delay in case double click was meant
  delay(0, 100); 
  if (!bDoubleClicked) {
    string obs = myTable.cellValueRC(row,\"Name\");
    navPanel_setEvent(obs,\"EventClick\");
  }
}

// routine for double mouse click
void dblClick(int row) {
  // indicate this is a doubleClick
  bDoubleClicked = true; 

  string dp = claimManager_nameToRealName(\"LOFAR_ObsSW_\" + myTable.cellValueRC(row,\"Name\"));
  if (dpExists(dp) ) {
    baseDP=dp;
    LOG_DEBUG(\"Observation_small.pnl:DoubleClick|Setting currentDatapoint from : \"+g_currentDatapoint+\" to \" + baseDP);
    g_currentDatapoint=baseDP;
    navPanel_setEvent($name,\"ChangePanel\");  
  }
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;
}

// routine for right mouse click
void rClick(int row) {
  navPanel_setEvent($name,\"EventRightClick\");
}

updateObservations(string dp1, dyn_string obs,
                   string dp2, bool invalid)
{
  string obsDP;

  // disconnect old connections
  for(int i=0; i < myTable.lineCount; i++)
  {
    // get real name from claimmanager
    obsDP=claimManager_nameToRealName(\"LOFAR_ObsSW_\"+myTable.cellValueRC(i,\"Name\"));
    if (dpExists(obsDP)) {
      LOG_DEBUG(\"Observation_small.pnl:updateObservations|DISconnecting : \"+obsDP);
      dpDisconnect(\"updateObservationsTableValues\",obsDP + \".status.state\",
                                                   obsDP + \".startTime\",
                                                   obsDP + \".stopTime\",
                                                   obsDP + \".runState\",
                                                   obsDP + \".stationList\",
                                                   obsDP + \".startTime:_online.._invalid\"); 
    }
  }
  myTable.deleteAllLines();
  if (invalid) {
    return;
  }
  
  for (int i=1; i<= dynlen(obs);i++) {
    // get real name from claimmanager
    obsDP=claimManager_nameToRealName(\"LOFAR_ObsSW_\"+obs[i]);
    
    
    if (dpExists(obsDP)) {
      myTable.appendLine(\"Name\",obs[i]);
      LOG_DEBUG(\"Observation_small.pnl:updateObservations|connecting : \"+obsDP);    
      if (dpConnect(\"updateObservationsTableValues\",obsDP + \".status.state\",
                                                    obsDP + \".startTime\",
                                                    obsDP + \".stopTime\",
                                                    obsDP + \".runState\",
                                                    obsDP + \".stationList\",
                                                    obsDP + \".startTime:_online.._invalid\") == -1) {
        LOG_ERROR(\"Observation_small.pnl:updateObservations|ERROR: couldn't connect to : \"+obsDP+ \" \" + getLastError());
      }
      if (!navFunct_dpReachable(obsDP) ){
        LOG_ERROR(\"Observation_small.pnl:updateObservations|DP unreachable\");
        updateObservationsTableValues(\"\",0,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",true);
        return;
      }
         
    } else {
      LOG_ERROR(\"Observation_small.pnl:updateObservations|ERROR: Dp for LOFAR_ObsSW_\"+obs[i]+\" doesn't exist.\");   
      return;
    }
  }
}

updateObservationsTableValues(string dp1, int state,
                              string dp2, string startTime,
                              string dp3, string stopTime,
                              string dp4, string runState,
                              string dp5, string stationList,
                              string dp6, bool invalid)                              
{
  
  // this is the temp name
  string dp = dpSubStr(dp1,DPSUB_DP);
  
  // get the connected Observation
  string name = claimManager_realNameToName(dp);
  string col = getStateColor(state);
  dyn_string d1 = makeDynString(\" \",col);
  
  for(int i=0; i < myTable.lineCount; i++)
  {
    
    if(name == \"LOFAR_ObsSW_\"+myTable.cellValueRC(i,\"Name\"))
    {
      myTable.cellValueRC(i,\"State\",d1);
      myTable.cellValueRC(i,\"runState\",runState);
      myTable.cellValueRC(i,\"Start Time\",startTime);
      myTable.cellValueRC(i,\"Stop Time\",stopTime);
      myTable.cellValueRC(i,\"Station List\",stationList);
    }
  }

  if ($name == \"finishedObservations\" && myTable.lineCount() > 1) {
    // set at 1st line
    myTable.selectLineN(2);
  }

}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 0
"myTable"
""
1 0 0 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main(int row, string column)
{
  rClick(row);
}" 0
 "main(int row, string column)
{
  dblClick(row);
}" 0

1 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 -2 -2 991 219
"main()
{
  myTable.tableMode(TABLE_SELECT_BROWSE);
  
  // connect for highlight mechanism
  dpConnect( \"ObservationCallback\",true,DPNAME_NAVIGATOR + g_navigatorID +\".objectTrigger\" );
}

void ObservationCallback(string dp1, bool aTrig) {
  
  LOG_DEBUG(\"Observation_small.pnl:ObservationCallback|ObjectTrigger Callback on: \"+dp1+\" trigger: \"+aTrig);
  LOG_DEBUG(\"Observation_small.pnl:ObservationCallback|Found highlight : \" + highlight + \" \"+$name);
  int lineNr=-1;
  for (int i=0; i< myTable.lineCount(); i++) {
    myTable.currentCell(i,0);
    if (dynContains(highlight,myTable.cellValueRC(i,\"Name\"))) {
      myTable.cellBackCol(\"Lofar_highLight\");
      lineNr=i;
    } else {
      myTable.cellBackCol(\"white\");
    }      
  }
}" 0
"main(int row, string column, string value)
{
  click(row);
}" 0
 1 0 1 6 0 "Name" 10 1 0 "s" 1
LANG:1 4 Name
E
1
LANG:1 0 

125 "State" 1 1 0 "s" 1
LANG:1 1 S
E
1
LANG:1 0 

19 "runState" 8 1 0 "s" 1
LANG:1 8 runState
E
1
LANG:1 0 

100 "Start Time" 9 1 0 "s" 1
LANG:1 10 Start Time
E
1
LANG:1 0 

115 "Stop Time" 9 1 0 "s" 1
LANG:1 9 Stop Time
E
1
LANG:1 0 

115 "Station List" 46 1 0 "s" 1
LANG:1 12 Station List
E
1
LANG:1 0 

514 
18 18 10 10
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 1 2 1 7
1 0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
0