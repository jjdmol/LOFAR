V 10
1
LANG:1 8 3D_in_2D
PANEL,234 168 621 480 N "_3DFace" 0
"main()
{
	// Hier nog een dpcheck existance programmeren
	dpConnect(\"DrawBeam\", \"System1:Beam1.Azimuth:_online.._value\",
												\"Beam1.Elevation\");
/*												
	dpConnect(\"DrawBeam\", \"Beam2.Azimuth\",
												\"Beam2.Evelation\");

	dpConnect(\"DrawBeam\", \"Beam3.Azimuth\",
												\"Beam3.Evelation\");

	dpConnect(\"DrawBeam\", \"Beam4.Azimuth\",
												\"Beam4.Evelation\");

	dpConnect(\"DrawBeam\", \"Beam5.Azimuth\",
												\"Beam5.Evelation\");

	dpConnect(\"DrawBeam\", \"Beam6.Azimuth\",
												\"Beam6.Evelation\");

	dpConnect(\"DrawBeam\", \"Beam7.Azimuth\",
												\"Beam7.Evelation\");

	dpConnect(\"DrawBeam\", \"Beam8.Azimuth\",
												\"Beam8.Evelation\");
*/					
}

DrawBeam(	string dpSource1, float Beam_Azimuth,
					string dpSource2, float Beam_Elevation)
{
	//####################################################################
	//
	//	Declaration of the variables 
	//
	//
	//####################################################################
	int	Half_Ellips_Height = 25;
	int	Half_Ellips_Width = 150;
	float Beam_3D_x;									// Beam1 3D coordinate X
	float Beam_3D_y;									// Beam1 3D coordinate Y
	float Beam_3D_z;									// Beam1 3D coordinate Z
//	int HALF_SCREEN_WIDTH = 60;			//	HALF_SCREEN_WIDTH
//	int HALF_SCREEN_HEIGHT = 50;		//	HALF_SCREEN_HEIGHT
//	float Beam_2D_x;									// Beam1 2D coordinate X
//	float Beam_2D_y;									// Beam1 2D coordinate Y
//	float Beam1_Azimuth = 20;							// Beam1 horizontal angle
//	float Beam1_Elevation = 20;						// Beam1 elevation angle
	float Beam_Bottem_Angle;
	float Beam_Bottem_Length;
	float circle_radius = 150;		// radius of cirlce (Ellips!)

	float Beam_Bottom_x, Beam_Angle;
	float Beam_Bottom_y, Beam_Length;
	
/*	DebugN(\"[----------- New test -------------]\");
	DebugN(\"3D X:\" + Beam_3D_x);
	DebugN(\"3D Y:\" + Beam_3D_y);
	DebugN(\"3D Z:\" + Beam_3D_z);
	
		DebugN (dpSource1);
		DebugN (Beam_Azimuth);
		DebugN (Beam_Elevation);
*/

	
	//####################################################################
	//
	//	Calculate the 3D coordinates of the Beam 
	//	Input: Beam Azimuth, Beam Elevation
	//	Output: Beam coordinates (x,y,z) [3D]
	//
	//####################################################################
	Beam_3D_x = cos(deg2rad(Beam_Azimuth))   * circle_radius;		// Let op!! 
	Beam_3D_y = sin(deg2rad(Beam_Azimuth))   * circle_radius;		// van graden naar radialen!!!
	Beam_3D_z = tan(deg2rad(Beam_Elevation)) * circle_radius;
	
	//####################################################################
	//
	// Calculate and draw bottomline of beam1
	//
	//
	//####################################################################
	if (Beam_3D_y<0)
			Half_Ellips_Height = - Half_Ellips_Height;
	else
			Half_Ellips_Height = Half_Ellips_Height;

	Beam_Bottom_x	=	Beam_3D_x;	
	Beam_Bottom_y = Half_Ellips_Height * sqrt(1 - (pow(Beam_Bottom_x,2) / pow(Half_Ellips_Width,2)) );
//	DebugN(\"Beam_Bottom_x: \" + Beam_Bottom_x);
//	DebugN(\"Beam_Bottom_y: \" + Beam_Bottom_y);


	if (Beam_3D_x <0)
		Beam_Bottem_Angle = (rad2deg(atan(Beam_Bottom_y/Beam_Bottom_x))) + 180; 	// + 180 indien links van het nulpunt
	else
		Beam_Bottem_Angle = (rad2deg(atan(Beam_Bottom_y/Beam_Bottom_x)));

	Beam_Bottem_Length = sqrt (pow(Beam_Bottom_y,2)+pow(Beam_Bottom_x,2),2);

	setValue(\"Beam1_B\", \"scale\" , (Beam_Bottem_Length/10) , 0); //flLength /10 omdat de lengte van de line al 10 is
	setValue(\"Beam1_B\", \"rotation\",	Beam_Bottem_Angle );	// links van het 0,0 punt is rotation + 180 deg

	setValue(\"Beam1_V\", \"position\", Beam_Bottom_x + 190, 365 - Beam_Bottom_y);
	setValue(\"Beam1_V\", \"scale\" , 0, (Beam_3D_z/10)); //delen door 10 omdat de lengte van de lijn al 10 is

	//####################################################################
	//
	//	Calculate scale and rotation for Beam1
	//	
	//####################################################################

	if (Beam_3D_x <0)
			Beam_Angle = (rad2deg(atan((Beam_Bottom_y + Beam_3D_z)/Beam_Bottom_x))) + 180; 	// + 180 indien links van het nulpunt
	else
			Beam_Angle = (rad2deg(atan((Beam_Bottom_y + Beam_3D_z)/Beam_Bottom_x)));

	Beam_Length = sqrt (pow(Beam_Bottom_y + Beam_3D_z,2)+pow(Beam_Bottom_x,2),2);
//	DebugN (\"Beam_Length: \" + Beam_Length);
	setValue(\"Beam1\", \"scale\" , (Beam_Length/10), 0); //delen door 10 omdat de lengte van de lijn al 10 is
	setValue(\"Beam1\", \"rotation\",	Beam_Angle );

	//####################################################################
	//
	//	Calculate for every point the x and y position in 2D
	//	Input: Beam coordinates (x,y,z)	[3D]
	//	Output: Beam coordinates (x,y)	[2D]
	//	
	//####################################################################
//	DebugN (\"Beam1_2D_x: \" + ( (  Beam1_3D_x*5) / Beam1_3D_z ));
//	DebugN (\"Beam1_2D_y: \" + ( (  -Beam1_3D_y*5) / Beam1_3D_z ));


}

//		Beam1_2D_x = ( (   Beam1_3D_x  * 60 ) / Beam1_3D_z ) + HALF_SCREEN_WIDTH;
//		Beam1_2D_y = ( ( - Beam1_3D_y  * 50 ) / Beam1_3D_z ) + HALF_SCREEN_HEIGHT;
/*

		Beam1_2D_x = ( (   Beam1_3D_x * 60) / Beam1_3D_z );
		Beam1_2D_y = ( ( - Beam1_3D_y * 60) / Beam1_3D_z );

		DebugN(\"2D X:\" + Beam1_2D_x);
		DebugN(\"2D Y:\" + Beam1_2D_y);
	
*/

	//####################################################################
	//
	//	Function to calculate and display the beam in 2D
	//
	//
	//####################################################################
/*	if (Beam1_2D_x <0)
		flAngle = (rad2deg(atan(Beam1_2D_y/Beam1_2D_x))) + 180; 	// + 180 indien links van het nulpunt
	else
		flAngle = (rad2deg(atan(Beam1_2D_y/Beam1_2D_x)));


	flLength = sqrt (pow(Beam1_2D_y,2)+pow(Beam1_2D_x,2),2);
	
	DebugN(\"flAngle:\" + flAngle);
	DebugN(\"flLength:\" + flLength);

	setValue(\"Line2\", \"scale\" , (flLength/10) , 0); //flLength /10 omdat de lengte van de line al 10 is
	setValue(\"Line2\", \"rotation\",	flAngle );	// links van het 0,0 punt is rotation + 180 deg
	setValue(\"Line_beam_1\", \"position\", Beam1_2D_x+190, 365-Beam1_2D_y);
	

*/


/*	
	if (Beam1_3D_y > 0)
		{
		Beam1_3D_z = Beam1_3D_z - (sqrt(3))* Beam1_3D_z;
		DebugN(\"3D Z' (y>0):\" + Beam1_3D_z);
		}
	else
		{
		Beam1_3D_z = Beam1_3D_z + (sqrt(3))* Beam1_3D_z;
		DebugN(\"3D Z' (y<0):\" + Beam1_3D_z);
		}
*/
//	flAngle = (y/x);
//	flLength = sqrt (pow(y,2)+pow(x,2),2);
//	setValue(\"Line2\", \"scale\" , (flLength/10) , 0); //flLength /10 omdat de lengte van de line al 10 is
//	setValue(\"Line2\", \"rotation\",	(rad2deg(atan(flAngle))));	// links van het 0,0 punt is rotation + 180 deg
//	setValue(\"Line_beam_1\", \"position\", x+160, 105-y);



//	p2_x = ( (   org2_x * 280 ) / org2_z ) + HALF_SCREEN_WIDTH;
//	p2_y = ( ( - org2_y * 280 ) / org2_z ) + HALF_SCREEN_HEIGHT;

//	p3_x = ( (   org3_x * 280 ) / org3_z ) + HALF_SCREEN_WIDTH;
//	p3_y = ( ( - org3_y * 280 ) / org3_z ) + HALF_SCREEN_HEIGHT;

//	p4_x = ( (   org4_x * 280 ) / org4_z ) + HALF_SCREEN_WIDTH;
//	p4_y = ( ( - org4_y * 280 ) / org4_z ) + HALF_SCREEN_HEIGHT;


//	setValue(\"Line2\", \"scale\" , (flLength));
	// Position the four circles
//	setValue(\"p4\", \"position\", p4_x, p4_y);
//	setValue(\"p4\", \"toolTipText\", p4_x);
//	setValue(\"p3\", \"position\", p3_x, p3_y);
//	setValue(\"p3\", \"toolTipText\", p3_x);
//	setValue(\"p2\", \"position\", p2_x, p2_y);
//	setValue(\"p1\", \"position\", p1_x, p1_y);
//	setValue(\"Line1\", \"scale\", 7, 7);
//	setValue(\"Line2\", \"size\", 500, 500);

// Correct way to change position of the graphic element
//	setValue(\"p4\", \"position\", p4_x, p4_y);	
//	DebugN(rad2deg(atan(x,y))); //calculate angle between 2 point, with relatiove distance

	//for(i=1; i<=4; i++)" 0
EE E E 1 -1 -1 0  0 200
"" 0 1
EE 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
6 45
"Border2"
""
1 10 450 E E E 1 E 1 E N "_WindowText" E N {0,0,0} E E
 E E
45 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 10 10 390 450
7 51
"Ellipse2"
""
1 190 365 E E E 1 E 1 E N {102,102,102} E N "_Transparent" E E
 E E
51 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 190 365 150 25
4 13
"Line2"
""
1 190 366 E E E 1 E 1 E N {255,255,0} E N "_Transparent" E E
 E E
14 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 2 1 0 1 E  200 365 190 365
2 17
"Text1"
""
1 10 356 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
18 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 358 33 374
0 2 0 "s" 0 0 0 192 0 0  12 358
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 3 180
2 18
"Text2"
""
1 360 356 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
19 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 362 358 369 374
0 2 0 "s" 0 0 0 192 0 0  362 358
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 1 0
2 19
"Text3"
""
1 178 400 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
20 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 180 402 201 418
0 2 0 "s" 0 0 0 192 0 0  180 402
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 3 270
2 20
"Text4"
""
1 182 310 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
21 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 184 312 198 328
0 2 0 "s" 0 0 0 192 0 0  184 312
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 2 90
4 36
"Line13"
""
1 190 399 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
36 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 2 1 1 0 1 E  190 400 190 330
4 50
"Beam1_B"
""
1 190 366 E E E 1 E 1 E N {204,204,204} E N "_Transparent" E E
 E E
50 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 2 1 1 0 1 E  200 365 190 365
2 54
"Text5"
""
1 530 150 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
54 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 532 152 541 168
0 2 0 "s" 0 0 0 192 0 0  532 152
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 1 N
2 55
"Text6"
""
1 470 150 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
55 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 472 152 481 168
0 2 0 "s" 0 0 0 192 0 0  472 152
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 1 S
2 56
"Text7"
""
1 500 130 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
56 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 502 132 515 148
0 2 0 "s" 0 0 0 192 0 0  502 132
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 1 W
2 57
"Text8"
""
1 500 170 E E E 1 E 1 E N {153,153,153} E N "_Transparent" E E
 E E
57 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 502 172 511 188
0 2 0 "s" 0 0 0 192 0 0  502 172
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 1 E
4 68
"Line1"
""
1 34 366 E E E 1 E 1 E N {102,102,102} E N "_Transparent" E E
 E E
67 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 2 1 1 0 1 E  354 365 34 365
4 73
"Beam1_V"
""
1 230 300 E E E 1 E 1 E N {255,255,255} E N "_Transparent" E E
 E E
72 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 2 1 1 0 1 E  230 300 230 290
4 75
"Beam1"
""
1 190 365 E E E 1 E 1 E N {255,0,255} E N "_Transparent" E E
 E E
74 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 2 1 0 1 E  190 365 200 365
2 79
"Text9"
""
1 530 272 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
78 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 532 274 580 290
0 2 0 "s" 0 0 0 192 0 0  532 274
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 7 Azimuth
2 80
"Text10"
""
1 530 302 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
79 0 0 0 0 0
EE E
0
1
LANG:1 0 
1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 532 304 584 320
0 2 0 "s" 0 0 0 192 0 0  532 304
 1
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
1
LANG:1 9 Evelation
21 77
"SpinButton1"
""
1 440 270 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
76 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
438 268 522 295
0
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_textFieldIn();
}

EP_textFieldIn()
{
dyn_errClass err;

  if( !dpExists( \"System1:Beam1.Azimuth:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_textFieldInCB\",
            \"System1:Beam1.Azimuth:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


EP_textFieldInCB(string dp, float fNewValue)
{
  setValue(\"\", \"text\", dpValToString(dp, fNewValue, TRUE) );
}

// SimpleCtrlScript {EP_textFieldIn}
// DP {System1:Beam1.Beam1_Azimuth}
// DPConfig {:_online.._value}
// DPType {float}
// UseDPUnit {TRUE}
// UseDPFormat {TRUE}
// SimpleCtrlScriptEnd {EP_textFieldIn}
" 0

"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_textFieldOut();
}

EP_textFieldOut()
{
float fNewValue;
dyn_errClass err;
string sTmp;
string sFormat, sDp;

  getValue(\"\", \"text\", sTmp);
  sscanf(sTmp, \"%f\", fNewValue);

  sDp = dpSubStr(\"System1:Beam1.Azimuth:_original.._value\",  DPSUB_SYS_DP_EL);
  if ( strpos(sDp,\".\") < 1 )
    sDp += \".\";

  sFormat = dpGetFormat( sDp );
  if( !checkStringFormat(sTmp, sFormat) )
  {
    ChildPanelOnCentral( \"vision/MessageWarning\",
                         getCatStr( \"e_para\", \"warning\" ),
                         makeDynString( getCatStr( \"e_para\", \"wrongFormat\" )));
    return;
  }

  dpSetWait(\"System1:Beam1.Azimuth:_original.._value\", sTmp);
  err = getLastError();
  if (dynlen(err) > 0)
    errorDialog(err);
}

// SimpleCtrlScript {EP_textFieldOut}
// DP {System1:Beam1.Beam1_Azimuth}
// Config {:_original.._value}
// DPType {float}
// SimpleCtrlScriptEnd {EP_textFieldOut}
" 0

E

N 0 350 10 0 0 1
21 78
"SpinButton2"
""
1 440 300 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
77 0 0 0 0 0
EE E
0
1
LANG:1 0 
0
1
LANG:1 107 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,3,2,1,34,Arial
0 ""
438 298 522 325
0
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_textFieldIn();
}

EP_textFieldIn()
{
dyn_errClass err;

  if( !dpExists( \"System1:Beam1.Elevation:_online.._value\"))
  {
    setValue(\"\", \"color\", \"_dpdoesnotexist\");
    return;
  }

  dpConnect(\"EP_textFieldInCB\",
            \"System1:Beam1.Elevation:_online.._value\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"_dpdoesnotexist\");

}


EP_textFieldInCB(string dp, float fNewValue)
{
  setValue(\"\", \"text\", dpValToString(dp, fNewValue, TRUE) );
}

// SimpleCtrlScript {EP_textFieldIn}
// DP {System1:Beam1.Beam1_Azimuth}
// DPConfig {:_online.._value}
// DPType {float}
// UseDPUnit {TRUE}
// UseDPFormat {TRUE}
// SimpleCtrlScriptEnd {EP_textFieldIn}
" 0

"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_textFieldOut();
}

EP_textFieldOut()
{
float fNewValue;
dyn_errClass err;
string sTmp;
string sFormat, sDp;

  getValue(\"\", \"text\", sTmp);
  sscanf(sTmp, \"%f\", fNewValue);

  sDp = dpSubStr(\"System1:Beam1.Elevation:_original.._value\",  DPSUB_SYS_DP_EL);
  if ( strpos(sDp,\".\") < 1 )
    sDp += \".\";

  sFormat = dpGetFormat( sDp );
  if( !checkStringFormat(sTmp, sFormat) )
  {
    ChildPanelOnCentral( \"vision/MessageWarning\",
                         getCatStr( \"e_para\", \"warning\" ),
                         makeDynString( getCatStr( \"e_para\", \"wrongFormat\" )));
    return;
  }

  dpSetWait(\"System1:Beam1.Elevation:_original.._value\", sTmp);
  err = getLastError();
  if (dynlen(err) > 0)
    errorDialog(err);
}

// SimpleCtrlScript {EP_textFieldOut}
// DP {System1:Beam1.Beam1_Azimuth}
// Config {:_original.._value}
// DPType {float}
// SimpleCtrlScriptEnd {EP_textFieldOut}
" 0

E

N 0 89 5 0 1 1
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0