#!/usr/bin/env python

import lofar.mstools as lmt
import sys

if __name__ == "__main__":
    if len(sys.argv) < 4:
        print ''
        print 'Insufficient arguments; run as:'
        print '  expandtargetps parsetin parsetout nsubband'
        print '                 [mspattern [instrpattern [outname]]]'
        print ''
        print ' If an mspattern is given, it must be the name of a directory'
        print ' containing the MeasurementSets or a glob-pattern matching the'
        print ' MeasurementSets to process. If a directory name is given,'
        print ' *.MS will be added to make it a glob pattern.'
        print ' If no or an empty mspattern is given, it means that the msin'
        print ' parameter in the input parset defines the glob-pattern for'
        print ' the MeasurementSets to process.'
        print ''
        print ' In a similar way instrpattern defines the names of the tables'
        print ' containing the instrument models. *.instr is added if needed.'
        print ' If not given, the parset parameter instrin defines them.'
        print ''
        print ' If an outname is given, it must define the names of the'
        print ' output MeasurementSets. It can contain the placeholders'
        print ' <DN>, <BN>, <BN.>, <.BN>, <SEQ>, <OBSID>, <SAP>, <SB>, <TYPE>.'
        print ' If no or an empty outname is given, the msout parameter in the'
        print ' input parset defines the output names'
        print ''
        print 'For example:'
        print '  expandcalps  in.parset  out.parset  80  /data/L45318'
        print '    /data/scratch/pipeline/L45318'
        print '    /data/scratch/pipeline/L45318/<BN.>_dppp.MS'
        print ''
        if len(sys.argv) == 2  and  sys.argv[1] == '-h':
            help(lmt.expandps)
        print ''
        sys.exit(1)
    # See if the MS pattern is given.
    msname = 'msin'
    if len(sys.argv) > 4  and  len(sys.argv[4]) > 0:
        # Add *.MS if no glob pattern given. Turn it into a list.
        msname = [lmt.addfileglob (sys.argv[4], '*.MS')]
    # See if the instrument ParmDB pattern is given.
    instrname = 'instrin'
    if len(sys.argv) > 5  and  len(sys.argv[5]) > 0:
        instrname = [lmt.addfileglob (sys.argv[5], '*.INST')]
    # See if the MS output name is given.
    outname = 'msout'
    if len(sys.argv) > 6  and  len(sys.argv[6]) > 0:
        outname = [sys.argv[6]]
    # Expand the parset.
    lmt.expandps (sys.argv[1], sys.argv[2],
                  {'in': [[msname, 'Input_Correlated'],
                          [instrname, 'Input_InstrumentModel']],
                   'out': [[outname, 'Output_Correlated']]},
                  int(sys.argv[3]))
