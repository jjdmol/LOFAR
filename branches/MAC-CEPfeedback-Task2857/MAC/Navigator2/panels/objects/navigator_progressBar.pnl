V 11
1
LANG:1 8 (NoName)
PANEL,-1 -1 638 94 N "_3DFace" 1
"$name"
"main()
{
    //delay while navigator instance is being prepared, shouldn't be needed, but this way we at least have a trigger when something goes wrong
  int retry=0;
  while (navigator_initializing() & retry < 60) {
    delay(0,100);
    retry++;
    if (retry >= 60) {
      LOG_FATAL(\"navigator_progressBar.pnl:initialize|progressBar retry longer then 2 minutes, navigatorInstance still not ready?\");
      break;
    }
  }
  
  // Check if Action point exists and connect to it if
  // it does. The action Point is the call back for this object
  itsActionDp      = DPNAME_NAVIGATOR + g_navigatorID + \".\"+$name+\".action\";
  itsEventDp       = DPNAME_NAVIGATOR + g_navigatorID + \".\"+$name+\".event\";
  itsSelectionDp   = DPNAME_NAVIGATOR + g_navigatorID + \".\"+$name+\".selection\";
	
  itsProgressBarDp = DPNAME_NAVIGATOR + g_navigatorID + \".progress\";

  if ( dpExists(itsActionDp) ) {
    dpConnect(\"doAction\",false,itsActionDp);
    PROGRESSBARACTIONDP=itsActionDp;
  }  
  
}

void initialize() {      
  LOG_TRACE(\"navigator_progressBar.pnl:initialize|entered\");
  
  setProgressBarDPE();

  LOG_TRACE(\"navigator_progressBar.pnl:initialize|end\");
}

// connect progressbar to value to act on
setProgressBarDPE() {
 if (dpExists(itsProgressBarDp)) {
    if (connected && dpExists(dpe) && dpe != \"\") {
      dpDisconnect(display,dpe);
      connected=false;
    }
    dpe = itsProgressBarDp+\":_online.._value\";
    dpConnect(\"display\",true,dpe);
    connected=true;
  }
  
}

display(string dp1, string progress)
{
  int number = progress;
  setMultiValue(\"avail31\",\"scale\",number/100.0,1,
	        \"avail32\",\"scale\",number/100.0,1,
  		\"used31\",\"scale\",1-number/100.0,1,
  		\"used32\",\"scale\",1-number/100.0,1,
  		\"progressValue\",\"text\",number);
     
}


//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"navigator_progressBar.pnl:doAction| required for \" + $name + \". Action found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"navigator_progressBar.pnl:doAction|found actionString: \" + actionString);
  if (actionString[1] == \"Initialize\") {
    initialize();
    return;
  }
}" 0
 E E E E 1 0 0 0  210 10
""0  1
E "//Global mainpoint holders
string 	       itsActionDp    = \"\";
string         itsEventDp     = \"\";
dyn_string     itsSelectionDp = \"\";
string         itsProgressBarDp = \"\";

bool connected=false;
string dpe;

void setEvent(dyn_string aSelection,string event) {
  if (navigator_initializing()) {
    return;
  }
  string anEvent=$name+\"|\"+event;
  if (dpExists(itsEventDp)) {
     dpSet(itsEventDp,anEvent);
  } else {
    LOG_ERROR(\"navigator_progressBar.pnl:setEvent|\"+itsEventDp + \" Does not exist yet\");     
  }
  if (dpExists(itsSelectionDp)) {
    dpSet(itsSelectionDp,aSelection);
  } else {
    LOG_ERROR(\"navigator_progressBar.pnl:setEvent|\"+itsSelectionDp + \" Does not exist yet\");     
  }
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
10 2
"avail31"
""
1 210 10 E E E 1 E 1 E N "STD_border_dark" E N "STD_available" E E
 E E
3 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
"main()
{
  float x,y;
  
  getValue(\"\",\"position\",x,y);
  addSymbol(myModuleName(), myPanelName(), \"objects/STD_INFOS/minitext_t_r.pnl\",\"progress\",makeDynString(),x+1,y,0,1,1);
}" 0
 E 0 1 1 0 1 E U  1 E 4 10 10
10 30
210 30
210 10
 0
10 3
"avail32"
""
1 210 30 E E E 1 E 1 E N "STD_border_light" E N "STD_available" E E
 E E
4 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  1 E 3 10 30
10 10
210 10
 0
10 0
"used32"
""
1 10 30 E E E 1 E 1 E N "STD_border_light" E N "_Transparent" E E
 E E
1 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 3 10 30
10 10
210 10
 0
10 1
"used31"
""
1 10 10 E E E 1 E 1 E N "STD_border_dark" E N "STD_used" E E
 E E
2 0 0 0 0 0
E E E
0
2
LANG:1 0 
LANG:0 0 

1
"dashclr"N "_Transparent"
"main()
{
  
  float x,y;
  
  getValue(\"\",\"position\",x,y);
  addSymbol(myModuleName(), myPanelName(), \"objects/STD_INFOS/minitext_t_l.pnl\",\"mt1\",makeDynString(\"$s_txt:\"),x,y,0,1,1);
  
}" 0
 E 0 1 1 0 1 E U  1 E 4 10 10
10 30
210 30
210 10
 0
2 5
"progressValue"
""
1 130 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 130 10 131 23
0 2 2 "0s" 0 0 0 192 0 0  130 10 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 0 
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0
