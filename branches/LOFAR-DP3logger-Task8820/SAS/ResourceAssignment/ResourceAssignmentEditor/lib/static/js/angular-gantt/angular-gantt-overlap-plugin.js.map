{"version":3,"sources":["../src/plugins/overlap.js","../.tmp/generated/plugins/overlap/html2js.js"],"names":[],"mappings":"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","file":"angular-gantt-overlap-plugin.js","sourcesContent":["(function(){\n    'use strict';\n    angular.module('gantt.overlap', ['gantt', 'gantt.overlap.templates']).directive('ganttOverlap', ['moment',function(moment) {\n        return {\n            restrict: 'E',\n            require: '^gantt',\n            scope: {\n                enabled: '=?'\n                // Add other option attributes for this plugin\n            },\n            link: function(scope, element, attrs, ganttCtrl) {\n                var api = ganttCtrl.gantt.api;\n\n                if (scope.enabled === undefined) {\n                    scope.enabled = true;\n                }\n\n                if (scope.enabled){\n                    api.tasks.on.change(scope, function (task) {\n                        // on every task change check for overlaps\n                        scope.handleOverlaps(task);\n                    });\n                }\n\n                var overlapsTasks = {};\n\n                scope.handleOverlaps = function (changedTask) {\n                    // Get all the tasks in the row.\n                    var allTasks = changedTask.row.tasks;\n\n                    var newOverlapsTasks = {};\n                    var removedOverlapsTasks = {};\n\n                    angular.forEach(allTasks, function(task) {\n                        removedOverlapsTasks[task.model.id] = task;\n                    });\n\n                    // set overlaps flag to each task that overlaps other task.\n                    angular.forEach(allTasks,function(currentTask){\n                        var currentStart,currentEnd;\n                        if (currentTask.model.from.isBefore(currentTask.model.to)){\n                            currentStart = currentTask.model.from;\n                            currentEnd = currentTask.model.to;\n                        } else {\n                            currentStart = currentTask.model.to;\n                            currentEnd = currentTask.model.from;\n                        }\n                        var currentRange = moment().range(currentStart, currentEnd);\n                        angular.forEach(allTasks,function(task){\n                            if (currentTask.model.id !== task.model.id){\n                                var start,end;\n                                if (task.model.from.isBefore(task.model.to)){\n                                    start = task.model.from;\n                                    end = task.model.to;\n                                } else {\n                                    start = task.model.to;\n                                    end = task.model.from;\n                                }\n                                var range = moment().range(start, end);\n                                if (range.overlaps(currentRange)){\n                                    if (!overlapsTasks.hasOwnProperty(task.model.id)) {\n                                        newOverlapsTasks[task.model.id] = task;\n                                    }\n                                    delete removedOverlapsTasks[task.model.id];\n                                    if (!overlapsTasks.hasOwnProperty(currentTask.model.id)) {\n                                        newOverlapsTasks[currentTask.model.id] = currentTask;\n                                    }\n                                    delete removedOverlapsTasks[currentTask.model.id];\n                                }\n                            }\n                        });\n                    });\n\n                    angular.forEach(removedOverlapsTasks, function(task) {\n                      if (task.$element){\n                        task.$element.removeClass('gantt-task-overlaps');\n                      }\n                        delete overlapsTasks[task.model.id];\n                    });\n\n                    angular.forEach(newOverlapsTasks, function(task) {\n                      if (task.$element){\n                        task.$element.addClass('gantt-task-overlaps');\n                      }\n                        overlapsTasks[task.model.id] = task;\n                    });\n\n                    overlapsTasks = newOverlapsTasks;\n                };\n            }\n        };\n    }]);\n}());\n\n","angular.module('gantt.overlap.templates', []).run(['$templateCache', function($templateCache) {\n\n}]);\n"]}