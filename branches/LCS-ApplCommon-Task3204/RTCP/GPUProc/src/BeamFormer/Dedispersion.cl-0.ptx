//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Sat Sep 29 10:12:13 2012 (1348906333)
// Driver 304.54
//

.version 3.0
.target sm_30, texmode_independent
.address_size 32

.extern .shared .align 4 .b8 shr_2_local_DMs[512];

.entry applyChirp(
	.param .u32 .ptr .global .align 1 applyChirp_param_0,
	.param .u32 .ptr .global .align 4 applyChirp_param_1,
	.param .f32 applyChirp_param_2
)
{
	.reg .f32 	%f<225>;
	.reg .pred 	%p<26>;
	.reg .s32 	%r<97>;


	// inline asm
	mov.u32 	%r32, %tid.x;
	// inline asm
	setp.gt.s32 	%p4, %r32, 127;
	mov.u32 	%r92, %r32;
	@%p4 bra 	BB0_2;

BB0_1:
	shl.b32 	%r34, %r92, 2;
	ld.param.u32 	%r91, [applyChirp_param_1];
	add.s32 	%r35, %r91, %r34;
	ld.global.f32 	%f29, [%r35];
	add.ftz.f32 	%f30, %f29, %f29;
	mul.ftz.f32 	%f31, %f30, 0f40490FDB;
	mul.ftz.f32 	%f32, %f31, 0f596BD7E5;
	mov.u32 	%r36, shr_2_local_DMs;
	add.s32 	%r37, %r36, %r34;
	st.shared.f32 	[%r37], %f32;
	// inline asm
	mov.u32 	%r33, %ntid.x;
	// inline asm
	add.s32 	%r92, %r33, %r92;
	setp.lt.s32 	%p5, %r92, 128;
	@%p5 bra 	BB0_1;

BB0_2:
	bar.sync 	0;
	// inline asm
	mov.u32 	%r38, %envreg3;
	// inline asm
	// inline asm
	mov.u32 	%r39, %ntid.x;
	// inline asm
	// inline asm
	mov.u32 	%r40, %ctaid.x;
	// inline asm
	// inline asm
	mov.u32 	%r41, %tid.x;
	// inline asm
	add.s32 	%r50, %r41, %r38;
	mad.lo.s32 	%r51, %r40, %r39, %r50;
	// inline asm
	mov.u32 	%r42, %envreg4;
	// inline asm
	// inline asm
	mov.u32 	%r43, %ntid.y;
	// inline asm
	// inline asm
	mov.u32 	%r44, %ctaid.y;
	// inline asm
	// inline asm
	mov.u32 	%r45, %tid.y;
	// inline asm
	// inline asm
	mov.u32 	%r46, %envreg5;
	// inline asm
	// inline asm
	mov.u32 	%r47, %ntid.z;
	// inline asm
	// inline asm
	mov.u32 	%r48, %ctaid.z;
	// inline asm
	// inline asm
	mov.u32 	%r49, %tid.z;
	// inline asm
	add.s32 	%r52, %r49, %r46;
	mad.lo.s32 	%r53, %r48, %r47, %r52;
	cvt.rn.f32.u32 	%f35, %r53;
	ld.param.f32 	%f217, [applyChirp_param_2];
	add.ftz.f32 	%f36, %f217, 0fC7BEBC20;
	fma.rn.ftz.f32 	%f2, %f35, 0f42BEBC20, %f36;
	cvt.rn.f32.u32 	%f37, %r51;
	mul.ftz.f32 	%f38, %f37, 0f403EBC20;
	setp.gt.u32 	%p6, %r51, 32;
	fma.rn.ftz.f32 	%f39, %f37, 0f403EBC20, 0fC2BEBC20;
	selp.f32 	%f3, %f39, %f38, %p6;
	div.rn.ftz.f32 	%f34, %f3, 0f42334A70;
	// inline asm
	abs.f32 	%f33, %f34;
	// inline asm
	setp.eq.ftz.f32 	%p7, %f34, 0f3F800000;
	@%p7 bra 	BB0_25;

	setp.nan.ftz.f32 	%p8, %f34, %f34;
	@%p8 bra 	BB0_24;

	mov.f32 	%f6, 0fFF800000;
	mov.f32 	%f220, 0f42A00000;
	mov.f32 	%f44, 0f3F000000;
	mul.rn.f32 	%f41, %f44, %f220;
	// inline asm
	cvt.rmi.f32.f32 	%f40, %f41;
	// inline asm
	mov.f32 	%f45, 0f40000000;
	mul.rn.f32 	%f46, %f45, %f40;
	sub.ftz.f32 	%f47, %f220, %f46;
	setp.eq.ftz.f32 	%p1, %f47, 0f3F800000;
	// inline asm
	cvt.rzi.f32.f32 	%f42, %f220;
	// inline asm
	setp.eq.ftz.f32 	%p2, %f42, 0f42A00000;
	and.pred  	%p3, %p1, %p2;
	setp.eq.ftz.f32 	%p9, %f33, 0f00000000;
	@%p9 bra 	BB0_23;

	setp.eq.ftz.f32 	%p10, %f34, 0f7F800000;
	setp.eq.ftz.f32 	%p11, %f34, %f6;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_20;

	setp.geu.ftz.f32 	%p13, %f34, 0f00000000;
	@%p13 bra 	BB0_8;

	mov.f32 	%f49, 0f42A00000;
	// inline asm
	cvt.rzi.f32.f32 	%f48, %f49;
	// inline asm
	setp.neu.ftz.f32 	%p14, %f48, 0f42A00000;
	@%p14 bra 	BB0_19;

BB0_8:
	// inline asm
	abs.f32 	%f50, %f34;
	// inline asm
	mov.b32 	 %r18, %f50;
	shr.u32 	%r54, %r18, 23;
	and.b32  	%r55, %r54, 255;
	add.s32 	%r93, %r55, -127;
	setp.eq.s32 	%p15, %r55, 0;
	mov.f32 	%f218, %f50;
	@%p15 bra 	BB0_9;
	bra.uni 	BB0_10;

BB0_9:
	and.b32  	%r56, %r18, -2139095041;
	or.b32  	%r57, %r56, 1065353216;
	mov.b32 	 %f52, %r57;
	add.ftz.f32 	%f53, %f52, 0fBF800000;
	mov.b32 	 %r58, %f53;
	shr.u32 	%r59, %r58, 23;
	and.b32  	%r60, %r59, 255;
	add.s32 	%r93, %r60, -253;
	and.b32  	%r61, %r58, -2139095041;
	or.b32  	%r62, %r61, 1065353216;
	mov.b32 	 %f218, %r62;

BB0_10:
	mov.b32 	 %r63, %f218;
	and.b32  	%r64, %r63, -2139095041;
	or.b32  	%r65, %r64, 1065353216;
	mov.b32 	 %f219, %r65;
	setp.gt.ftz.f32 	%p16, %f219, 0f3FB504F3;
	@%p16 bra 	BB0_11;
	bra.uni 	BB0_12;

BB0_11:
	mul.rn.f32 	%f219, %f219, %f44;
	add.s32 	%r93, %r93, 1;

BB0_12:
	add.ftz.f32 	%f63, %f219, 0f3F800000;
	rcp.approx.ftz.f32 	%f57, %f63;
	add.ftz.f32 	%f56, %f219, 0fBF800000;
	// inline asm
	mul.rz.f32 	%f55, %f56, %f57;
	// inline asm
	mul.rn.f32 	%f65, %f45, %f55;
	mul.rn.f32 	%f66, %f65, %f65;
	mov.f32 	%f67, 0f3B18F0FE;
	mul.rn.f32 	%f68, %f67, %f66;
	add.ftz.f32 	%f69, %f68, 0f3C4CAF63;
	mul.rn.f32 	%f70, %f69, %f66;
	add.ftz.f32 	%f71, %f70, 0f3DAAAABD;
	mul.rn.f32 	%f72, %f71, %f66;
	mul.rn.f32 	%f60, %f72, %f65;
	mov.b32 	 %r66, %f65;
	and.b32  	%r67, %r66, -4096;
	mov.b32 	 %f73, %r67;
	mov.b32 	 %r68, %f56;
	and.b32  	%r69, %r68, -4096;
	mov.b32 	 %f74, %r69;
	sub.ftz.f32 	%f75, %f56, %f73;
	mul.rn.f32 	%f76, %f45, %f75;
	sub.ftz.f32 	%f77, %f56, %f74;
	mul.rn.f32 	%f78, %f73, %f74;
	sub.ftz.f32 	%f79, %f76, %f78;
	mul.rn.f32 	%f80, %f73, %f77;
	sub.ftz.f32 	%f81, %f79, %f80;
	mul.rn.f32 	%f82, %f57, %f81;
	add.ftz.f32 	%f83, %f73, %f82;
	sub.ftz.f32 	%f84, %f83, %f73;
	sub.ftz.f32 	%f85, %f82, %f84;
	add.ftz.f32 	%f86, %f83, %f60;
	neg.ftz.f32 	%f59, %f60;
	// inline asm
	add.rz.f32 	%f58, %f59, %f60;
	// inline asm
	add.ftz.f32 	%f87, %f58, %f85;
	add.ftz.f32 	%f88, %f86, %f87;
	sub.ftz.f32 	%f89, %f87, %f87;
	cvt.rn.f32.s32 	%f90, %r93;
	mov.f32 	%f91, 0f3F317200;
	mul.rn.f32 	%f92, %f90, %f91;
	mov.f32 	%f93, 0f35BFBE8E;
	mul.rn.f32 	%f94, %f90, %f93;
	add.ftz.f32 	%f95, %f92, %f88;
	sub.ftz.f32 	%f96, %f88, %f88;
	add.ftz.f32 	%f97, %f96, %f89;
	add.ftz.f32 	%f98, %f97, %f94;
	add.ftz.f32 	%f13, %f95, %f98;
	sub.ftz.f32 	%f14, %f98, %f98;
	// inline asm
	abs.f32 	%f61, %f220;
	// inline asm
	setp.gt.ftz.f32 	%p17, %f61, 0f77F684DF;
	@%p17 bra 	BB0_13;
	bra.uni 	BB0_14;

BB0_13:
	mov.f32 	%f100, 0f39000000;
	mov.f32 	%f101, 0f42A00000;
	mul.rn.f32 	%f220, %f101, %f100;

BB0_14:
	mov.f32 	%f102, 0f45800800;
	mul.rn.f32 	%f103, %f13, %f102;
	sub.ftz.f32 	%f104, %f13, %f103;
	add.ftz.f32 	%f105, %f104, %f103;
	sub.ftz.f32 	%f106, %f13, %f105;
	mul.rn.f32 	%f107, %f220, %f102;
	sub.ftz.f32 	%f108, %f220, %f107;
	add.ftz.f32 	%f109, %f108, %f107;
	sub.ftz.f32 	%f110, %f220, %f109;
	mul.rn.f32 	%f111, %f105, %f109;
	mul.rn.f32 	%f112, %f13, %f220;
	sub.ftz.f32 	%f113, %f111, %f112;
	mul.rn.f32 	%f114, %f105, %f110;
	add.ftz.f32 	%f115, %f113, %f114;
	mul.rn.f32 	%f116, %f106, %f109;
	add.ftz.f32 	%f117, %f115, %f116;
	mul.rn.f32 	%f118, %f106, %f110;
	add.ftz.f32 	%f119, %f117, %f118;
	mul.rn.f32 	%f120, %f14, %f220;
	add.ftz.f32 	%f121, %f120, %f119;
	add.ftz.f32 	%f122, %f112, %f121;
	sub.ftz.f32 	%f17, %f121, %f121;
	mov.f32 	%f223, %f17;
	mov.f32 	%f224, %f122;
	mov.b32 	 %r24, %f122;
	setp.eq.s32 	%p18, %r24, 1118925336;
	@%p18 bra 	BB0_15;
	bra.uni 	BB0_16;

BB0_15:
	add.s32 	%r70, %r24, -1;
	mov.b32 	 %f123, %r70;
	add.ftz.f32 	%f124, %f17, 0f37000000;
	mov.f32 	%f223, %f124;
	mov.f32 	%f224, %f123;

BB0_16:
	// inline asm
	mul.f32 	%f125, %f224, 0f3FB8AA3B;ex2.approx.f32 	%f125, %f125;
	// inline asm
	setp.neu.ftz.f32 	%p19, %f125, 0f7F800000;
	mov.f32 	%f221, %f125;
	@%p19 bra 	BB0_17;
	bra.uni 	BB0_18;

BB0_17:
	// inline asm
	mad.f32 	%f127, %f125, %f223, %f125;
	// inline asm
	mov.f32 	%f221, %f127;

BB0_18:
	not.pred 	%p21, %p3;
	or.pred  	%p23, %p13, %p21;
	mov.b32 	 %r71, %f221;
	xor.b32  	%r72, %r71, -2147483648;
	mov.b32 	 %f131, %r72;
	selp.f32 	%f222, %f221, %f131, %p23;
	bra.uni 	BB0_26;

BB0_19:
	mov.f32 	%f222, 0f7FFFFFFF;
	bra.uni 	BB0_26;

BB0_20:
	mov.b32 	 %r73, %f34;
	setp.lt.s32 	%p24, %r73, 0;
	@%p24 bra 	BB0_22;

	mov.f32 	%f222, 0f7F800000;
	bra.uni 	BB0_26;

BB0_22:
	selp.f32 	%f222, 0fFF800000, 0f7F800000, %p3;
	bra.uni 	BB0_26;

BB0_23:
	mov.b32 	 %r74, %f34;
	and.b32  	%r75, %r74, -2147483648;
	mov.b32 	 %f132, %r75;
	selp.f32 	%f222, %f132, 0f00000000, %p3;
	bra.uni 	BB0_26;

BB0_24:
	add.ftz.f32 	%f222, %f34, 0f42A00000;
	bra.uni 	BB0_26;

BB0_25:
	mov.f32 	%f222, 0f3F800000;

BB0_26:
	add.ftz.f32 	%f135, %f222, 0f3F800000;
	// inline asm
	rsqrt.approx.f32 	%f134, %f135;
	// inline asm
	mul.ftz.f32 	%f136, %f134, 0f42000000;
	div.approx.ftz.f32 	%f137, %f3, %f2;
	mul.ftz.f32 	%f138, %f137, %f137;
	add.ftz.f32 	%f139, %f2, %f3;
	div.approx.ftz.f32 	%f28, %f138, %f139;
	add.s32 	%r78, %r45, %r42;
	mad.lo.s32 	%r79, %r44, %r43, %r78;
	shl.b32 	%r80, %r79, 8;
	shl.b32 	%r83, %r53, 8;
	add.s32 	%r84, %r80, %r83;
	shl.b32 	%r87, %r51, 3;
	add.s32 	%r88, %r84, %r87;
	ld.param.u32 	%r90, [applyChirp_param_0];
	add.s32 	%r89, %r88, %r90;
	add.s32 	%r95, %r89, 1048576;
	mov.u32 	%r96, 128;
	mov.u32 	%r94, shr_2_local_DMs;

BB0_27:
	ld.global.v2.f32 	{%f181, %f182}, [%r95+-1048576];
	ld.global.v2.f32 	{%f183, %f184}, [%r95+-524288];
	ld.shared.f32 	%f149, [%r94];
	mul.ftz.f32 	%f144, %f149, %f28;
	// inline asm
	cos.approx.f32 	%f141, %f144;
	// inline asm
	// inline asm
	sin.approx.f32 	%f143, %f144;
	// inline asm
	mul.ftz.f32 	%f187, %f141, %f136;
	mul.ftz.f32 	%f188, %f143, %f136;
	mul.ftz.f32 	%f152, %f187, %f181;
	neg.f32 	%f155, %f188;
	fma.rn.ftz.f32 	%f156, %f155, %f182, %f152;
	mul.ftz.f32 	%f157, %f188, %f181;
	fma.rn.ftz.f32 	%f158, %f187, %f182, %f157;
	st.global.v2.f32 	[%r95+-1048576], {%f156, %f158};
	mul.ftz.f32 	%f160, %f187, %f183;
	fma.rn.ftz.f32 	%f162, %f155, %f184, %f160;
	mul.ftz.f32 	%f163, %f188, %f183;
	fma.rn.ftz.f32 	%f164, %f187, %f184, %f163;
	st.global.v2.f32 	[%r95+-524288], {%f162, %f164};
	ld.global.v2.f32 	{%f195, %f196}, [%r95];
	ld.global.v2.f32 	{%f197, %f198}, [%r95+524288];
	ld.shared.f32 	%f165, [%r94+4];
	mul.ftz.f32 	%f148, %f165, %f28;
	// inline asm
	cos.approx.f32 	%f145, %f148;
	// inline asm
	// inline asm
	sin.approx.f32 	%f147, %f148;
	// inline asm
	mul.ftz.f32 	%f201, %f145, %f136;
	mul.ftz.f32 	%f202, %f147, %f136;
	mul.ftz.f32 	%f168, %f201, %f195;
	neg.f32 	%f171, %f202;
	fma.rn.ftz.f32 	%f172, %f171, %f196, %f168;
	mul.ftz.f32 	%f173, %f202, %f195;
	fma.rn.ftz.f32 	%f174, %f201, %f196, %f173;
	st.global.v2.f32 	[%r95], {%f172, %f174};
	mul.ftz.f32 	%f176, %f201, %f197;
	fma.rn.ftz.f32 	%f178, %f171, %f198, %f176;
	mul.ftz.f32 	%f179, %f202, %f197;
	fma.rn.ftz.f32 	%f180, %f201, %f198, %f179;
	st.global.v2.f32 	[%r95+524288], {%f178, %f180};
	add.s32 	%r95, %r95, 2097152;
	add.s32 	%r94, %r94, 8;
	add.s32 	%r96, %r96, -2;
	setp.ne.s32 	%p25, %r96, 0;
	@%p25 bra 	BB0_27;

	ret;
}


