V 11
1
LANG:1 0 
PANEL,-1 -1 785 105 N "_3DFace" 2
"$databaselevel"
"$name"
"main()
{
  panelName=$name+\"Panel\";
  // set name
  shortName=navFunct_dpGetLastElement($name);
  name.text(shortName);
  
  // check if the required datapoint for this view are enabled and accessible
  if (dpExists(DPNAME_NAVIGATOR + g_navigatorID + \".updateTrigger.objectName\") ){
    if (dpConnect(\"updateTrigger\", DPNAME_NAVIGATOR + g_navigatorID + \".updateTrigger.objectName:_online.._value\",
                                   DPNAME_NAVIGATOR + g_navigatorID + \".updateTrigger.paramList:_online.._value\",
                                   DPNAME_NAVIGATOR + g_navigatorID + \".updateTrigger.objectName:_online.._invalid\") == -1) {
      LOG_ERROR(\"interactive_controller_small.pnl:main|Couldn't connect to: \"+DPNAME_NAVIGATOR + g_navigatorID + \".updateTrigger.objectName \"+ getLastError() );
    }
  } else {
    LOG_ERROR(\"interactive_controller_small.pnl:main|Couldn't find DP to connect to: \"+DPNAME_NAVIGATOR + g_navigatorID + \".updateTrigger.objectName\" );
  }	  
}

void updateTrigger( string dp1, string objectName,
                    string dp2, dyn_string paramList,
                    string dp3, bool invalid) {

  if (objectName == panelName) {
    LOG_TRACE(\"interactive_controller_small.pnl:main|updateTrigger: \"+$name+\" objectName: \"+objectName+
              \" panelName: \");
    string observation=\"\";
    string station = \"\";
    
    if (dynlen(paramList) > 0) {
      observation=paramList[1];
    }
    if ($databaselevel==\"main\") {
      reload(observation,MainDBName);
    } else if ($databaselevel==\"station\") {
      if (dynlen(paramList) > 1) {
        station=paramList[2];
        if (strtok(station,\":\") < 0) {
          station+=\":\";
        }
      }     
      reload(observation,station);
    } else if ( $databaselevel==\"ccu\") {
      reload(observation,navFunct_bareDBName(CEPDBName)+\":\");
    } 
  }
}" 0
 E "main(int x, int y)
{
  click();
}" 0
 "main()
{
  rClick();
}" 0
 "main(int x, int y)
{
  dblClick();
}" 0
 1 -1 -1 0  0 0
""0  1
E "#uses \"navPanel.ctl\"
#uses \"MainCU_Processes.ctl\"

string baseDP          = \"\";
string database        = \"\";
bool   connected       = false;
bool   bDoubleClicked  = false;
string panelName       = \"\";
string shortName       = \"\";

string oldError        = \"\";
string oldAction       = \"\";
string oldLogMsg       = \"\";

// routine for single mouse click
void click() {
  // set delay in case double click was meant
  delay(0, 100); 
  if (!bDoubleClicked) {
    navPanel_setEvent(shortName,\"EventClick\");
  }
}

// routine for double mouse click
void dblClick() {
  // indicate this is a doubleClick
  bDoubleClicked = true; 
  if (dpExists(baseDP) ) {
    LOG_DEBUG(\"interactive_controller_small.pnl:DoubleClick|Setting currentDatapoint from : \"+g_currentDatapoint+\" to \"+baseDP);
    g_currentDatapoint=baseDP;
    navPanel_setEvent(shortName,\"ChangePanel\");  
  }
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;
}

// routine for right mouse click
void rClick() {
  navPanel_setEvent(shortName,\"EventRightClick\");
}

// ****************************************
// Name : reload
// ****************************************
// Description:  
//   on a change of basedp disconnect from old datapoints and connect to the new ones.
//
// Params:
//   obsBDP       :  BaseDatapoint from which this one will be formed
//   station      :  if empty object will be set invisible/disabled
//                   if not it will point to the station where the datapoint resides
//
// ***************************************
void reload(string obsBDP,string station) {
  LOG_DEBUG(\"interactive_controller_small.pnl:reload| entered: \"+obsBDP+\" connected=\"+connected+\" old baseDP=\"+baseDP+\" station: \"+station );
  
  if (baseDP == obsBDP) {
    return;
  }
  
  if (station == \"\" || station == MainDBName) {
    string Dp=MainDBName+dpSubStr(obsBDP,DPSUB_DP);
    obsBaseDP=Dp;
    visible(false);
  } else {
    string Dp=station+dpSubStr(obsBDP,DPSUB_DP);
    obsBaseDP=Dp;
    visible(true);
  }
  
  if (connected) {
    oldError=\"\";
    oldAction=\"\";
    oldLogMsg=\"\";
    if (dpExists(baseDP)+\".process.error\") {
      dpDisconnect(\"update\", baseDP +\".process.error:_online.._value\",
                             baseDP +\".process.currentAction:_online.._value\",
                             baseDP +\".process.logMsg:_online.._value\",
                             baseDP +\".process.error:_online.._invalid\");
    }
    connected=false;
  }
  baseDP=obsBaseDP+\"_\"+$name;
  LOG_DEBUG(\"interactive_controller_small.pnl:reload|new baseDP: \"+baseDP);
  

  // check if the required datapoint for this view are enabled and accessible
  if (dpExists(baseDP+\".process.error\")) {
    if (dpConnect(\"update\", baseDP +\".process.error:_online.._value\",
                            baseDP +\".process.currentAction:_online.._value\",
                            baseDP +\".process.logMsg:_online.._value\",
                            baseDP +\".process.error:_online.._invalid\") == -1) {
    } else {
      if (!navFunct_dpReachable(baseDP)) {
        update(\"\",\"\",\"\",\"\",\"\",\"\",\"\",true);
      }
      connected=true;
    }
  } else {
    LOG_WARN(\"interactive_controller_small.pnl:reload|Couldn't find DP to connect to: \"+baseDP);
    myTable.deleteAllLines();
  }	
  // pass baseDP to selfstate Object to work with
  setValue(\"selfState.light\",\"toolTipText\",baseDP);
  // connect for selfUpdates
  showSelfState(baseDP);
}

// ****************************************
// Name : update
// ****************************************
// Description:  
//   callback when a datapoint is triggered because of a change in the data
//
// ***************************************
update(string dp1, string error,
       string dp2, string currentAction,
       string dp3, string logMsg,
       string dp4, bool invalid)
{
  string col=\"Lofar_operational\";
  if (invalid) {
    if (dp1 == \"\") {
      col=\"Lofar_dpOffline\";
    } else {
      col = \"Lofar_invalid\";
    }
  } else if (!connected) {
    col = \"Lofar_off\";
  }
  // check if error == \"Not running\";
  // if true then the name of the process is red, otherwise black
  if (error == \"Not running\") {
    name.foreCol() = \"Lofar_broken\";
  } else {
    name.foreCol() = \"_3DText\";
  }
  
  myTable.deleteAllLines();
  myTable.appendLine(\"error\",error,\"currentAction\",currentAction,\"logMsg\",navFunct_getLogColor(logMsg,navFunct_getLogLevel(logMsg)));  
  myTable.appendLine(\"error\",oldError,\"currentAction\",oldAction,\"logMsg\",navFunct_getLogColor(oldLogMsg,navFunct_getLogLevel(logMsg)));
  oldError  = error;
  oldAction = currentAction;
  oldLogMsg = logMsg;  
}

void visible(bool visible) {
//  childStateBorder.visible(visible);
//  selfState.visible(visible);
//  name.visible(visible);
//  myTable.visible(visible);
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
6 4
"myHighlight"
""
1 100 110 E E E 1 E 0 E N "_Transparent" E N "Lofar_highLight" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

4 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  dpConnect( \"callback\",true,DPNAME_NAVIGATOR + g_navigatorID +\".objectTrigger\" );
}

void callback(string dp1, bool aTrig) {
  
  LOG_DEBUG(\"interactive_controller_small.pnl:callback| ObjectTrigger Callback on: \"+dp1+\" trigger: \"+aTrig);
  LOG_DEBUG(\"interactive_controller_small.pnl:callback|Found highlight : \" + highlight + \" Looking for: \"+shortName);
  bool bHighlight=false;
  if (dynContains(highlight,shortName)) {
    bHighlight=true;
  }
  LOG_DEBUG(\"interactive_controller_small.pnl:callback|Highlight request: \"+bHighlight);
  myHighlight.visible=bHighlight;  
}" 0
 "main()
{
  click();
}" 0
 0 1 1 2 1 E U  1 E 0 0 649 51
6 3
"childStateBorder"
""
1 100 100 E E E 1 E 1 E N {0,0,0} E N "_3DFace" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E "main()
{
  click();
}" 0
 0 2 1 2 1 E U  1 E 5 5 644 46
1 7 0 "" 1
0
25 2
"myTable"
""
1 184 3.10714285714286 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
2 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  118 4 644 46
EE 0 0 1 3 1 "error" 7 1 0 "s" 1
LANG:1 5 error
E
1
LANG:1 0 

75 "currentAction" 8 1 0 "s" 1
LANG:1 13 currentAction
E
1
LANG:1 0 

80 "logMsg" 40 1 0 "s" 1
LANG:1 6 logMsg
E
1
LANG:1 0 

370 
19 19 "" 1 1
LANG:1 2 #1
10 150
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 0 0 0 1 7
1 0
2 6
"name"
""
1 10 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 10 10 40 23
0 2 2 "0s" 0 0 0 192 0 0  10 10 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 4 name
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
3 0 "selfState" -1
"objects\\lofar_self_state.pnl" 9.500000000000011 9.5 T 1 1 0 1 -0.499999999999992 10.5
0
0
