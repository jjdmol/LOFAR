#!/usr/bin/perl

usage() if ($#ARGV < 0);

$command=$ARGV[0];

sub usage
{
    print "Usage: appctl ( start <.ns basename> [output dir]\n";
    print "              | stop  <.ns basename> [output dir]\n";
    print "              | linkstatus)\n";
    print "Usage: e.g: appctl start app /tmp\n";
    exit;
}

SWITCH: {

    if ($command =~ /start.*/) {

	$runlocal = 0;
	if ($command =~ /startlocal/) { $runlocal = 1; }

	usage() if ($#ARGV < 1);
	$file=$ARGV[1];
	$outputdir="";
	$outputdir=$ARGV[2] if ($#ARGV == 2);

	readfile($file);
	start($file) || die "Failed to start application.\n";
	print "Application started.\n";
	last SWITCH;
    }
    if ($command =~ /stop.*/) {

	$runlocal = 0;
	if ($command =~ /stoplocal/) { $runlocal = 1; }

	usage() if ($#ARGV < 1);
	$file=$ARGV[1];
	$outputdir="";
	$outputdir=$ARGV[2] if ($#ARGV == 2);

	readfile($file);
	stop() || die "Failed to stop application.\n";
	print "Application stopped.\n";
	last SWITCH;
    }
    if ($command =~ /linkstatus/) {
	linkstatus();
	last SWITCH;
    }

    die "Unknown command '$command'.\n";
}

sub readfile
{
    my $nsfile = shift(@_);

    open(nsfile, "$nsfile.ns") || die "Couldn't open '$nsfile.ns': $!.\n";

    while(<nsfile>)
    {
	# skip comment lines and blank lines
	next if (/^\#.*/);
	next if (/^\ *$/);
	
      SWITCH: {

	  # match lines with [.*] = start of new section
	  /^\[(.*)\]/ && do {
	      
	      $name=$1;
	      $host="";
	      $cmd="";
	      
	      last SWITCH;
	  };
	  
	  # match host= line
	  /^host=(.*)/ && do {
	      
	      $host=$1;
	      if ($runlocal) { $host = "localhost"; }
	      
	      last SWITCH;
	  };
	  
	  # match cmd= line
	  /^cmd=(.*)/ && do {
	      
	      $cmd=$1;
	      
	      last SWITCH;
	  };
      }
	
	#
	# we have all the info, let's check
	# whether we are on the host and if
	# so run the command
	#
	if ($host =~ ".+" && $cmd =~ ".+")
	{
	    if ($host =~ "localhost") {
		$host = `uname -n`;
		chop $host;
	    }
	    $tasks{$host}{$name} = $cmd;
	}
    }

    close(nsfile);
}

sub start
{
    my $host;
    my $nsfile = shift(@_);

    $host = `uname -n`;
    chop $host;

    foreach $name (keys %{ $tasks{$host}})
    {
	$cmd=$tasks{$host}{$name};

	if ($runlocal) { $cmd .= " --runlocal "; }

	$user=$ENV{"USER"};
	if ($outputdir =~ ".+")
	{
	    $cmd .= " -sfp $nsfile --name $name > $outputdir/$name.$user.log 2>&1 &";
	}
	else
	{
	    $cmd .= " -sfp $nsfile --name $name &";
	}
	$ENV{"AVIARY_TASKNAME"} = $name;
 	$err = system($cmd);
 	if ($err != 0)
 	{
 	    print "Error running '$cmd' on '$host'\n";
 	}
    }
    
    return 1;
}

sub stop
{
    my $host;

    $host = `uname -n`;
    chop $host;

    foreach $name (keys %{ $tasks{$host}})
    {
	$cmd=$tasks{$host}{$name};
 	@process = split(/ /, $cmd);
	$deathrow{$process[0]}=1;
    }

    foreach $process (keys %deathrow)
    {
	$cmd = "killall -- `basename $process`";
 	$err = system($cmd);
 	if ($err != 0)
 	{
# 	    print "Error running '$cmd' on '$host'\n";
 	}
    }

    return 1;
}

sub checklink
{
    my $prefix = shift(@_);
    my $from_host = shift(@_);
    my $to_host = shift(@_);

    my $ping = "ssh $from_host ping -a -c 2 -w 4 $to_host > /dev/null 2>&1";

    if (0 == system("$ping"))
    {
	print "$prefix: $from_host -> $to_host OK\n";
    }
    else
    {
	print "$prefix: $from_host -> $to_host !!! FAIL\n";
    }	
}
    
sub linkstatus
{
    checklink("ctrllink", "peacock", "falcon");
    checklink("ctrllink", "falcon", "pelican0");
    checklink("ctrllink", "falcon", "pelican1");
    checklink("ctrllink", "falcon", "pelican2");    
    checklink("ctrllink", "falcon", "pelican3");
    checklink("datalink", "falcon", "dpelican0");
    checklink("datalink", "falcon", "dpelican1");
    checklink("datalink", "falcon", "dpelican2");    
    checklink("datalink", "falcon", "dpelican3");
}
