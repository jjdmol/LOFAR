#!/bin/sh

# tParmFacadeDistr.run: Script to test class ParmFacadeDistr
#
# Copyright (C) 2008
# ASTRON (Netherlands Institute for Radio Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
#
# This file is part of the LOFAR software suite.
# The LOFAR software suite is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The LOFAR software suite is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with the LOFAR software suite. If not, see <http://www.gnu.org/licenses/>.
#
# $Id$


# If first argument is non-empty, only the files are created.
# It makes it possible to run the debugger on tParmFacadeDistr.

# Set srcdir if undefined (if run outside 'make check')
if test "$srcdir" = ""; then
  srcdir=../../../../../LOFAR/CEP/ParmDB/test
fi
curdir=`pwd`
srcdir=`cd $srcdir/../src > /dev/null && pwd`
exedir=`cd ../src > /dev/null && pwd`
mwsdir=`cd $srcdir/../../LMWCommon/src > /dev/null && pwd`
mwedir=`cd ../../LMWCommon/src > /dev/null && pwd`

# Extend PATH.
PATH=$curdir:$srcdir:$exedir:$mwsdir:$mwedir:$PATH
export PATH


# The test uses 2 remote pdb-s, so create them.
echo "Filling pdb1"
../src/parmdbm <<EOF > tParmFacadeDistr_tmp.pdbout
 create tablename='tParmFacadeDistr_tmp.pdb1'
 add parm1 domain=[1,4,5,10],values=2
 add parm2 type='polc', domain=[1,4,5,10], values=[2,0.1], nx=2
 adddef parmdef values=[3,1], nx=2
 quit
EOF
if [ $? != 0 ]; then
  cat tParmFacadeDistr_tmp.pdbout
  exit 1
fi
echo "Filling pdb2"
../src/parmdbm <<EOF > tParmFacadeDistr_tmp.pdbout
 create tablename='tParmFacadeDistr_tmp.pdb2'
 add parm1 domain=[7,10,5,10],values=3
 add parm2 type='polc', domain=[7,10,5,10], values=[6,0.3], nx=2
 adddef parmdef values=[3,1], nx=2
 quit
EOF
if [ $? != 0 ]; then
  cat tParmFacadeDistr_tmp.pdbout
  exit 1
fi
fname1=`pwd`/tParmFacadeDistr_tmp.pdb1
fname2=`pwd`/tParmFacadeDistr_tmp.pdb2
cdname=`pwd`/tParmFacadeDistr_tmp.cd

echo "Creating cd and vd files"
cat > tParmFacadeDistr_tmp.cd <<EOF
ClusterName = cl
NNodes = 1
Node0.NodeName = localhost
Node0.NodeFileSys = [node1:/usr]
Node0.NodeMountPoints = [/usr]
EOF
cat > tParmFacadeDistr_tmp.pdb.vd <<EOF
Name = /usr/local/xyx
FileSys = 
ClusterDesc = $cdname
StartTime = 0
EndTime = 2
StepTime = 0.5
NChan = [64,128]
StartFreqs = [1,4]
EndFreqs = [7,10]
NParts = 2

Part0.Name = /usr/local/xyx0.vds
Part0.FileName = $fname1
Part0.FileSys = node1:/usr
Part0.StartTime = 0
Part0.EndTime = 2
Part0.StepTime = 0.5
Part0.NChan = [64,128]
Part0.StartFreqs = [1,2.5]
Part0.EndFreqs = [2.5,4]
Part1.Name = /usr/local/xyx0.vds
Part1.FileName = $fname2
Part1.FileSys = node1:/usr
Part1.StartTime = 0
Part1.EndTime = 2
Part1.StepTime = 0.5
Part1.NChan = [64,128]
Part1.StartFreqs = [7,8.5]
Part1.EndFreqs = [8.5,10]
EOF

if test "$1" = ""; then
  $LOFAR_CHECKTOOL ./tParmFacade tParmFacadeDistr_tmp.pdb.vd '*' 12 2 > tParmFacadeDistr_tmp.out1
  echo ""
  $LOFAR_CHECKTOOL ./tParmFacade tParmFacadeDistr_tmp.pdb.vd '*1' 3 2 > tParmFacadeDistr_tmp.out2
  # Only print the parts between >start< and >end<.
  # The other output is created by startdistproc and is too system specific.
  sed -n -e '/^>start</,/^>end</p' tParmFacadeDistr_tmp.out1
  sed -n -e '/^>start</,/^>end</p' tParmFacadeDistr_tmp.out2
  # Remove the parmdbremote log files.
  rm -f parmdbremote.log_*
fi
