#!/bin/sh

# calibrate: script to calibrate a single MS.
#
# Copyright (C) 2009
# ASTRON (Netherlands Institute for Radio Astronomy)
# P.O.Box 2, 7990 AA Dwingeloo, The Netherlands
#
# This file is part of the LOFAR software suite.
# The LOFAR software suite is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The LOFAR software suite is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with the LOFAR software suite. If not, see <http://www.gnu.org/licenses/>.
#
# $Id$


#
#  FUNCTIONS
#

error()
{
    echo "error: ${1}"
    exit 1
}


#
# MAIN
#

# Identify ourselves.
echo "calibrate-part (script to calibrate a single MS)"
echo

# Check argument count.
if test $# != 20; then
  echo "usage:"
  echo "    calibrate-part <ignored> <ignored> <ignored> <ignored> rank"
  echo "        part filesystem partvds envfile lofarroot wd key db-host"
  echo "        db-port db-name db-user parmdb sourcedb add-columns dry"
  exit 1
fi

shift
shift
shift
shift
shift   # ignore rank
part=${1}
filesys=${2}
partvds=${3}
envfile=${4}
lofarroot=${5}
wd=${6}
key=${7}
db_host=${8}
db_port=${9}
db_name=${10}
db_user=${11}
parmdb=${12}
sourcedb=${13}
add_columns=${14}
dry=${15}

echo "arguments:"
echo "    part: ${part}"
echo "    filesys: ${filesys}"
echo "    part vds: ${partvds}"
echo "    wd: ${wd}"
echo "    envfile: ${envfile}"
echo
echo "    lofarroot: ${lofarroot}"
echo
echo "    key: ${key}"
echo -n "    db: ${db_host}"
if test -n "${db_port}"; then
    echo ":${db_port}"
else
    echo
fi
echo "    db name: ${db_name}"
echo "    db user: ${db_user}"
echo "    parmdb: ${parmdb}"
echo "    sourcedb: ${sourcedb}"
echo "    add_columns: ${add_columns}"
echo "    dry: ${dry}"
echo

# Initialize environment.
if test "${envfile}" != ""; then
  . ${envfile}
fi

# Initialize lofar environment.
if test ! -r "${lofarroot}/lofarinit.sh"; then
    error "${lofarroot}/lofarinit.sh does not exist or cannot be read"
fi
. ${lofarroot}/lofarinit.sh

# Check preconditions.
if test ! -d "${part}"; then
    error "not a directory: ${part}"
fi

if test ! -d "${part}/${sourcedb}"; then
    error "not a directory: ${part}/${sourcedb}"
fi

if test ! -d "${part}/${parmdb}"; then
    error "not a directory: ${part}/${parmdb}"
fi

if test ! -d "${wd}"; then
    error "not a directory: ${wd}"
fi

# Set to working directory.
cd "${wd}" || error "could not change to: ${wd}"


#
# ADD "IMAGING COLUMNS" (MODEL_DATA, CORRECTED_DATA, IMAGE_WEIGHTS) TO MS
#

if test ${add_columns} -eq 1; then
    echo "addImagingColumns.py \"${part}\""

    if test "${dry}" != "dry"; then
        addImagingColumns.py "${part}"
        if test $? -ne 0 ; then
            echo "addImagingColumns.py ${part} failed"
            exit 1
        fi
    fi
fi


#
# EXECUTE MAIN PROCESS
#

port_option=
if test -n "${db_port}"; then
    port_option="--db-port=\"${db_port}\""
fi

echo "execute bbs-reducer --distributed --sourcedb=\"${part}/${sourcedb}\" --parmdb=\"${part}/${parmdb}\" --key=\"${key}\" --db-name=\"${db_name}\" --db-host=\"${db_host}\" ${port_option} --db-user=\"${db_user}\" \"${filesys}\" \"${part}\" > \"${key}_kernel_$$.log\" 2>&1"
if test "${dry}" != "dry"; then
    bbs-reducer --distributed --sourcedb="${part}/${sourcedb}" --parmdb="${part}/${parmdb}" --key="${key}" --db-name="${db_name}" --db-host="${db_host}" ${port_option} --db-user="${db_user}" "${filesys}" "${part}" > "${key}_bbs-reducer_$$.log" 2>&1
fi
