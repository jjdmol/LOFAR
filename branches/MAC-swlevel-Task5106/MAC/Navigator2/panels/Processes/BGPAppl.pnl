V 11
1
LANG:1 0 
PANEL,-1 -1 1200 823 N "_3DFace" 0
"main()
{
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");
  
  baseDP         = g_currentDatapoint;
  database = dpSubStr(baseDP,DPSUB_SYS);


  
  // determine if we have an observation name in the DP, if so strip it and  get the real name to be included in the toplabel
  string bareDP=dpSubStr(baseDP,DPSUB_DP);
 

  //  The BGPappl belonging by an observation contains :
  //      ioNodeList   (all IoNodes involved, each ionode  is connected to a station, obtainable via ionode#.usedStation)
  //       and all of the next lists are contained per ionode in a [,,,] list
  //      locusNodeList       [x,x,x] list all used locusNodes per ionode
  //      adderList           [x,x,x] adders per ionode
  //      writerList          [x,x,x] writers per ionode
  //      dataProductList     [x,x,x] dataproducts per ionode
  //      dataProductTypeList [x,x,x] dataproductTypes per ionode
  
  // check if the requiered datapoint for this view are enabled and accessible
  if (dpExists(baseDP + \".ioNodeList\")) {
    if (dpConnect(\"updateBGPAppl\", baseDP + \".ioNodeList\",
                                   baseDP + \".adderList\",
                                   baseDP + \".ioNodeList:_online.._invalid\") == -1) {
      LOG_ERROR(\"BGPAppl.pnl:main|Couldn'tconnect to: \"+baseDP);
    }
    if (!navFunct_dpReachable(baseDP)) {
      updateBGPAppl(\"\",makeDynString(\"\"),\"\",makeDynString(\"\"),true);
    }
  } else {
    LOG_ERROR(\"BGPAppl.pnl:main|Couldn't find DP to connect to: \"+baseDP);
    setValue(\"stationTable\", \"backCol\", \"Lofar_dpdoesnotexist\");
  } 
  
  reload();   
}

updateBGPAppl(string dp1,dyn_string ioNodeList,
              string dp2,dyn_string adderList,
              string dp3, bool invalid)
{
  LOG_TRACE(\"BGPAppl.pnl:updateBGPAppl|entered\");
  string SymbolCol=\"_Window\";
  if (invalid) {
    SymbolCol=\"Lofar_invalid\";
    if (dp1 == \"\") {
      SymbolCol=\"Lofar_dpOffline\";
    }
  }  
  dyn_string stations;
      
  // clear stationtable
  stationTable.deleteAllLines();
  
  // loop over nr of ionodes to fill table
  for (int i = 1; i <= dynlen(ioNodeList); i++) {
    string station;

    dpGet(navFunct_IONode2DPName(ioNodeList[i])+\".usedStation\",station);
    dynAppend(stations,station); 
    // update stationTable
    stationTable.appendLine(\"Station\",station,\"IONode\",ioNodeList[i],\"Adders\",adderList[i]);
  }
  
  stationList = stations;
  nodeList = ioNodeList;
  // set the observation selectable items
  prepareProcesses();

}


void prepareProcesses() {
  dyn_string result;
  
  // append _BGPAppl
  dynAppend(result,\",BGPAppl,\"+baseDP);
  dynAppend(g_processesList,baseDP);
  // append all involved stations
  for (int i=1; i <= dynlen(stationList); i++) {  
    dynAppend(result,baseDP+\",BGLProc->\"+stationList[i]+\",\"+baseDP+\"_BGPProc#\"+nodeList[i]);    
  }
  dynAppend(g_processesList,baseDP+\"_BGPProc\");
  
  // write result to the db so various panels can reset themselves  
  dpSet(DPNAME_NAVIGATOR + g_navigatorID + \".processesList\",result);
  
  LOG_DEBUG(\"BGPAppl.pnl:prepareProcesses|processList found: \"+ result);    
  
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"BGPAppl.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"BGPAppl.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    
    reload();
  } else if (actionString[1] == \"DistChanged\") {
    // for dist system bound hardware only, if the distsystem went offline we need to replace 
    // the screen with a broken connection screen.
    if (!g_initializing) {
    
      // check if this syst is in the connectionlist and down
      int iPos=dynContains(g_connections[\"NAME\"],sysName);
      if (iPos > 0) {
        if (!g_connections[\"UP\"][iPos]) {
          navPanel_setEvent(\"invalid DP\",\"ChangePanel\");
        }
      }
    }
    return;
  }
}

void reload() {
  
  navFunct_clearGlobalLists();
  
  // set panel to ready
  g_objectReady=true;
  
  // trigger that the panel values are calculated and ready
  navPanel_setEvent(\"BGPAppl.pnl\",\"Update\");
}
" 0
 E E E E 1 -1 -1 0  49 92
""0  1
E "#uses \"navPanel.ctl\"

string baseDP=\"\";
string database=\"\";
string observation=\"\";
string observationName = \"\";
dyn_string stationList=\"\";
dyn_string nodeList=\"\";
bool   bDoubleClicked  = false;

// routine for single mouse click
void click(int row) {
  // set delay in case double click was meant
  delay(0, 100); 
  if (!bDoubleClicked) {
    string station = stationTable.cellValueRC(row,\"Station\");
    navPanel_setEvent(station,\"EventClick\");
  }
}

// routine for double mouse click
void dblClick(int row) {
  // indicate this is a doubleClick
  bDoubleClicked = true; 

  string IONode = stationTable.cellValueRC(row,\"IONode\");
  if (IONode != \"\") {
    string selection = baseDP+\"_BGPProc#\"+IONode;
    navPanel_setEvent(selection,\"ChangePanel\");  
  }
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;
}

// routine for right mouse click
void rClick(int row) {
  navPanel_setEvent(\"BGPAppl\",\"EventRightClick\");
}
" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
1 43 0 "" 0
0
1 44 0 "0" 1
0
1 45 0 "" 2
0
1 46 0 "" 3
0
1 47 0 "" 7
0
1 48 0 "" 8
0
1 49 0 "" 9
0
1 50 0 "" 10
0
1 51 0 "" 11
0
1 52 0 "" 12
0
1 53 0 "" 15
0
1 54 0 "" 16
0
1 55 0 "" 17
0
1 56 0 "" 18
0
1 57 0 "" 19
0
1 58 0 "" 20
0
25 42
"stationTable"
""
1 30 570 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 "main(int row, string column)
{
  rClick(row);
}" 0
 "main(int row, string column)
{
  dblClick(row);
}" 0

12 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  28 568 422 732
"main()
{
  stationTable.tableMode(TABLE_SELECT_BROWSE);
  
  // connect for highlight mechanism
  dpConnect( \"bgpapplCallback\",true,DPNAME_NAVIGATOR + g_navigatorID +\".objectTrigger\" );
}

void bgpapplCallback(string dp1, bool aTrig) {
  
  LOG_DEBUG(\"Observation_small.pnl:bgpapplCallback|ObjectTrigger Callback on: \"+dp1+\" trigger: \"+aTrig);
  LOG_DEBUG(\"Observation_small.pnl:bgpapplCallback|Found highlight : \" + highlight + \" BGPAppl\");
  int lineNr=-1;
  for (int i=0; i< stationTable.lineCount(); i++) {
    stationTable.currentCell(i,0);
    if (dynContains(highlight,stationTable.cellValueRC(i,\"Station\"))) {
      stationTable.cellBackCol(\"Lofar_highLight\");
      lineNr=i;
    } else {
      stationTable.cellBackCol(\"white\");
    }      
  }
}" 0
"main(int row, string column, string value)
{
  click(row);
}" 0
 1 0 1 3 0 "Station" 10 1 0 "s" 1
LANG:1 7 Station
E
1
LANG:1 0 

100 "IONode" 7 1 0 "[2d,False,False,ALIGNMENT_BEGINNING,False]" 1
LANG:1 6 IONode
E
1
LANG:1 0 

75 "Adders" 21 1 0 "s" 1
LANG:1 6 Adders
E
1
LANG:1 0 

200 
14 14 10 10
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0 0 1 0 1 7
1 0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
3 0 "PANEL_REF1" -1
"objects\\Processes\\controller_top.pnl" 49 92 T 0 1 0 1 1.4432899320127e-014 -40
1
"$ctrlName""BGPAppl"
0
