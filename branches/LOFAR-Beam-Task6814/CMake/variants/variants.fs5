## -*- CMake -*-
##
## Host specific variants file. 
## Settings in this file extend or override those in the global variants file.
##
## $Id$

option(USE_LOG4CPLUS "Use Log4Cplus" ON)
option(USE_OPENMP    "Use OpenMP"    ON)
option(USE_MPI       "Use MPI"       ON)
# To build Cobalt, you must also enable USE_CUDA or USE_OPENCL (not both).

set(CUDADRIVER_ROOT_DIR     $ENV{CUDA_ROOT})
set(CUDA_TOOLKIT_ROOT_DIR   $ENV{CUDA_PATH})
set(LOG4CPLUS_ROOT_DIR      /home/jenkins/root)
set(CASACORE_ROOT_DIR       /home/jenkins/root)
set(CASAREST_ROOT_DIR       /home/jenkins/root)
set(CFITSIO_ROOT_DIR        /home/jenkins/root)
set(PYRAP_ROOT_DIR          /home/jenkins/root)
set(LIBSSH2_ROOT_DIR        /home/jenkins/root)
set(BLITZ_ROOT_DIR          /home/jenkins/root)
set(VALGRIND_ROOT_DIR       /home/jenkins/root)  # also in /usr, but ours has --with-mpicc=... (and includes, but we don't use them)
set(PQ_ROOT_DIR             /usr/pgsql-8.4)
set(DAL_ROOT_DIR            /home/jenkins/root)
set(UNITTEST++_ROOT_DIR     /cm/shared/apps/UnitTest++)

# To build MAC without deps on PVSS, pass -DBUILD_GCFPVSS=OFF. Run cmake a 2nd time to propagate.
#set(BUILD_GCFPVSS        OFF)

# The file /usr/lib64/boost/BoostConfig.cmake in the package boost-devel-1.41
# that ships with CentOS 6.3 seems to be broken. Setting Boost_NO_BOOST_CMAKE
# will ignore it.
set(Boost_NO_BOOST_CMAKE ON)


# To use gcc 4.8.1 also use a newer boost.
#set(BOOST_ROOT_DIR          /cm/shared/package/boost/1_54_0-gcc-4.8.1)
#set(Boost_ADDITIONAL_VERSIONS "1.54" "1.54.0")
#set(Boost_NO_SYSTEM_PATHS   ON)

# Enable gcc 4.8.1. If gcc does not have libbfd built (also) as a shared library,
# you get linker errors about static libs and -fPIC. Work around by passing to
# CMake -DUSE_BACKTRACE=OFF to get it into the CMake cache.
#set(GNU_C         /cm/shared/package/gcc/4.8.1/bin/gcc)
#set(GNU_CXX       /cm/shared/package/gcc/4.8.1/bin/g++)
#set(GNU_Fortran   /cm/shared/package/gcc/4.8.1/bin/gfortran)
#set(GNU_ASM       /cm/shared/package/gcc/4.8.1/bin/gcc)

