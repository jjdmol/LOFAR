V 10
1
LANG:1 8 (NoName)
PANEL,192 334 803 337 N "_3DFace" 0
EEE E E 1 -1 -1 0  -1 -1
"" 0 1
EE 2
"CBRef""1"
"EClose"E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
25 1
"table"
"AlertRow"
1 -15 -87 E E E 1 E 1 E N "STD_text" E N "_3DFace" E "// SimpleCtrlScriptStart {valid}
// SimpleCtrlScript {alertConfirm}
// dp {dpid}
// time {time}
// count {count}
// confirmable {ackable}
// SimpleCtrlScriptEnd
main()
{
   bool confirmable, valid, stopped;
   int i, count, start, end;
   string dpStr, k_dpStr;
   time t;

   getValue( \"\", \"stop\", stopped );
   if ( !stopped )
     setValue(\"\", \"stop\", true );
   getValue( \"\", \"lineRangeVisible\", start, end );
   setValue( \"\", \"sortPart\", start, end, \"time\", \"count\" );
   for( i = start; i <= end; i++ )
   {
     setValue( \"\", \"currentCellCAC\", i, 0 );
     getValue( \"\", \"valid\", valid );
     if ( valid )
     {
        setValue( \"\", \"currentColumnCAC\", \"dpid\" );
        getValue( \"\", \"cellValueCAC\", dpStr );
        k_dpStr = dpSubStr(dpStr, DPSUB_DP_EL_CONF_DET);
        if (dpSubStr(dpStr, DPSUB_CONF_DET) == dpSubStr(dpStr, DPSUB_CONF))
          k_dpStr = k_dpStr + \".\";
        k_dpStr+= \".quitt_zust\";
        setValue( \"\", \"currentColumnCAC\", \"time\" );
        getValue( \"\", \"cellValueCAC\", t );
        setValue( \"\", \"currentColumnCAC\", \"count\" );
        getValue( \"\", \"cellValueCAC\", count );
        setValue( \"\", \"currentColumnCAC\", \"ackable\" );
        getValue( \"\", \"cellValueCAC\", confirmable );
        if ( confirmable )
          alertSet( t, count, k_dpStr, DPATTR_ACKTYPE_MULTIPLE );
     }
   }
   if( !stopped )
     setValue( \"\", \"stop\", false );
   setValue( \"\", \"sortUndo\", 0 );
}
" 0

 E E
2 0 0 0 0 0
EE E
0
2
LANG:1 0 
LANG:0 0 
0
2
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
LANG:0 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
18 18 772 282
"dyn_bool g_colVis;           // holds the flag wheter an optional column is visible or not
string   g_connectId;        // holds id of current query
dyn_int  g_counterConnectId; // holds numbers of Id's
time     g_timeLastUpdate;   // holds time of the last update
string   g_dpCommentFilter;  // store filter
bool     g_showInternals;
unsigned g_maxClosedLines;   // max num of lines to be queried by closed protocoll
unsigned g_state;            // alert-state filter

int      g_busyThread;    // id of thread, which shows busyness

int      g_maxLines;      // num of max lines in open protocoll

// TI 14075 (discarding pending values)
int        g_discardThread;
time       g_discardStart;
bool       g_discarded;
const time MINCB_TIME = 2;
const time MAXCB_TIME = 5;

//-------------------------------------------------------------------------

main()
{
  as_init();
}
" 0
 E 0 0 1 22 3 "_abbr" 0 1 0 "s" 1
LANG:1 5 Abbr.
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 34 "_prior" 0 1 0 "s" 1
LANG:1 8 Priority
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 24 "timeStr" 0 1 0 "s" 1
LANG:1 4 Time
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 130 "dpElement" 0 0 0 "s" 1
LANG:1 10 DP element
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 200 "dpComment" 0 1 0 "s" 1
LANG:1 9 Datapoint
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 308 "_text" 0 1 0 "s" 1
LANG:1 10 Alert text
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 132 "direction" 0 1 0 "s" 1
LANG:1 9 Direction
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 50 "_value" 0 0 0 "s" 1
LANG:1 5 Value
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 120 "ack" 0 1 0 "s" 1
LANG:1 15 Acknowledgement
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 24 "commentStr" 0 0 0 "s" 1
LANG:1 7 Comment
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 56 "_ack_time" 0 0 0 "s" 1
LANG:1 8 Ack.time
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 112 "_partner" 0 0 0 "s" 1
LANG:1 12 Partner time
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 56 "_comment" 0 1 0 "s" 1
LANG:1 14 Comment number
"main(int row)
{
  as_commentAction(row, \"vision/SC/AS_detail\");
}" 0
1
LANG:1 0 
 24 "_panel" 0 0 0 "s" 1
LANG:1 1 >
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 24 "detail" 0 1 0 "s" 1
LANG:1 3 ...
"main(int row)
{
  as_detailAction(row, \"vision/SC/AS_detail\");
}" 0
1
LANG:1 0 
 24 "ackable" 0 0 0 "s" 1
LANG:1 7 ackable
E1
LANG:1 0 
 24 "oldest_ack" 0 0 0 "s" 1
LANG:1 6 oldest
E1
LANG:1 0 
 56 "_ack_user" 0 0 0 "s" 1
LANG:1 4 User
"main(int row, string col)
{
  as_cellAction(row, col);
}" 0
1
LANG:1 0 
 56 "partner" 0 0 0 "s" 1
LANG:1 7 Partner
E1
LANG:1 0 
 56 "dpid" 0 0 0 "s" 1
LANG:1 4 dpid
E1
LANG:1 0 
 200 "count" 0 0 0 "s" 1
LANG:1 3 #21
E1
LANG:1 0 
 56 "time" 0 0 0 "s" 1
LANG:1 4 time
E1
LANG:1 0 
 168 26 26 "" 1 1
LANG:1 2 #1
"" 1 1
LANG:1 2 #2
"" 1 1
LANG:1 2 #3
8 16 2
LANG:1 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
LANG:0 106 -microsoft windows-Arial-normal-r-normal-*-*-120-100-100-*-*-iso8859-1|-13,0,0,0,400,0,0,0,0,0,0,0,0,Arial
0 ""
0 0 0 3 0
1 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
0