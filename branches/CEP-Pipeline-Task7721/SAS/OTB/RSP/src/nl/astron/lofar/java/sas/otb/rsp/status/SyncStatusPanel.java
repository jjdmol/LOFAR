/*
 * SyncStatusPanel.java
 *
 * Copyright (C) 2006
 * ASTRON (Netherlands Foundation for Research in Astronomy)
 * P.O.Box 2, 7990 AA Dwingeloo, The Netherlands, softwaresupport@astron.nl
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 */

package nl.astron.lofar.java.sas.otb.rsp.status;

import javax.swing.border.TitledBorder;

import nl.astron.lofar.sas.otb.jrsp.SyncStatus;

/**
 * A panel that displays the ADO status data. This panel is used by the
 * StatusPanel.
 *
 * @author  balken
 */
public class SyncStatusPanel extends javax.swing.JPanel 
{
    /** 
     * Creates new form ETHStatusPanel.
     */
    public SyncStatusPanel() 
    {
        initComponents();
    }
    
    /**
     * Changes the title as it is displayed in the border of this panel.
     * @param   title   The title to be displayed in the border.
     */
    public void setTitle(String title)
    {
        ((TitledBorder)getBorder()).setTitle(title);
    }
    
    public void setFields(SyncStatus syncStatus)
    {
        if (syncStatus != null) {
            txtExtCount.setText(Integer.toString(syncStatus.extCount));
            txtSyncCount.setText(Integer.toString(syncStatus.syncCount));
            txtSampleOffset.setText(Integer.toString(syncStatus.sampleOffset));
            txtSliceCount.setText(Integer.toString(syncStatus.sliceCount));
        } else {
            txtExtCount.setText("");
            txtSyncCount.setText("");
            txtSampleOffset.setText("");
            txtSliceCount.setText("");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        lblExtCount = new javax.swing.JLabel();
        lblSyncCount = new javax.swing.JLabel();
        lblSampleOffset = new javax.swing.JLabel();
        txtExtCount = new javax.swing.JTextField();
        txtSyncCount = new javax.swing.JTextField();
        txtSampleOffset = new javax.swing.JTextField();
        lblSliceCount = new javax.swing.JLabel();
        txtSliceCount = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Sync"));
        lblExtCount.setText("Ext. count");

        lblSyncCount.setText("Sync. count");

        lblSampleOffset.setText("Sample offset");

        txtExtCount.setEditable(false);
        txtExtCount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtSyncCount.setEditable(false);
        txtSyncCount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtSampleOffset.setEditable(false);
        txtSampleOffset.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblSliceCount.setText("Slice count");

        txtSliceCount.setEditable(false);
        txtSliceCount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblSliceCount)
                    .add(lblSampleOffset)
                    .add(lblSyncCount)
                    .add(lblExtCount))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(txtExtCount)
                    .add(txtSampleOffset, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .add(txtSyncCount)
                    .add(txtSliceCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblExtCount)
                    .add(txtExtCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblSyncCount)
                    .add(txtSyncCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblSampleOffset)
                    .add(txtSampleOffset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblSliceCount)
                    .add(txtSliceCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblExtCount;
    private javax.swing.JLabel lblSampleOffset;
    private javax.swing.JLabel lblSliceCount;
    private javax.swing.JLabel lblSyncCount;
    private javax.swing.JTextField txtExtCount;
    private javax.swing.JTextField txtSampleOffset;
    private javax.swing.JTextField txtSliceCount;
    private javax.swing.JTextField txtSyncCount;
    // End of variables declaration//GEN-END:variables
    
}
