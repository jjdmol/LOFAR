V 10
1
LANG:1 0 
PANEL,-1 -1 1013 750 N "_3DFace" 0
"main()
{
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");
  
  baseDP         = g_currentDatapoint;
  database = dpSubStr(baseDP,DPSUB_SYS);
  
  TopLabel.text(database+\" HardwareMonitor\");
  
  // start the logging process
  showLogging(baseDP);
  
  // check if the requiered datapoint for this view are enabled and accessible
  if (dpExists(baseDP + \".status.message\")) {
    dpConnect(\"updateStates\", baseDP + \".status.message\",
		              baseDP + \".process.currentAction\",
		              baseDP + \".process.error\",
		              baseDP + \".process.startTime\",
		              baseDP + \".process.stopTime\",
		              baseDP + \".process.processID\", 
		              baseDP + \".status.message:_online.._invalid\");
    } else {
      LOG_ERROR(\"HardwareMonitor.pnl:main|Couldn't find DP to connect to: \"+baseDP);
      setValue(\"myLogTable\", \"backCol\", \"_dpdoesnotexist\");
      setValue(\"statusMessage\", \"backCol\", \"_dpdoesnotexist\");
      setValue(\"processAction\", \"backCol\", \"_dpdoesnotexist\");
      setValue(\"processError\", \"backCol\", \"_dpdoesnotexist\");
      setValue(\"processStartTime\", \"backCol\", \"_dpdoesnotexist\");
      setValue(\"processStopTime\", \"backCol\", \"_dpdoesnotexist\");
      setValue(\"processID\", \"backCol\", \"_dpdoesnotexist\");
    } 
  
    
  // check if the required RSP datapoint for this view are enabled and accessible
  if (dpExists(baseDP + \".RSP.connected\")) {
    dpConnect(\"updateRSP\", baseDP + \".RSP.connected\",
 		           baseDP + \".RSP.connected:_online.._invalid\");
  } else {
    LOG_ERROR(\"HardwareMonitor.pnl:main|Couldn't find DP to connect to: \"+baseDP);
    setValue(\"RSPTable\", \"backCol\", \"_dpdoesnotexist\");
    setValue(\"RSPConnectedText\", \"backCol\", \"_dpdoesnotexist\");
  }  
  
  // check if the required TBB datapoint for this view are enabled and accessible
  if (dpExists(baseDP + \".TBB.connected\")) {
    dpConnect(\"updateTBB\", baseDP + \".TBB.connected\",
 		           baseDP + \".TBB.connected:_online.._invalid\");
  } else {
    LOG_ERROR(\"HardwareMonitor.pnl:main|Couldn't find DP to connect to: \"+baseDP);
    setValue(\"TBBTable\", \"backCol\", \"_dpdoesnotexist\");
    setValue(\"TBBConnectedText\", \"backCol\", \"_dpdoesnotexist\");
  }  

  LOG_DEBUG(\"HardwareMonitor.pnl:main|processList found: \"+ result);    

  // pass baseDP to selfstate Object to work with
  setValue(\"selfState.light\",\"toolTipText\",baseDP);
  
  // connect for selfUpdates
  showSelfState(baseDP);
  
  reload();

}

updateStates(string dp1, string message, 
             string dp2, string action,
             string dp3, string error,
             string dp4, string startTime,
             string dp5, string stopTime,
             string dp6, unsigned processID,
             string dp7, bool invalid)
{
  LOG_DEBUG(\"HardwareMonitor.pnl:update|entered with: \"+ message + \" action: \" + action + \" error: \" + error);  
  if (!invalid) {
    setValue(\"statusMessage\", \"text\", message);
    setValue(\"processAction\", \"text\", action);
    setValue(\"processError\", \"text\", error);
    setValue(\"processID\", \"text\", processID);
    setValue(\"processStartTime\", \"text\", startTime);
    setValue(\"processStopTime\", \"text\", stopTime);
  } else {
    setValue(\"statusMessage\", \"text\", \"\");
    setValue(\"processAction\", \"text\", \"\");
    setValue(\"processError\",  \"text\", \"\");
    setValue(\"processID\", \"text\", \"\");
    setValue(\"processStartTime\", \"text\", \"\");
    setValue(\"processStopTime\", \"text\", \"\");
  }
}

updateRSP(string dp1, string connected, 
          string dp2, bool invalid)
{
  LOG_DEBUG(\"HardwareMonitor.pnl:updateRSP|entered with: \" + connected);  
  if (!invalid) {
    if (connected) {
      setValue(\"RSPConnectedText\",\"backCol\",\"green\");
    } else {
      setValue(\"RSPConnectedText\",\"backCol\",\"red\");
    }   
  } else {
    setValue(\"RSPConnectedText\",\"backCol\",\"Lofar_invalid\");
  }
}


updateTBB(string dp1, string connected, 
          string dp2, bool invalid)
{
  LOG_DEBUG(\"HardwareMonitor.pnl:updateTBB|entered with: \" + connected);  
  if (!invalid) {
    if (connected) {
      setValue(\"TBBConnectedText\",\"backCol\",\"green\");
    } else {
      setValue(\"TBBConnectedText\",\"backCol\",\"red\");
    }   
  } else {
    setValue(\"TBBConnectedText\",\"backCol\",\"Lofar_invalid\");
  }
}

void prepareProcesses() {
  dyn_string result;
  
  dynAppend(result,\",HardwareMonitor,\"+baseDP);    
  dynAppend(g_processesList,baseDP);
  
  
  // write result to the db so various panels can reset themselves  
  dpSet(DPNAME_NAVIGATOR + g_navigatorID + \".processesList\",result);
  
  LOG_DEBUG(\"HardwareMonitor.pnl:prepareProcesses|processList found: \"+ result);    
  
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"HardwareMonitor.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"HardwareMonitor.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    reload();
  }
}

void reload() {
  
  navFunct_clearGlobalLists();
  
  // set the observation selectable items
  prepareProcesses();

  // trigger that the panel values are calculated and ready
  navPanel_setEvent(\"HardwareMonitor.pnl\",\"Update\");
}

" 0
 E E E E 1 -1 -1 0  49 92
""0  1
E "#uses \"navPanel.ctl\"

string baseDP=\"\";
string database=\"\";

// ****************************************
// Name: showLogging   
// ****************************************
//    Connects to the given datapoint .logMsg and it's historical data (if any)
//    and logs all into the logWindow
//           
// ****************************************
showLogging(string aDP)
{
  LOG_TRACE(\"HardwareMonitor.pnl:showLogging| Datapoint: \",aDP);
	
  string dpLog = aDP+\".process.logMsg\";
  string systemName = dpSubStr(dpLog,DPSUB_SYS);
  string bareDP     = dpSubStr(dpLog,DPSUB_DP_EL_CONF_DET_ATT);

  myLogTable.deleteAllLines();
 
  if(dpExists(dpLog)) {
    // initialize the logging table with historical data:
    dyn_dyn_anytype tab;
    int z;
    time tStart;
    time tStop;
    tStop = getCurrentTime();
    tStart = tStop - 3*3600; // three hours of history
	
    string query=\"\";
            
    if (systemName != MainDBName) {     
      query = \"SELECT ALL '_original.._value' FROM '\" + dpLog + \"' REMOTE'\"+systemName +\"' TIMERANGE(\\\"\" +
              formatTime(\"%Y.%m.%d %H:%M:%S\",tStart) + \"\\\",\\\"\" +
              formatTime(\"%Y.%m.%d %H:%M:%S\",tStop) + \"\\\",1,0) LAST 100\";
    } else {
      query = \"SELECT ALL '_original.._value' FROM '\" + dpLog + \"' TIMERANGE(\\\"\" +
              formatTime(\"%Y.%m.%d %H:%M:%S\",tStart) + \"\\\",\\\"\" +
              formatTime(\"%Y.%m.%d %H:%M:%S\",tStop) + \"\\\",1,0) LAST 100\";
    }
      
    LOG_DEBUG(\"HardwareMonitor.pnl:showLogging|Query: \" + query);
    dpQuery(query, tab);
    LOG_DEBUG(\"HardwareMonitor.pnl:showLogging|Found: \" + tab + \" length: \" + dynlen(tab));
	 	 
	 	
    for(z=2;z<dynlen(tab);z++) {
      addLogMessage(tab[z][2]);
    }
	
    // connect to logging
    dpConnect(\"updateLogging\",dpLog);
  } else {
    LOG_DEBUG(\"HardwareMonitor.pnl:showLogging|error connecting to: \"+ dpLog);
  }    
}

// ****************************************
// Name: updateLogging   
// ****************************************
//    callback for showLogging
//           
// ****************************************
updateLogging(string dpe, string logMsg)
{
  LOG_TRACE(\"HardwareMonitor.pnl:showLogging|LogMsg: \"+logMsg);
  
  if (logMsg != \"\") {
    addLogMessage(logMsg);
  }
}

// ****************************************
// Name: addLogMsg   
// ****************************************
//    places a log Msg in the appropiate table
//    split lines like:
//    13-11-06 10:06:00.519|INFO|MAC.GCF.PAL.SAL|Set value of property 'MCU001:LOFAR_PermSW_MACScheduler.OTDB.lastPoll'|GSA_Service.cc:661
//    into relevant pieces
//           
// The Hardware monitor handles logging for different programs, and it's not possible to do multiple thread logging
// so for now we determined that the logmsg's that are for a specific program will be preceeded by a program specific
// tag. for example:
// RSP related will be preceeded by RSP:
// TBB related will be preceeded by TBB:
// we are now able to spit off the msg's that are intended for these driver logwindows and send them to the right place.
// ****************************************
addLogMessage(string aMsg)
{


  LOG_TRACE(\"navPanel.ctl:navPanel_addLogMsg|msg: \" + aMsg);
  if (aMsg != \"\") {


    dyn_string msgParts;
    string dateTime=\"\";
    string level=\"\";
    string source=\"\";
    string logMsg=\"\";
    string codeLine=\"\";
    bool error=false;

    msgParts = strsplit(aMsg,\"|\");
    
    if (dynlen(msgParts) >=1) {
      dateTime = msgParts[1];
    } else {
      error=true;
    }
    if (dynlen(msgParts) >=2) {
      level    = msgParts[2];
    } else {
      error=true;
    }
    if (dynlen(msgParts) >=3) {
      source   = msgParts[3];
    } else {
      error=true;
    }

    if (dynlen(msgParts) >=4) {
      logMsg = msgParts[4];
    } else {
      error=true;
    }

    if (dynlen(msgParts) >=5) {
      codeLine = msgParts[5];
    } else {
      error=true;
    }
	
	
    LOG_DEBUG(\"navPanel.ctl:navPanel_showLogging|dateTime: \" + dateTime);
    LOG_DEBUG(\"navPanel.ctl:navPanel_showLogging|level: \" + level);
    LOG_DEBUG(\"navPanel.ctl:navPanel_showLogging|source: \" + source);
    LOG_DEBUG(\"navPanel.ctl:navPanel_showLogging|logMsg: \" + logMsg);
    LOG_DEBUG(\"navPanel.ctl:navPanel_showLogging|codeLine: \" + codeLine);

    if (!error) {
      
      if (strpos(logMsg,\"RSP:\") > -1) {
        RSPTable.appendLine(\"time\",dateTime,\"level\",level,\"source\",source,\"message\",logMsg,\"code\",codeLine);
      } else if (strpos(logMsg,\"TBB:\") > -1) {
        TBBTable.appendLine(\"time\",dateTime,\"level\",level,\"source\",source,\"message\",logMsg,\"code\",codeLine);
      }
      myLogTable.appendLine(\"time\",dateTime,\"level\",level,\"source\",source,\"message\",logMsg,\"code\",codeLine);
      myLogTable.lineVisible(-1);
    }
  }
}" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
25 50
"RSPTable"
""
1 30 350 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 28 348 992 431
EE 1 0 1 5 1 "time" 12 1 0 "s" 1
LANG:1 4 time
E
1
LANG:1 0 

150 "level" 5 1 0 "s" 1
LANG:1 5 level
E
1
LANG:1 0 

70 "source" 17 1 0 "s" 1
LANG:1 6 source
E
1
LANG:1 0 

200 "message" 90 1 0 "s" 1
LANG:1 7 message
E
1
LANG:1 0 

1000 "code" 17 1 0 "s" 1
LANG:1 4 code
E
1
LANG:1 0 

200 
14 14 "" 1 1
LANG:1 2 #1
10 30
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 1 2 1 7
1 0
2 51
"PRIMITIVE_TEXT10"
""
1 33 333 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
27 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33 333 147 347
0 2 2 "0s" 0 0 0 192 0 0  33 333 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 17 RSP Log Messages:
2 52
"PRIMITIVE_TEXT11"
""
1 33 313 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33 313 127 327
0 2 2 "0s" 0 0 0 192 0 0  33 313 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 14 RSP Connected:
6 53
"RSPConnectedText"
""
1 140 10 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
31 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1 0 1 2 300 1 E 140 10 155 25
25 54
"TBBTable"
""
1 30 490 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
33 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 28 488 992 571
EE 1 0 1 5 1 "time" 12 1 0 "s" 1
LANG:1 4 time
E
1
LANG:1 0 

150 "level" 5 1 0 "s" 1
LANG:1 5 level
E
1
LANG:1 0 

70 "source" 17 1 0 "s" 1
LANG:1 6 source
E
1
LANG:1 0 

200 "message" 90 1 0 "s" 1
LANG:1 7 message
E
1
LANG:1 0 

1000 "code" 17 1 0 "s" 1
LANG:1 4 code
E
1
LANG:1 0 

200 
14 14 "" 1 1
LANG:1 2 #1
10 30
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 1 2 1 7
1 0
2 55
"PRIMITIVE_TEXT12"
""
1 33 463 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
35 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33 463 146 477
0 2 2 "0s" 0 0 0 192 0 0  33 463 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 17 TBB Log Messages:
2 56
"PRIMITIVE_TEXT13"
""
1 33 443 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
37 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33 443 126 457
0 2 2 "0s" 0 0 0 192 0 0  33 443 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 14 TBB Connected:
6 57
"TBBConnectedText"
""
1 140 10 E E E 1 E 1 E N {0,0,0} E N {255,255,255} E E
 E E
39 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1 0 1 2 430 1 E 140 10 155 25
25 58
"myLogTable"
""
1 31.00000000000001 172 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
41 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 29 170 993 281
EE 1 0 1 5 1 "time" 12 1 0 "s" 1
LANG:1 4 time
E
1
LANG:1 0 

150 "level" 5 1 0 "s" 1
LANG:1 5 level
E
1
LANG:1 0 

70 "source" 17 1 0 "s" 1
LANG:1 6 source
E
1
LANG:1 0 

200 "message" 90 1 0 "s" 1
LANG:1 7 message
E
1
LANG:1 0 

1000 "code" 17 1 0 "s" 1
LANG:1 4 code
E
1
LANG:1 0 

200 
14 14 "" 1 1
LANG:1 2 #1
10 30
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
0 1 2 1 7
1 0
1 75 4 "" 1
0
14 60
"statusMessage"
""
1 139 52 E E E 1 E 1 E N "_3DText" E N "_Window" E E
 E E
44 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 137 50 990 71
2 "0s" 0 0 0 0 0 -1  E E E
2 61
"TopLabel"
""
1 479 12 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
46 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 479 12 684 33
0 2 2 "0s" 0 0 0 192 0 0  479 12 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-16-*-100-100-*-*-iso8859-1|-16,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 24 Station: HardwareMonitor
2 62
"PRIMITIVE_TEXT2"
""
1 33.00000000000001 86 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
48 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33.00000000000001 86 114 100
0 2 2 "0s" 0 0 0 192 0 0  33.00000000000001 86 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 14 Current Action
2 63
"PRIMITIVE_TEXT3"
""
1 33.00000000000001 53 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
50 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33.00000000000001 53 127 67
0 2 2 "0s" 0 0 0 192 0 0  33.00000000000001 53 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 15 Status Message:
14 64
"processAction"
""
1 139 82 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
52 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 137 80 431 101
2 "0s" 0 0 0 0 0 -1  E E E
2 65
"PRIMITIVE_TEXT4"
""
1 33.00000000000001 116 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
54 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33.00000000000001 116 105 130
0 2 2 "0s" 0 0 0 192 0 0  33.00000000000001 116 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 13 Current Error
14 66
"processError"
""
1 139 112 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
56 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 137 110 431 131
2 "0s" 0 0 0 0 0 -1  E E E
2 67
"PRIMITIVE_TEXT5"
""
1 33.00000000000001 152 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
58 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33.00000000000001 152 118 166
0 2 2 "0s" 0 0 0 192 0 0  33.00000000000001 152 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 13 Log Messages:
2 68
"PRIMITIVE_TEXT6"
""
1 33.00000000000001 292 E E E 1 E 1 E N "_3DText" E N "_Transparent" E E
 E E
60 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 33.00000000000001 292 133 306
0 2 2 "0s" 0 0 0 192 0 0  33.00000000000001 292 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 18 Controller Values:
2 69
"PRIMITIVE_TEXT7"
""
1 459 86 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
62 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 459 86 513 100
0 2 2 "0s" 0 0 0 192 0 0  459 86 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 9 StartTime
2 70
"PRIMITIVE_TEXT8"
""
1 459 116 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
64 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 459 116 512 130
0 2 2 "0s" 0 0 0 192 0 0  459 116 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 8 StopTime
14 71
"processStartTime"
""
1 529 82 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
66 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 527 80 821 101
2 "0s" 0 0 0 0 0 -1  E E E
14 72
"processStopTime"
""
1 529 112 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
68 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 527 110 821 131
2 "0s" 0 0 0 0 0 -1  E E E
2 73
"PRIMITIVE_TEXT9"
""
1 849 86 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
70 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 849 86 866 100
0 2 2 "0s" 0 0 0 192 0 0  849 86 1
1
LANG:1 101 -*-MS Shell Dlg-bold-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,758,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
1
LANG:1 3 ID:
14 74
"processID"
""
1 869 82 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
72 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 98 -*-MS Shell Dlg-*-r-normal-*-11-*-100-100-*-*-iso8859-1|-11,0,0,0,505,0,0,0,0,0,0,0,0,MS Shell Dlg
0 ""
 867 80 991 101
2 "0s" 0 0 0 0 0 -1  E E E
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
3 4 "selfState"
"objects\\lofar_self_state.pnl" 9.500000000000011 10.5 T 42 1 0 1 -0.4999999999999928 4.5
0
0