V 11
1
LANG:1 0 
PANEL,-1 -1 1200 823 N "_3DFace" 0
"main()
{
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");
  
  baseDP         = g_currentDatapoint;
  database = dpSubStr(baseDP,DPSUB_SYS);
  
  string name=g_currentDatapoint;
  
  
  // check if the requiered datapoint for this view are enabled and accessible
  if (dpExists(baseDP + \".antennaArray\")) {
    if (dpConnect(\"updatePipelineControl\", baseDP + \".claimPeriod\",
	 	                   baseDP + \".preparePeriod\",
                                   baseDP + \".startTime\",
                                   baseDP + \".stopTime\",
                                   baseDP + \".bandFilter\",
                                   baseDP + \".nyquistzone\",
                                   baseDP + \".antennaArray\",
                                   baseDP + \".receiverList\",
                                   baseDP + \".sampleClock\",
                                   baseDP + \".measurementSet\",
                                   baseDP + \".stationList\",
                                   baseDP + \".inputNodeList\",
                                   baseDP + \".BGLNodeList\",
                                   baseDP + \".storageNodeList\",
                                   baseDP + \".processType\",
                                   baseDP + \".processSubtype\",
                                   baseDP + \".strategy\",
                                   baseDP + \".Beams.directionType\",
                                   baseDP + \".Beams.angle1\",
                                   baseDP + \".Beams.angle2\",
                                   baseDP + \".Beams.subbandList\",
                                   baseDP + \".runState\",
                                   baseDP + \".claim.name\",
                                   baseDP + \".stationList:_online.._invalid\") == -1) {
      LOG_ERROR(\"Pipeline_overview.pnl:main|Couldn't connect to : \"+baseDP);
    } 
    if (!navFunct_dpReachable(baseDP)) {
      updatePipelineControl(\"\",0,\"\",0,\"\",\"\",\"\",\"\",\"\",\"\",0,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",makeDynString(),\"\",makeDynFloat(),
                    \"\",makeDynFloat(),\"\",makeDynString(),\"\",true);
    }
  } else {
    LOG_ERROR(\"Pipeline_overview.pnl:main|Couldn't find DP to connect to: \"+baseDP);
    setValue(\"claimPeriodText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"preparePeriodText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"startTimeText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"stopTimeText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"bandFilterText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"nyquistzoneText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"antennaArrayText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"receiverListText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"sampleClockText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"measurementSetText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"inputNodeListText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"BGLNodeListText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"runStateText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"processTypeText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"processSubTypeText\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"strategy\", \"backCol\", \"Lofar_dpdoesnotexist\");
    setValue(\"storageNodeListText\", \"backCol\", \"Lofar_dpdoesnotexist\");
  }

  // pass baseDP to selfstate Object to work with
  setValue(\"selfState.light\",\"toolTipText\",baseDP); 

  // connect for selfUpdates
  showSelfState(baseDP);

  reload();
}

updatePipelineControl(string dp1, int claimPeriod,
              string dp2, int preparePeriod,
              string dp3, string startTime,
              string dp4, string stopTime,
              string dp5, string bandFilter,
              string dp6, int nyquistzone,
              string dp7, string antennaArray,
              string dp8, string receiverList,
              string dp9, string sampleClock,
              string dp10,string measurementSet,
              string dp11,string stationList,
              string dp12,string inputNodeList,
              string dp13,string BGLNodeList,
              string dp14,string storageNodeList,
              string dp15,string processType,
              string dp16,string processSubtype,
              string dp17,string strategy,
              string dp18,dyn_string directionType,
              string dp19,dyn_float angle1,
              string dp20,dyn_float angle2,
              string dp21,dyn_string subbandList,
              string dp22,string runState,
              string dp23,string claimName,
              string dp24, bool invalid)
{
  LOG_TRACE(\"Pipeline_overview.pnl:updatePipelineControl|entered\");
  beamTable.deleteAllLines();
  string SymbolCol=\"_Window\";

  obsName= claimName;
  strreplace(obsName,\"LOFAR_ObsSW_\",\"\");
  setValue(\"observationName\",\"text\",\"Observation: \"+obsName);

  if (strtolower(runState) == \"running\") {
    Abort_Observation.enabled(true);
    Finish_Observation.enabled(true);
  } else {
    Abort_Observation.enabled(false);
    Finish_Observation.enabled(false);
  }

  if (!invalid) {
    beamTable.enabled(true);
    setValue(\"claimPeriodText\", \"text\", claimPeriod);
    setValue(\"preparePeriodText\", \"text\", preparePeriod);
    setValue(\"startTimeText\", \"text\", startTime);
    setValue(\"stopTimeText\", \"text\", stopTime);
    setValue(\"bandFilterText\", \"text\", bandFilter);
    setValue(\"nyquistzoneText\", \"text\", nyquistzone);
    setValue(\"antennaArrayText\", \"text\", antennaArray);
    setValue(\"receiverListText\", \"text\", receiverList);
    setValue(\"sampleClockText\", \"text\", sampleClock);
    setValue(\"measurementSetText\", \"text\", measurementSet);
    setValue(\"inputNodeListText\", \"text\", inputNodeList);
    setValue(\"BGLNodeListText\", \"text\", BGLNodeList);
    setValue(\"storageNodeListText\", \"text\", storageNodeList);
    setValue(\"processTypeText\", \"text\", processType);
    setValue(\"processSubtypeText\", \"text\", processSubtype);
    setValue(\"strategyText\", \"text\", strategy);
    setValue(\"runStateText\", \"text\", runState);
   
    for (int i=1; i<= dynlen(directionType); i++) {
      beamTable.appendLine(\"Direction\",directionType[i],\"Angle1\",angle1[i],\"Angle2\",angle2[i],
                           \"subbands\",subbandList[i]);
    }
    
  } else {
    SymbolCol = \"Lofar_invalid\";
    if (dp1==\"\") {
      SymbolCol=\"Lofar_dpOffline\";
    }
    beamTable.enabled(false);
  }
  
  
  setValue(\"claimPeriodText\", \"backCol\", SymbolCol);
  setValue(\"preparePeriodText\", \"backCol\", SymbolCol);
  setValue(\"startTimeText\", \"backCol\", SymbolCol);
  setValue(\"stopTimeText\", \"backCol\", SymbolCol);
  setValue(\"bandFilterText\", \"backCol\", SymbolCol);
  setValue(\"nyquistzoneText\", \"backCol\", SymbolCol);
  setValue(\"antennaArrayText\", \"backCol\", SymbolCol);
  setValue(\"receiverListText\", \"backCol\", SymbolCol);
  setValue(\"sampleClockText\", \"backCol\", SymbolCol);
  setValue(\"measurementSetText\", \"backCol\", SymbolCol);
  setValue(\"inputNodeListText\", \"backCol\", SymbolCol);
  setValue(\"BGLNodeListText\", \"backCol\", SymbolCol);
  setValue(\"storageNodeListText\", \"backCol\", SymbolCol);
  setValue(\"processTypeText\", \"backCol\", SymbolCol);
  setValue(\"processSubtypeText\", \"backCol\", SymbolCol);
  setValue(\"strategyText\", \"backCol\", SymbolCol);
  setValue(\"runStateText\", \"backCol\", SymbolCol);
  
}

void preparePipelinesList() {
  dynAppend(g_pipelinesList,obsName);
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"Pipeline_overview.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"Pipeline_overview.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    reload();
  }
}

void reload() {
  
  navFunct_clearGlobalLists();
  
  // set the pipeline selectable items
  preparePipelinesList();

  // set panel to ready
  g_objectReady=true;
  
  // trigger that the panel values are calculated and ready
  navPanel_setEvent(\"Pipeline_overview.pnl\",\"Update\");
}

" 0
 E E E E 1 -1 -1 0  0 0
""0  1
E "#uses \"navPanel.ctl\"

string baseDP=\"\";
string database=\"\";
string obsName=\"\";" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 0 
2 0
"PRIMITIVE_TEXT8"
""
1 39 64 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 39 64 101 77
0 2 2 "0s" 0 0 0 192 0 0  39 64 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 11 Start Time:
2 1
"PRIMITIVE_TEXT9"
""
1 19 132 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 19 132 103 145
0 2 2 "0s" 0 0 0 192 0 0  19 132 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 14 Antenna Array:
14 2
"antennaArrayText"
""
1 114.449594438007 72 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 128 352 149
2 "0s" 0 0 0 0 0 -1  E E E
25 3
"beamTable"
""
1 10 280 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
7 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,13,5,50,0,0,0,0,0
0  8 278 988 467
EE 1 0 1 4 8 "Direction" 8 1 0 "s" 1
LANG:1 9 Direction
E
1
LANG:1 0 

100 "Angle1" 8 1 0 "s" 1
LANG:1 6 Angle1
E
1
LANG:1 0 

100 "Angle2" 8 1 0 "s" 1
LANG:1 6 Angle2
E
1
LANG:1 0 

100 "subbands" 60 1 0 "s" 1
LANG:1 8 subbands
E
1
LANG:1 0 

672 
18 18 "" 1 1
LANG:1 2 #8
"" 1 1
LANG:1 2 #7
"" 1 1
LANG:1 2 #6
"" 1 1
LANG:1 2 #5
"" 1 1
LANG:1 2 #4
"" 1 1
LANG:1 2 #3
"" 1 1
LANG:1 2 #2
"" 1 1
LANG:1 2 #1
10 8
1
LANG:1 33 MS Shell Dlg,-1,13,5,50,0,0,0,0,0
0 0 0 2 1 7
1 0
2 4
"PRIMITIVE_TEXT10"
""
1 4 262 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 4 262 45 275
0 2 2 "0s" 0 0 0 192 0 0  4 262 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 6 Beams:
14 5
"startTimeText"
""
1 119 64 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 62 351 83
2 "0s" 0 0 0 0 0 -1  E E E
2 6
"PRIMITIVE_TEXT11"
""
1 396 40 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 396 42 457 55
0 2 2 "0s" 0 0 0 192 0 0  396 42 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 10 Stop Time:
14 7
"stopTimeText"
""
1 470 40 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  468 38 702 59
2 "0s" 0 0 0 0 0 -1  E E E
2 8
"PRIMITIVE_TEXT12"
""
1 28 88 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 28 88 102 101
0 2 2 "0s" 0 0 0 192 0 0  28 88 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 13 Claim Period:
14 9
"claimPeriodText"
""
1 119 86 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
19 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 84 351 105
2 "0s" 0 0 0 0 0 -1  E E E
2 10
"PRIMITIVE_TEXT13"
""
1 370 62 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
21 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 370 64 458 77
0 2 2 "0s" 0 0 0 192 0 0  370 64 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 15 Prepare Period:
14 11
"preparePeriodText"
""
1 470 62 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
23 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  468 60 702 81
2 "0s" 0 0 0 0 0 -1  E E E
2 12
"PRIMITIVE_TEXT14"
""
1 41 110 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
25 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 41 110 102 123
0 2 2 "0s" 0 0 0 192 0 0  41 110 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 11 BandFilter:
14 13
"bandFilterText"
""
1 119 108 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
27 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 106 351 127
2 "0s" 0 0 0 0 0 -1  E E E
2 14
"PRIMITIVE_TEXT15"
""
1 711 64 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 711 66 786 79
0 2 2 "0s" 0 0 0 192 0 0  711 66 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 12 NyquistZone:
14 15
"nyquistzoneText"
""
1 798.7391304347826 64 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
31 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  797 60 831 81
2 "0s" 0 0 0 0 0 -1  E E E
2 16
"PRIMITIVE_TEXT16"
""
1 -47081.52906519605 -3814 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
33 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.263157894736842 0 1 -587.3684210526316 -286 1 E 752 372 829 385
0 2 2 "0s" 0 0 0 192 0 0  752 372 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 12 SampleClock:
14 17
"sampleClockText"
""
1 469.9999999999999 82 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
35 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  468 82 702 103
2 "0s" 0 0 0 0 0 -1  E E E
2 20
"PRIMITIVE_TEXT18"
""
1 24 176 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
41 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 24 176 103 189
0 2 2 "0s" 0 0 0 192 0 0  24 176 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 14 Receiver List:
14 21
"receiverListText"
""
1 102 72 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
43 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 172 984 193
2 "0s" 0 0 0 0 0 -1  E E E
2 22
"PRIMITIVE_TEXT19"
""
1 21 198 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
45 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 21 198 106 211
0 2 2 "0s" 0 0 0 192 0 0  21 198 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 15 Inputnode List:
14 23
"inputNodeListText"
""
1 102 72 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
47 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 194 984 215
2 "0s" 0 0 0 0 0 -1  E E E
2 24
"PRIMITIVE_TEXT20"
""
1 23 220 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
49 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 23 220 105 233
0 2 2 "0s" 0 0 0 192 0 0  23 220 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 13 BGLNode List:
14 25
"BGLNodeListText"
""
1 102 66 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
51 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 216 984 237
2 "0s" 0 0 0 0 0 -1  E E E
2 26
"PRIMITIVE_TEXT21"
""
1 4 242 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
53 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 4 242 106 255
0 2 2 "0s" 0 0 0 192 0 0  4 242 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 17 StorageNode List:
14 27
"storageNodeListText"
""
1 118.9999999999999 240 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
55 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 238 984 259
2 "0s" 0 0 0 0 0 -1  E E E
2 28
"PRIMITIVE_TEXT22"
""
1 2 42 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
57 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 2 42 100 55
0 2 2 "0s" 0 0 0 192 0 0  2 42 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 15 MeasurementSet:
14 29
"measurementSetText"
""
1 119 42 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
59 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  117 40 351 61
2 "0s" 0 0 0 0 0 -1  E E E
2 30
"observationName"
""
1 300 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
60 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 300 10 368 30
0 2 2 "0s" 0 0 0 192 0 0  300 10 1
1
LANG:1 33 MS Shell Dlg,-1,16,5,75,0,0,0,0,0
0 1
LANG:1 9 Pipeline:
13 31
"Abort_Observation"
""
1 10 710 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
61 0 0 0 0 0
E E E
0
1
LANG:1 36 Set the Observation state to Aborted

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  8 708 132 734

T 
1
LANG:1 5 Abort
"// SimpleCtrlScriptStart {valid}
main()
{
  EP_setDP();
}

EP_setDP()
{
dyn_errClass err;

  dpSetWait(baseDP+\"_ObservationControl.command:_original.._value\", \"ABORT\");
  err = getLastError();
  if (dynlen(err) > 0)
    errorDialog(err);
}

// SimpleCtrlScript {EP_setDP}
// DP1 {baseDP+\".abort\"}
// Config1 {:_original.._value}
// Type1 {string}
// Value1 {ABORT}
// SimpleCtrlScriptEnd {EP_setDP}
" 0
 E E E
2 32
"PRIMITIVE_TEXT23"
""
1 711 40 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
63 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 711 42 763 55
0 2 2 "0s" 0 0 0 192 0 0  711 42 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 9 runState:
14 33
"runStateText"
""
1 799 40 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
65 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  797 38 981 59
2 "0s" 0 0 0 0 0 -1  E E E
2 34
"PRIMITIVE_TEXT24"
""
1 712 106 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
66 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 712 108 763 121
0 2 2 "0s" 0 0 0 192 0 0  712 108 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 9 Strategy:
14 35
"strategyText"
""
1 798.4173913043478 108 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
67 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  798 104 984 125
2 "0s" 0 0 0 0 0 -1  E E E
2 36
"PRIMITIVE_TEXT25"
""
1 -47081.52906519605 -3616 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
68 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.263157894736842 0 1 -587.3684210526316 -264 1 E 752 372 828 385
0 2 2 "0s" 0 0 0 192 0 0  752 372 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 12 processType:
14 37
"processTypeText"
""
1 469.9999999999999 104 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
69 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  468 104 702 125
2 "0s" 0 0 0 0 0 -1  E E E
2 40
"PRIMITIVE_TEXT27"
""
1 -47081.52906519605 -3400 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
72 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E 1.263157894736842 0 1 -587.3684210526316 -240 1 E 752 372 846 385
0 2 2 "0s" 0 0 0 192 0 0  752 372 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 15 processSubtype:
14 41
"processSubtypeText"
""
1 489.9999999999999 128 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
73 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  488 128 702 149
2 "0s" 0 0 0 0 0 -1  E E E
13 42
"Finish_Observation"
""
1 150 710 E E E 0 E 1 E N "_ButtonText" E N "_Button" E E
 E E
74 0 0 0 0 0
E E E
0
1
LANG:1 38 Set the Observation state to Finbished

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  148 708 272 734

T 
1
LANG:1 6 Finish
"// SimpleCtrlScriptStart {invalid}
main()
{
  EP_setDP();
}

EP_setDP()
{
dyn_errClass err;

  dpSetWait(baseDP+\"_ObservationControl.command:_original.._value\", \"FINISH\");
  err = getLastError();
  if (dynlen(err) > 0)
    errorDialog(err);
}

// SimpleCtrlScript {EP_setDP}
// DP1 {baseDP+\".abort\"}
// Config1 {:_original.._value}
// Type1 {string}
// Value1 {ABORT}
// SimpleCtrlScriptEnd {EP_setDP}
" 0
 E E E
1 43 0 "" 1
0
0
LAYER, 1 
1
LANG:1 0 
0
LAYER, 2 
1
LANG:1 0 
0
LAYER, 3 
1
LANG:1 0 
0
LAYER, 4 
1
LANG:1 0 
0
LAYER, 5 
1
LANG:1 0 
0
LAYER, 6 
1
LANG:1 0 
0
LAYER, 7 
1
LANG:1 0 
0
3 0 "selfState" -1
"objects\\lofar_self_state.pnl" 7 8 T 75 U 
0
0
