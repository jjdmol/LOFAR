------------------------
Beamformer Pipeline
------------------------

Design decisions:
-------------------

* The PPF is first in the pipeline, allowing:
	- The correlator's PPF kernel to be reused, which already performs the additional
          IntToFloat conversion and transpose of the output.
        - Immediately feed (and thus get rid of) the history samples required by the PPF.
          If we would put the PPF at the end of the pipeline, we would need a more complex
          mechanism to carry over the last samples to the next block as history samples.
* After the PPF, we immediately switch to a high frequency-resolution:
	- Allowing us to perform all steps at one resolution, removing the need
          for additional FFTs:
		- The flagger requires at least 256 channels
		- Band-pass correction functions better on more channels
		- Coherent dedispersion functions better on more channels
		- Having at least 4k channels allows parallellism on ~8k threads for
		  most kernels (by parallellising on channel and polarisation). This comes
                  close to the recommended 10k threads in-flight for optimal performance.
	- The Delay Compensation is expected to work good enough on a low time resolution,
          due to the compensation improvements caused by the high frequency resolution.
* We do not do a proper PPF for the frequency resolution we use in the pipeline. We expect
  a 16-channel PPF to be 'good enough'. Later investigations could provide a more elaborate
  PPF (more channels) plus a 'good enough' iPPF at the end of the pipeline.
* Coherent Dedispersion is still 'under construction', because it requires a comprehensive
  solution to do well. For example, for extreme DMs at low frequencies, we probably want
  to dedisperse on the CPU, not on the GPU, due to memory requirements.

To investigate:

* Coherent Dedispersion (see above)
* iPPF options (see above)
* FFT scaling (FFT + FFT-1 means scaling the amplitude), does it require compensation?
  If so, we can do so in the Delay Compensation kernel.

Pipeline
-------------------

For max size, we assume:
 - 48 stations
 - 1 subband
 - 1 second blocks (195312.5 samples)

Note:
  MB = 1e6 bytes
  (*) = requires change from current implementation
  (**) = is a new kernel (wrt what we already ported)

Flow:		Data dimensions:			Max size:				Buffer:
=====================================================================================================================
(input)		[station][samples][pol]			[48][195312.5][2] = 75 MB		A
   |
   V
IntToFloat + FIR + Transpose {I/O: history samples buffer, taps}
   |            [station][pol][samples]                 [48][2][195312.5] = 150 MB              B
   V
FFT-64k {inplace} 1)
   |            [station][pol][samples][channel]                          = 150 MB              B
   V
Delay/BandPass + Transpose {I/O: weights}
   |            [station][channel][samples][pol]                          = 150 MB              A
   V
(Flagger (narrow-band) {inplace})
   |            [???]                                                     = 150 MB              A
   V
   X

Complex Voltages/Coherent Stokes:
-----------------------------------
   X            [station][channel][samples][pol]        [48][256][768][2] = 150 MB		A
   |
   V
BeamFormer {I/O: weights}
   |            [channel][samples][tab][pol]                              = 3.1 MB/TAB		B
   V
Transpose
   |            [tab][pol][samples][channel]                              = 3.1 MB/TAB		CS: C, CV: D
   V
Coherent Dedispersion {inplace, I/O: DMs}
   |            [tab][pol][samples][channel]                              = 3.1 MB/TAB		CS: C, CV: D
   V
  iFFT-64k/N {inplace}
   |            [tab][pol][samples][channel]                              = 3.1 MB/TAB		CS: C, CV: D
   V
Coherent Stokes (*: no transpose)
   |            [tab][stokes][samples][channel]                           = 0.8 MB/TAB/Stokes	CS: D, CV: -
   V
(output)

Incoherent Stokes:
-----------------------------------
   X            [station][channel][samples][pol]        [48][256][768][2] = 150 MB <- - +	A
   |
   V                                                                                    |
Transpose + Copy
   |            [station][pol][samples][channel]        [48][2][768][256] = 150 MB      |	B
   V
Coherent Dedispersion {inplace, I/O: DMs}                                               |
   |            [station][pol][samples][channel]        [48][2][768][256] = 150 MB		B
   V                                                                                    |
  iFFT-64k/N {inplace}
   |            [station][pol][samples]                 [48][2][195312.5] = 150 MB      |	B
   V
Incoherent Stokes (*: no transpose) - - - - - - - - - - - - - - - - - - - - - - - - - - +
   |            [tab][stokes][samples][channel]                           = 0.8 MB/TAB/Stokes	D
   V
(output)

A = max(150 MB, 3.1 MB * #coherent TABs/pass)
B = 150 MB
C = max(150 MB, 3.1 MB * #coherent TABs/pass)
D = 0.8 MB/TAB/Stokes (size of output)

Because each pass is ~6 beams, and certainly less than 150/3.1=~48, we need 450 MB of intermediate buffers. If the WQ has 1791 MB, we can form (1791 MB - 450 MB) / 0.8 MB/TAB/Stokes = 1676 * TABs * Stokes.


1) NOTE: The big FFT in the beginning is distilled from:

 FFT-N {inplace}
   |            [station][pol][samples][channel]       [48][2][12207][16] = 150 MB              B
   V
Transpose (**)
   |            [station][pol][channel][samples]       [48][2][16][12207] = 150 MB		A
   V
FFT-64k/N {inplace}
   |            [station][pol][channel][samples][subch]                   = 150 MB              A
   V
Transpose (**)
   |            [station][pol][samples][channel][subch]                   = 150 MB              B
   V
