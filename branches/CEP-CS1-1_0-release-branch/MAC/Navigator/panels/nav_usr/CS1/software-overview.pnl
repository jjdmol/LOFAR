V 10
1
LANG:1 8 (NoName)
PANEL,-1 -1 1026 741 N "_3DFace" 1
"$datapoint"
"main()
{
	// check if this panel is placed on the right datapoint
	checkDpType($datapoint,\"PermSW\");

  // because we want to change the logging depending on the button pushed we need to disconnect/connect to
  // different dp's. disconnect can only be done in the same tread that started the connect, so we need to start
  // a tread that does both for us.
  logThreadID=startThread(\"connectLogDP\");  
  //DebugTN(\"ThreadId: \"+$Station+ \": \"+logThreadID);

  observationsDP = $datapoint+\"_MACScheduler\";	
	selectedDP=observationsDP+\".logMsg\";

  if (dpAccessable(observationsDP + \".activeObservations\")) {
	  dpConnect(\"updateObservationsTable\",observationsDP+\".activeObservations:_online.._value\",
	                                      observationsDP+\".state:_online.._value\",
	                                      observationsDP+\".error:_online.._value\",
	                                      observationsDP+\".state:_online.._invalid\");
  }  
}
" 0
 E E E E 1 0 0 0  10 10
""0  1
E "#uses \"nav_fw/gcf-util.ctl\"
#uses \"nav_fw/gcfnav-panel-util.ctl\"

string observationsDP=\"\";
string OTDBDP=\"\";
string connected=\"\";
string selectedDP=\"MCU001:LOFAR_PermSW_MACScheduler.logMsg\";
string previouslySelectedDP=\"\";
int logThreadID;


void connectLogDP()
{
	while(1)
	{
		delay(0,100);
		if (selectedDP != previouslySelectedDP)
		{
			if(previouslySelectedDP != \"\" && dpExists(previouslySelectedDP))
				dpDisconnect(\"updateLogging\",previouslySelectedDP);
		 
		 	if (dpExists(selectedDP)) {
		 		dpConnect(\"updateLogging\",selectedDP);
		 		showLogging();
		 	}
		 	previouslySelectedDP=selectedDP;
		}
	}
}

showLogging()
{
  //DebugTN(\"startLogging\");
	dyn_string dp = strsplit(dpSubStr(selectedDP,DPSUB_DP),\"_\");
		
	//DebugTN(\"startLogging 2\");

 	// get the systemname and systemnameless part of the datapoint
	string systemName = dpSubStr(selectedDP,DPSUB_SYS);
  string bareDP     = dpSubStr(selectedDP,DPSUB_DP_EL_CONF_DET_ATT);
 
 	
	//DebugTN(\"startLogging 3\");

  // clear the table from the old logging
  table_logging.deleteAllLines();


	//DebugTN(\"startLogging 4 selectedDP: \" + selectedDP);
  // if the datapoint exists, try to get some of the historical data on this point
  // fill the table with it and do a dpConnect so that new changes will be added to the table 
  if(dpExists(selectedDP))
  {
    
  	//DebugTN(\"startLogging 5 selectedDP\");

		// initialize the logging table with historical data:
		dyn_dyn_anytype tab;
		int z;
		time tStart;
		time tStop;
		tStop = getCurrentTime();
		tStart = tStop - 48*3600; // 2 days of history
	
		string query = \"SELECT ALL '_original.._value' FROM '\" + bareDP + \"' REMOTE'\"+systemName +\"' TIMERANGE(\\\"\" +
			formatTime(\"%Y.%m.%d %H:%M:%S\",tStart) + \"\\\",\\\"\" +
			formatTime(\"%Y.%m.%d %H:%M:%S\",tStop) + \"\\\",1,0) LAST 100\";
			
		//DebugTN(\"Query: \" + query);
		dpQuery(query, tab);
		LOG_DEBUG(\"Found: \" + tab + \" length: \" + dynlen(tab));
	 	 
	 	
		for(z=2;z<dynlen(tab);z++)
		{
			addLogMessage(tab[z][2]);
		}
	}
	else {
	  //DebugTN(\"NOT FOUND: wanted to log from : \" + selectedDP);
	}
}

updateLogging(string dpe, string dpv)
{
  //DebugTN(\"LogMsg: \", dpv);
	addLogMessage(dpv);
}

//
// Add logMsg to table, We assume the tablename is table_logging
//
addLogMessage(string msg)
{
  //split lines like:
  // 13-11-06 10:06:00.519|INFO|MAC.GCF.PAL.SAL|Set value of property 'MCU001:LOFAR_PermSW_MACScheduler.OTDB.lastPoll'|GSA_Service.cc:661
  // into relevant pieces

  if (msg != \"\") {
    //DebugTN(\"addLogMessage: \" + msg);

    dyn_string msgParts;
    string dateTime=\"\";
    string level=\"\";
    string source=\"\";
    string logMsg=\"\";
    string codeLine=\"\";
    bool error=false;

    msgParts = strsplit(msg,\"|\");

    if (dynlen(msgParts) >=1) {
      dateTime = msgParts[1];
    } else {
    	error=true;
   	}
    if (dynlen(msgParts) >=2) {
      level    = msgParts[2];
    } else {
    	error=true;
   	}
    if (dynlen(msgParts) >=3) {
      source   = msgParts[3];
    } else {
    	error=true;
   	}

    if (dynlen(msgParts) >=4) {
      logMsg = msgParts[4];
    } else {
    	error=true;
   	}

    if (dynlen(msgParts) >=5) {
      codeLine = msgParts[5];
    } else {
    	error=true;
   	}
	
	
    //DebugTN(\"dateTime: \" + dateTime);
    //DebugTN(\"level: \" + level);
    //DebugTN(\"source: \" + source);
    //DebugTN(\"logMsg: \" + logMsg);
    //DebugTN(\"codeLine: \" + codeLine);

		if (!error && logMsg != \"\") {
	    table_logging.appendLine(\"time\",dateTime,\"level\",level,\"source\",source,\"message\",logMsg,\"code\",codeLine);
  	  table_logging.lineVisible(-1);
  	 }
  }
}

updateObservationsTable(string dpe, dyn_string dpv,
                        string dp1, int state,
							          string dp2, string error,
							          string dp3, bool invalid)
{


	if (!invalid){ 

    TableObservations.deleteAllLines();
    for(int i=1; i<=dynlen(dpv);i++)
    {
      TableObservations.appendLine(\"Observation\",dpv[i]);
      string dpPrefix = \"LOFAR_ObsSW_\" + dpv[i] + \"_ObsCtrl\";
	
      for(int i=0; i<10 && !dpAccessable(dpPrefix);i++)
      {
        delay(0,250);
      }

      dpConnect(\"updateObservationsTableValues\",dpPrefix + \".currentAction:_online.._value\",
                                                dpPrefix + \".claimPeriod:_online.._value\",
                                                dpPrefix + \".preparePeriod:_online.._value\",
                                                dpPrefix + \".startTime:_online.._value\",
                                                dpPrefix + \".stopTime:_online.._value\");
    }
  }
}

updateObservationsTableValues(string dp1, string action,
                              string dp2, int claimPeriod,
                              string dp3, int preparePeriod,
                              string dp4, string startTime,
                              string dp5, string stopTime)                              
{
  string dp = dpSubStr(dp1,DPSUB_DP);
  //DebugTN(\"DP: \" + dp);
  
  for(int i=0; i < TableObservations.lineCount; i++)
  {
    //DebugTN(\"check for: \" + \"LOFAR_ObsSW_\" + TableObservations.cellValueRC(i,\"Observation\") );
    if(dp == \"LOFAR_ObsSW_\" + TableObservations.cellValueRC(i,\"Observation\")+\"_ObsCtrl\")
    {
      //DebugTN(\"Bingo, set values\");
      TableObservations.cellValueRC(i,\"Action\",action);
      TableObservations.cellValueRC(i,\"ClaimPeriod\",dpValToString(dp2,claimPeriod,TRUE));
      TableObservations.cellValueRC(i,\"PreparePeriod\",dpValToString(dp3,preparePeriod,TRUE) );
      TableObservations.cellValueRC(i,\"StartTime\",startTime);
      TableObservations.cellValueRC(i,\"StopTime\",stopTime);
    }
  }
}



" 0
 2
"CBRef" "1"
"EClose" E
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
2 0
"Text1"
""
1 10 10 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
1 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 12 252 45
0 2 0 "0s" 0 0 0 192 0 0  12 12 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-27-*-100-100-*-*-iso8859-1|-27,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 17 Software overview
2 4
"Text4"
""
1 325 237 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
5 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 327 239 361 258
0 2 0 "0s" 0 0 0 192 0 0  327 239 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-15-*-100-100-*-*-iso8859-1|-15,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 3 CQN
2 5
"Text5"
""
1 640 239 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
6 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 642 241 676 260
0 2 0 "0s" 0 0 0 192 0 0  642 241 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-15-*-100-100-*-*-iso8859-1|-15,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 3 SHM
2 11
"Text7"
""
1 10 70 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
12 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 72 108 91
0 2 0 "0s" 0 0 0 192 0 0  12 72 1
1
LANG:1 87 -*-Arial-bold-r-normal-*-15-*-100-100-*-*-iso8859-1|-15,0,0,0,697,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 12 Observations
4 12
"Line1"
""
1 10 50 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
13 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 3 2 0 1 E  940 50 10 50
2 28
"Text2"
""
1 10 494 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 12 496 93 513
0 2 0 "0s" 0 0 0 192 0 0  12 496 1
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
1
LANG:1 13 Show logging:
1 30 0 "" 0
0
1 31 0 "" 1
0
1 32 0 "0" 1
0
1 33 0 "1" 0
0
1 34 0 "1" 1
0
1 35 0 "1" 2
0
1 36 0 "1" 3
0
1 37 0 "1" 4
0
1 38 0 "1" 5
0
1 39 0 "1" 6
0
1 40 0 "" 12
0
1 41 0 "" 13
0
1 42 0 "" 3
0
1 43 0 "" 4
0
25 2
"TableObservations"
""
1 10 100 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
3 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 8 98 942 235
E"main(int row, string column, string value)
{
//  DebugTN(\"ColumnCommand\",row,column,value);
	string dp = \"LOFAR_ObsSW_\" + TableObservations.cellValueRC(row,\"Observation\")+\"_ObsCtrl\";
	LOG_TRACE(\"ColumnCommand: trigger Navigator with datapoint=\",dp);
	navConfigTriggerNavigatorRefreshWithDP(dp);
}" 0
 1 0 1 6 1 "Observation" 19 1 0 "s" 1
LANG:1 11 Observation
E
1
LANG:1 0 

225 "ClaimPeriod" 8 1 0 "s" 1
LANG:1 12 Claim period
E
1
LANG:1 0 

100 "PreparePeriod" 8 1 0 "s" 1
LANG:1 14 Prepare period
E
1
LANG:1 0 

100 "StartTime" 12 1 0 "s" 1
LANG:1 10 Start time
E
1
LANG:1 0 

150 "StopTime" 12 1 0 "s" 1
LANG:1 9 Stop time
E
1
LANG:1 0 

150 "Action" 16 1 0 "s" 1
LANG:1 6 Action
E
1
LANG:1 0 

187 
16 16 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 2 1 1 7
1 0
17 7
"list_logCQN"
""
1 325 260 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
8 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 323 258 622 467
0

E
E
E

0 0
17 8
"list_logSHM"
""
1 640 260 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
9 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 638 258 942 467
0

E
E
E

0 0
19 26
"radio_logging"
""
1 102 480 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 100 478 234 532
3
T 
1
LANG:1 13 MAC Scheduler

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 3 CQN

0 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 3 SHM

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E "main(int button)
{
  if( button == 1) {
	  selectedDP = \"LOFAR_PermSW_CQN.logMsg\";
	} else if( button == 2) {
	  selectedDP = \"LOFAR_PermSW_SHM.logMsg\";
	} else {
	  selectedDP = \"LOFAR_PermSW_MACScheduler.logMsg\";
	}	
}" 0

25 29
"table_logging"
""
1 10 540 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
 8 538 942 662
EE 1 0 1 5 1 "time" 12 1 0 "s" 1
LANG:1 4 time
E
1
LANG:1 0 

150 "level" 5 1 0 "s" 1
LANG:1 5 level
E
1
LANG:1 0 

70 "source" 17 1 0 "s" 1
LANG:1 6 source
E
1
LANG:1 0 

200 "message" 90 1 0 "s" 1
LANG:1 7 message
E
1
LANG:1 0 

1000 "code" 17 1 0 "s" 1
LANG:1 4 code
E
1
LANG:1 0 

200 
16 16 "" 1 1
LANG:1 2 #1
8 30
1
LANG:1 84 -*-Arial-*-r-normal-*-13-*-100-100-*-*-iso8859-1|-13,0,0,0,404,0,0,0,0,0,0,0,0,Arial
0 ""
0 2 1 1 7
1 0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 0 ""
"objects\\nav_usr\\CS1\\MACScheduler_status_small.pnl" 247 335 T 29 1 0 1 -227 -53
0
0