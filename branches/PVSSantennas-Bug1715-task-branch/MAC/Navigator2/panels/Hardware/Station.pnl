V 11
3
LANG:1 12 antennaField
LANG:6 8 (NoName)
LANG:30 8 (NoName)
PANEL,-1 -1 1013 750 N "_3DFace" 0
"main()
{     
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");
  
  baseDP=g_currentDatapoint;
  
  if (navFunct_getRingFromStation(sysName) == \"Core\") {
    isCore=true;
    isRemote=false;
    isEurope=false;
  } else if(navFunct_getRingFromStation(sysName) == \"Remote\") {
    isCore=false;
    isRemote=true;
    isEurope=false;
  } else {
    isCore=false;
    isRemote=false;
    isEurope=true;
  }
  strPanelName    = \"antennaField\";
  strModuleName   = myModuleName();   
  
  // get PanelSize to determine scaling and offsets
  if ( panelSize( \"\" , mainpanel_horSize , mainpanel_vertSize) != 0 ) {
    LOG_FATAL(\"Station.pnl:initialize|Error: couldn't define the size of the mainPanel : \" + strPanelName);
  } else {
    calcViewboxSize();
  

    
    // get all dps from the type AntennaPattern
    // each DP represents a different type of Antennas
    // we need the lot to give a pulldown window where the kind of 
    // representation can be chosen.
    //
    // The first found will be drawn and will be the default choice.    

    bool fill=true;
    for (int i=0; i<=1;i++) {
      if (dpConnect(\"updatePositions\",fill,sysName+\"LOFAR_PIC_StationInfo.\"+arrayList.text(i)+\".centerX\",
                                       sysName+\"LOFAR_PIC_StationInfo.\"+arrayList.text(i)+\".centerY\",
                                       sysName+\"LOFAR_PIC_StationInfo.\"+arrayList.text(i)+\".centerZ\",
                                       sysName+\"LOFAR_PIC_StationInfo.N_RSPBoards\",        
                                       sysName+\"LOFAR_PIC_StationInfo.N_TBBoards\",
                                       sysName+\"LOFAR_PIC_StationInfo.N_LBAS\",
                                       sysName+\"LOFAR_PIC_StationInfo.N_HBAS\",
                                       sysName+\"LOFAR_PIC_StationInfo.HBA_Split\",         
                                       sysName+\"LOFAR_PIC_StationInfo.wide_LBAS\",
                                       sysName+\"LOFAR_PIC_StationInfo.\"+arrayList.text(i)+\".centerX:_online.._invalid\") == -1) {
        LOG_DEBUG(\"station.pnl:main| couldn't connect to \"+sysName+\"LOFAR_PIC_StationInfo.\"+arrayList.text(i)+\".centerX \"+ getLastError());
      }  

      if (fill) {
        fill=false;
      }
    }
  }
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"Station.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"Station.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    redraw(arrayList.text(arrayList.number()));
    return;
  } else if (actionString[1] == \"DistChanged\") {
    // for dist system bound hardware only, if the distsystem went offline we need to replace 
    // the screen with a broken connection screen.
    if (!g_initializing) {
    
      // check if this syst is in the connectionlist and down
      int iPos=dynContains(g_connections[\"NAME\"],sysName);
      if (iPos > 0) {
        if (!g_connections[\"UP\"][iPos]) {
          navPanel_setEvent(\"invalid DP\",\"ChangePanel\");
        }
      }
    }
    return;
  }
}

void updatePositions(string dp1, float cX,
                     string dp2, float cY,
                     string dp3, float cZ,
                     string dp4, int nrsp,
                     string dp5, int ntbb,
                     string dp6, int nlbas,
                     string dp7, int nhbas,
                     string dp8, bool hbasplit,
                     string dp9, bool widelbas,
                     string dp10, bool invalid) {
  
  
  
  // Check if the update concerns the current view
  string txt=arrayList.text(arrayList.number());
  
  if (strpos(dp1,txt) < 0) {    //not found match
    return;
  }
  
  NRSP=nrsp;         
  NTBB=ntbb;         
  NLBA=nlbas;         
  NHBA=nhbas;         
  HBASplit=hbasplit;         
  WideLBAs=widelbas;
  
  dpGet(sysName+\"LOFAR_PIC_StationInfo.HBA.HBA0.rotation\",HBA0Angle);
  if (isCore) {
    dpGet(sysName+\"LOFAR_PIC_StationInfo.HBA.HBA1.rotation\",HBA1Angle);
  } else {
    HBA1Angle=0;
  }
  
  string dpt = txt+\"Antenna\";
  dyn_string X=dpNames(sysName+\"LOFAR_PIC_\"+txt+\"*.common.deltaX;\",dpt);
  dyn_string Y=dpNames(sysName+\"LOFAR_PIC_\"+txt+\"*.common.deltaY;\",dpt);
  dyn_string Z=dpNames(sysName+\"LOFAR_PIC_\"+txt+\"*.common.deltaZ;\",dpt);
 
 /*  dyn_string X=unsortX;
  dyn_string Y=unsortY;
  dyn_string Z=unsortZ;
  
  // since we have Antenna's with 1 digit and 2 digits we need to resort the dynstrings here, otherwise we get them as:
  // HBA0 HBA1 HBA10 HBA11-HBA19 HBA 2 HBA 20 etc
  //
  
  for (int i=1; i<= dynlen(unsortX);i++) {
    string ant = strsplit(unsortX[i],\":.\" )[2];
    int idx = substr(ant,3);
    X[idx+1]=unsortX[i];
    Y[idx+1]=unsortY[i];
    Z[idx+1]=unsortZ[i];         
  }

  */
  
        
  // found match, save found strings and redraw screen
  
  centerX = cX;
  centerY = cY;
  centerZ  = cZ;
  dpGet(X,antennaOffsetsX);
  dpGet(Y,antennaOffsetsY);
  dpGet(Z,antennaOffsetsZ);
  

  
  redraw(txt);
}
" 0
 E E E E 1 0 0 0  20 20
""0  1
E "#uses \"navPanel.ctl\"

string baseDP=\"\";
bool isCore=false;
bool isRemote=false;
bool isEurope=false;
int mainpanel_midX;
int mainpanel_midY;
dyn_string refNames;
dyn_string arrays;
int mainpanel_horSize; 
int mainpanel_vertSize;
int symbolSize=44;
float zoomFactor=1;
int   shiftValue=25;
int   shiftFactorX=0;
int   shiftFactorY=0;

int NRSP=-1;
int NTBB=-1;
int NLBA=-1;
int NHBA=-1;
bool HBASplit=false;
bool WideLBAs=false;


float centerX;
float centerY;
float centerZ;
dyn_float antennaOffsetsX;
dyn_float antennaOffsetsY;
dyn_float antennaOffsetsZ;
float HBA0Angle=0;
float HBA1Angle=0;

string strPanelName;
string strModuleName;

void clearRefNames() {
  // remove all symbols because new ones will be added
  for (int i=1; i <= dynlen(refNames); i++) {
    removeSymbol(strModuleName,\"\",refNames[i]);
  }
  dynClear(refNames);
}

void calcViewboxSize() {
    mainpanel_midX = floor( (mainpanel_horSize/2)-(symbolSize/2) );
    mainpanel_midY = floor( (mainpanel_vertSize/2)-(symbolSize/2) );
}

void redraw(string mode) {
  
  float maxXOffsetValue=1.;
  float maxYOffsetValue=1.;
  float expandFactorX;
  float expandFactorY;
  int   xPos_AddSymbol;
  int   yPos_AddSymbol;
  string addPanelName;
  float angle=0;

  
  navFunct_clearGlobalLists();
  
  g_stationList[1] = navFunct_bareDBName(sysName);
  
  LOG_DEBUG(\"Station.pnl:redraw|Mode: \"+mode);
  if (strpos(mode,\"LBA\") > -1) {
    addPanelName    = \"objects/Hardware/Station_LBA.pnl\";
    angle=0;
  } else if (strpos(mode,\"HBA\") > -1) {
    addPanelName    = \"objects/Hardware/Station_HBA.pnl\";
    angle=HBA0Angle;
  }
  
        
  if (dynlen(refNames) > 0) {
    clearRefNames();
  }
   
  // determine max values and calculate scaling factors
  for (int i=1; i<= dynlen(antennaOffsetsX); i++) { 
    if ( maxXOffsetValue < fabs(antennaOffsetsX[i]) ) maxXOffsetValue = fabs(antennaOffsetsX[i]);
    if ( maxYOffsetValue < fabs(antennaOffsetsY[i]) ) maxYOffsetValue = fabs(antennaOffsetsY[i]);
  }
  
  
  LOG_DEBUG(\"Station.pnl:redraw|mainpanel_midX: \"+mainpanel_midX);
  LOG_DEBUG(\"Station.pnl:redraw|mainpanel_midY: \"+mainpanel_midY);
  LOG_DEBUG(\"Station.pnl:redraw|maxXOffsetValue: \"+maxXOffsetValue);
  LOG_DEBUG(\"Station.pnl:redraw|maxYOffsetValue: \"+maxYOffsetValue);
  
  expandFactorX = (floor(mainpanel_midX / maxXOffsetValue))*zoomFactor;
  expandFactorY = (floor(mainpanel_midY / maxYOffsetValue))*zoomFactor;
  
  LOG_DEBUG(\"Station.pnl:redraw|expandFactorX: \"+expandFactorX);
  LOG_DEBUG(\"Station.pnl:redraw|expandFactorY: \"+expandFactorY);
  
  // To make the field a bit more square we will multiply all by the smallest expandfactor
  if (expandFactorX > expandFactorY) {
    expandFactorX=expandFactorY;
  } else {
    expandFactorY=expandFactorX;
  }

  LOG_DEBUG(\"Station.pnl:redraw|Final expandfactors: \" + expandFactorX+\" \"+ expandFactorY);
  
  // set the hardware selectable items
  // For this panel the Antenna's in a choosen layout should be selectable 
  
  // Replace the X & Y grid lines to the calculated center 
  Yaxis.foreCol(\"STD_windows_available\");
  Xaxis.foreCol(\"STD_windows_available\");
  int xval=mainpanel_midX+shiftFactorX;
  int yval=mainpanel_midY+shiftFactorY;
  
  Yaxis.position(xval , mainpanel_horSize );
  Xaxis.position(0              , yval    );
  
  //  now start adding symbols to panel
  int ref =   1;
  for (int i = 1; i <= dynlen(antennaOffsetsX); i++ ) {
    int XRCU;
    int YRCU;
    if (i-1 < NRSP*8/2) {
      XRCU = 2 * (i-1);
      YRCU = XRCU+1;
    } else {
      XRCU = 2*i - NRSP*8;
      YRCU = 2*i-1 - NRSP*8;
    }
      
    if (isCore && strpos(mode,\"HBA\") > -1) {
      if (i > 24) angle=HBA1Angle;
    }

      string xDP=baseDP+\"_PIC_Cabinet\"+navFunct_receiver2Cabinet(XRCU)+\"_Subrack\"+
               navFunct_receiver2Subrack(XRCU)+\"_RSPBoard\"+navFunct_receiver2RSP(XRCU)+\"_RCU\"+XRCU;
    string yDP=baseDP+\"_PIC_Cabinet\"+navFunct_receiver2Cabinet(YRCU)+\"_Subrack\"+
               navFunct_receiver2Subrack(YRCU)+\"_RSPBoard\"+navFunct_receiver2RSP(YRCU)+\"_RCU\"+YRCU;
    if (i-1 < NRSP*8/2) {
//      dynAppend(g_RCUList,XRCU);
//      dynAppend(g_RCUList,YRCU);
      dynAppend(g_HBAList,navFunct_receiver2HBA(XRCU));
    }
    refNames[ref]=\"ant\"+(ref);
    xPos_AddSymbol = (mainpanel_midX+shiftFactorX) + (antennaOffsetsX[i] * expandFactorX);
    yPos_AddSymbol = (mainpanel_midY+shiftFactorY) - (antennaOffsetsY[i] * expandFactorY);
      
    if (  addSymbol(  strModuleName,                   // Stay in this modul
                                  \"\",                  // Name of this panel
		      addPanelName,                    // Panel to add
		      refNames[ref],                     // Ref of the addedPanel
		      makeDynString( \"$aNr:\" + (i-1) ,     // Define all $values
		                     \"$aX:\" + antennaOffsetsX[i]  ,    
		                     \"$aY:\" + antennaOffsetsY[i]  ,
		                     \"$aZ:\"  + antennaOffsetsZ[i]),                  // of particular addedpanel
		      xPos_AddSymbol,                  // Xpos of the AddedSymbol
		      yPos_AddSymbol,                  // Ypos of the AddedSymbol
		      angle,                           // angle
		      1    ,1                          // zoomX , zoomY
        ) < 0 ) {
	  LOG_ERROR(\"Station.pnl:redraw|Error Appending antenna : \" + i + \" in this panel.\");
          }
    ref++;
  }
 
  // trigger that the panel values are calculated and ready
  dynClear(highlight);
  dynClear(strHighlight);
  
  // set panel to ready
  g_objectReady=true;
  
  navPanel_setEvent(\"Station.pnl\",\"Update\");
}

void updateField() {
  
  // Check if the update concerns the current view
  string txt= arrayList.text(arrayList.number());

  string dpt=txt+\"Antenna\";
  dyn_string unsortX=dpNames(sysName+\"LOFAR_PIC_\"+txt+\"*.common.deltaX;\",dpt);
  dyn_string unsortY=dpNames(sysName+\"LOFAR_PIC_\"+txt+\"*.common.deltaY;\",dpt);
  dyn_string unsortZ= dpNames(sysName+\"LOFAR_PIC_\"+txt+\"*.common.deltaZ;\",dpt);
  dyn_string X=unsortX;
  dyn_string Y=unsortY;
  dyn_string Z=unsortZ;
               
  /*
  // since we have Antenna's with 1 digit and 2 digits we need to resort the dynstrings here, otherwise we get them as:
  // HBA0 HBA1 HBA10 HBA11-HBA19 HBA 2 HBA 20 etc
  //
  
  for (int i=1; i<= dynlen(unsortX);i++) {
    string ant = strsplit(unsortX[i],\":.\" )[2];
    int idx = substr(ant,3);
    X[idx+1]=unsortX[i];
    Y[idx+1]=unsortY[i];
    Z[idx+1]=unsortZ[i];         
  }
  */
    

  
  string field=sysName+\"LOFAR_PIC_StationInfo.\"+txt;
  if (dpExists(field+\".centerX:_online.._value\")) {
    // found match, save found strings and redraw screen
    dpGet(field+\".centerX:_online.._value\",centerX,
          field+\".centerY:_online.._value\",centerY,
          field+\".centerZ:_online.._value\",centerZ);
    dpGet(X,antennaOffsetsX);          
    dpGet(Y,antennaOffsetsY);          
    dpGet(Z,antennaOffsetsZ);
    dpGet(sysName+\"LOFAR_PIC_StationInfo.N_RSPBoards\",NRSP);         
    dpGet(sysName+\"LOFAR_PIC_StationInfo.N_TBBoards\",NTBB);         
    dpGet(sysName+\"LOFAR_PIC_StationInfo.N_LBAS\",NLBA);         
    dpGet(sysName+\"LOFAR_PIC_StationInfo.N_HBAS\",NHBA);         
    dpGet(sysName+\"LOFAR_PIC_StationInfo.HBA_Split\",HBASplit);         
    dpGet(sysName+\"LOFAR_PIC_StationInfo.wide_LBAS\",WideLBAs);
 
    redraw(txt);
  } else {
    LOG_ERROR(\"Station.pnl:updateField|Error, couldn't find:\"+field+\".centerOX:_online.._value\");
  }
}

" 0
 2
"CBRef" "1"
"EClose" E
""
NC
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
4 1
"Yaxis"
""
1 100 1250 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
1 0 0 0 0 0
E E E
0
3
LANG:1 0 
LANG:6 0 
LANG:30 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E  100 1000 100 1
4 2
"Xaxis"
""
1 249 100 E E E 1 E 1 E N "_WindowText" E N {255,255,255} E E
 E E
2 0 0 0 0 0
E E E
0
3
LANG:1 0 
LANG:6 0 
LANG:30 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E  0 100 1499 100
2 26
"PRIMITIVE_TEXT1"
""
1 796 5 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
11 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 796 5 869 18
0 2 2 "0s" 0 0 0 192 0 0  796 5 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 13 Select Array:
1 167 5 "" 2190
0
1 168 5 "" 2188
0
1 169 5 "86" 1
0
1 170 5 "" 2192
0
19 53
"arrayList"
""
1 889 1 E E E 1 E 1 E N "_3DText" E N "_3DFace" E E
 E E
14 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  887 -1 951 43
2
T 
1
LANG:1 3 HBA

1 
1
LANG:1 0 
E E
0 0 0 0 0
T 
1
LANG:1 3 LBA

0 
1
LANG:1 0 
E E
0 0 0 0 0
1
E "main(int button)
{
  zoomFactor=1;
  shiftValue=25;
  shiftFactorX=0;
  shiftFactorY=0;
  setValue(\"shift_value\",\"text\",shiftValue);
  updateField();
}" 0

13 80
"zoomOut"
""
1 872 40 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
15 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  870 38 890 58

T 
1
LANG:1 1 -
"main()
{
  zoomFactor/=2.0;
  string t=arrayList.text(arrayList.number());
  redraw(t);   
}" 0
 E E E
13 107
"zoomIn"
""
1 794 40 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
17 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  902 38 922 58

T 
1
LANG:1 1 +
"main()
{
  zoomFactor*=2.0;
  string t=arrayList.text(arrayList.number());
  redraw(t);  
}" 0
 E E E
2 108
"PRIMITIVE_TEXT2"
""
1 931 40 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
18 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 931 40 962 53
0 2 2 "0s" 0 0 0 192 0 0  931 40 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 4 Zoom
13 136
"shift_down"
""
1 578 59 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
20 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  886 87 906 107

P 
4294967295
"pictures/down_en.gif"
1
LANG:1 12 PUSH_BUTTON1
"main()
{
  shiftFactorY+=shiftValue;
  string t=arrayList.text(arrayList.number());
  redraw(t);
}" 0
 E E E
13 137
"shift_up"
""
1 888 57 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
22 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  886 55 906 75

P 
4294967295
"pictures/up_en.gif"
1
LANG:1 12 PUSH_BUTTON1
"main()
{
  shiftFactorY-=shiftValue;
  string t=arrayList.text(arrayList.number());
  redraw(t);
}" 0
 E E E
13 138
"shift_left"
""
1 872 73 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
24 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  870 71 890 91

P 
4294967295
"pictures/left_en.gif"
1
LANG:1 12 PUSH_BUTTON1
"main()
{
  shiftFactorX-=shiftValue;
  string t=arrayList.text(arrayList.number());
  redraw(t);  
}" 0
 E E E
13 139
"shift_right"
""
1 904 73 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
26 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  902 71 922 91

P 
4294967295
"pictures/right_en.gif"
1
LANG:1 12 PUSH_BUTTON1
"main()
{
  shiftFactorX+=shiftValue;
  string t=arrayList.text(arrayList.number());
  redraw(t);  
}" 0
 E E E
13 140
"PUSH_BUTTON5"
""
1 888 73 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
28 0 0 0 0 0
E E E
0
1
LANG:1 0 

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  886 71 906 91

P 
4294967295
"pictures/point_en.GIF"
1
LANG:1 12 PUSH_BUTTON1
"main()
{
  shiftFactorX=0;
  shiftFactorY=0;
  string t=arrayList.text(arrayList.number());
  redraw(t);
}" 0
 E E E
14 141
"shift_value"
""
1 940 71 E E E 1 E 1 E N "_WindowText" E N "_Window" E E
 E E
29 0 0 0 0 0
E E E
0
1
LANG:1 31 Give the shift value to be used

1
"textChangedCB" "main(string newText)
{
  int val=0;
  getValue(\"\",\"text\",val);
  if (shiftValue+val > mainpanel_midX || 
      shiftValue+val > mainpanel_midY) {
    setValue(\"\",\"text\",shiftValue);
  } else {
    shiftValue+=val;
  }
}"
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  938 69 991 90
3 "0d" 0 0 0 1 0 -1  E "main()
{
  setValue(\"\",\"text\",shiftValue);
}" 0
 E
13 143
"originalSize"
""
1 888 40 E E E 1 E 1 E N "_ButtonText" E N "_Button" E E
 E E
32 0 0 0 0 0
E E E
0
1
LANG:1 26 set zoomsize to 100% again

0
1
LANG:1 33 MS Shell Dlg,-1,11,5,50,0,0,0,0,0
0  886 38 906 58

P 
4294967295
"pictures/point_en.GIF"
1
LANG:1 12 PUSH_BUTTON1
"main()
{
  zoomFactor=1;
  string t=arrayList.text(arrayList.number());
  redraw(t);  
}" 0
 E E E
2 144
"PRIMITIVE_TEXT4"
""
1 931 58 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
34 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 2 1 E U  1 E 931 58 993 71
0 2 2 "0s" 0 0 0 192 0 0  931 58 1
1
LANG:1 33 MS Shell Dlg,-1,11,5,75,0,0,0,0,0
0 1
LANG:1 11 ShiftFactor
0
LAYER, 1 
1
LANG:1 6 Layer2
1 145 2 "" 40
0
1 146 2 "" 41
0
1 147 2 "" 42
0
1 148 2 "" 43
0
1 149 2 "" 44
0
1 150 2 "" 45
0
1 151 2 "" 46
0
1 152 2 "" 47
0
1 153 2 "" 48
0
1 154 2 "" 49
0
1 155 2 "" 50
0
1 156 2 "" 51
0
1 157 2 "" 52
0
1 158 2 "" 53
0
1 159 2 "" 54
0
1 160 2 "" 55
0
1 161 2 "" 56
0
1 162 2 "" 57
0
1 163 2 "" 58
0
1 164 2 "" 59
0
1 165 2 "" 60
0
1 166 2 "" 61
0
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 2 "PANEL_REF3" -1
"objects\\compass.pnl" 212 350 T 12 0.742857142857143 0 0.752688172043011 -29.7142857142857 -52.6881720430108
0
3 5 "PANEL_REF6" -1
"objects\\Hardware\\Station_Cabinet_top.pnl" 298 258 T 13 1 0 1 40 -100
0
0
