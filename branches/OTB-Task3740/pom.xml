<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <name>Lofar OTB :: Parent</name>
  <description>Object Tree Browser Client/Server - Parent</description>

  <parent>
    <groupId>nl.astron</groupId>
    <artifactId>parent</artifactId>
    <version>1.2.0</version>
  </parent>

  <groupId>nl.astron.lofar.sas.otb</groupId>
  <artifactId>parent</artifactId>
<version>1.8.0</version>
  <packaging>pom</packaging>


  <!-- Properties that can be used throughout the POM as a substitution, 
    and are used as filters in resources if enabled. -->
  <properties>
    <lofar.lib.version>1.8.0-SNAPSHOT</lofar.lib.version>
  </properties>


  <!-- Specification for the SCM used by the project, such as CVS, Subversion, etc. -->
  <scm>
    <connection>scm:svn:http://svn.astron.nl/LOFAR/tags/Maven-Release-nl.astron.lofar.sas.otb.parent-1.8.0</connection>
    <developerConnection>scm:svn:https://svn.astron.nl/LOFAR/tags/Maven-Release-nl.astron.lofar.sas.otb.parent-1.8.0</developerConnection>
  </scm>


  <!-- Information required to build a project. -->
  <build>

    <!-- Default plugin information to be made available for reference by 
      projects derived from this one. This plugin configuration will not be resolved 
      or bound to the lifecycle unless referenced. Any local configuration for 
      a given plugin will override the plugin's entire definition here. -->
    <pluginManagement>
      <plugins>

        <!-- This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <versionRange>[1.0-alpha-7,)</versionRange>
                    <goals>
                      <goal>javah</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                      <goal>unpack</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>


  <!-- The modules (sometimes called subprojects) to build as a part of this 
    project. Each module listed is a relative path to the directory containing 
    the module. -->
  <modules>
    <module>jRSP</module>
    <module>jOTDB3</module>
    <module>jParmFacade</module>
  </modules>


  <!-- Default dependency information for projects that inherit from this 
    one. The dependencies in this section are not immediately resolved. Instead, 
    when a POM derived from this one declares a dependency described by a matching 
    groupId and artifactId, the version and other values from this section are 
    used for that dependency if they were not already specified. -->
  <dependencyManagement>
    <dependencies>

      <!-- Child dependencies, childs use the same group-ID and version by default. -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>jRSP</artifactId>
        <version>${project.version}</version>
      </dependency>



      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>jParmFacade</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>jOTDB3</artifactId>
        <version>${project.version}</version>
      </dependency>


      <!-- Import the group 'nl.astron.lofar.lib' -->
      <dependency>
        <groupId>nl.astron.lofar.lib</groupId>
        <artifactId>parent</artifactId>
        <version>${lofar.lib.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- External dependencies -->
      <dependency>
        <groupId>org.swinglabs</groupId>
        <artifactId>swing-layout</artifactId>
        <version>1.0.3</version>
      </dependency>

      <dependency>
        <groupId>org.netbeans.external</groupId>
        <artifactId>AbsoluteLayout</artifactId>
        <version>RELEASE72</version>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <!-- The lists of the remote repositories for discovering dependencies 
    and extensions. -->
  <repositories>

    <!-- Extra maven repository for the Netbeans AbsoluteLayout dependency -->
    <repository>
      <id>netbeans</id>
      <name>NetBeans IDE Repos</name>
      <url>http://bits.netbeans.org/maven2</url>
    </repository>

  </repositories>

</project>
