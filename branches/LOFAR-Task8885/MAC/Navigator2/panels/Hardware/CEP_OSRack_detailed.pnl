V 11
1
LANG:1 7 Station
PANEL,-1 -1 1200 823 N "_3DFace" 0
"main()
{
  // Initialise the Panel
  navPanel_initPanel(\"fw_viewBox\");

  baseDP         = g_currentDatapoint;
  
  dyn_string dpAr= strsplit(dpSubStr(g_currentDatapoint,DPSUB_DP),\"_\");
  if (strpos(dpAr[dynlen(dpAr)],\"OSRack\") > -1) {
    rNr = substr(dpAr[dynlen(dpAr)],6,strlen(dpAr[dynlen(dpAr)]));
  } else {
    LOG_ERROR(\"CEP_OSRack_detailed.pnl:Initialize|No OSRack found in currentDatapoint.\");
  }
  
  if (rNr == 4)  {
    setValue(\"locus4\",\"visible\",\"false\");  
    setValue(\"locus5\",\"visible\",\"false\");  
    setValue(\"locus6\",\"visible\",\"false\");  
    setValue(\"locus7\",\"visible\",\"false\");  
    setValue(\"locus8\",\"visible\",\"false\");  
    setValue(\"locus9\",\"visible\",\"false\");  
    setValue(\"locus10\",\"visible\",\"false\");  
    setValue(\"locus11\",\"visible\",\"false\");  
  }
  
  setValue(\"OSRack\", \"text\", \"OSRack: \" + rNr);
  
  // pass baseDP to selfstate Object to work with
  setValue(\"selfState.light\",\"toolTipText\",baseDP);

  // connect for childUpdates
  showChildState(baseDP);
  // connect for selfUpdates
  showSelfState(baseDP);
  
  reload();
}

void prepareHardwareList() {
  // set the hardware selectable items
  dyn_dyn_anytype tab;
  int z;
  
    dynAppend(g_OSRackList,rNr);
  
  // For this panel midplanes should be selectable so we get them for the treelist
  
  dpQuery(\"SELECT '_original.._value' FROM '\"+baseDP+\"_*.status.state' REMOTE '\"+sysName+\"' WHERE _DPT=\\\"LocusNode\\\" \", tab);
  LOG_TRACE(\"CEP_OSRack_detailed.pnl:prepareHardwareList|tab: \"+tab);
  
  dyn_string aDS=navFunct_getDynString(tab, 2,1);
  dynSortAsc(aDS);
      
  dynAppend(g_stationList,navFunct_bareDBName(sysName));
  
  for(z=1;z<=dynlen(aDS);z++){
    
    // strip .status.state and systemname from result
    string aS = dpSubStr(aDS[z],DPSUB_SYS_DP);

    // Remainder should be *OSRack?_LocusNode? combinations, split on _ 
    dyn_string spl=strsplit(aS,\"_\");
    

    
    //get Locusnode
    string locusnode = spl[dynlen(spl)];
    strreplace(locusnode,\"LocusNode\",\"\");
    int s= locusnode;

    dynAppend(g_locusNodeList,s);
  }
  
}

//
// Callback for dpConnect to action point.
// If there is an action required this point will tell so
//
void doAction(string aDP, string anAction) {
  LOG_DEBUG(\"CEP_OSRack_detailed.pnl:doAction| Action required. found: \" + anAction);
  // split action into essentials
  dyn_string actionString;
  if (!navFunct_splitAction(anAction,actionString)) {
    return;
  }
  
  LOG_DEBUG(\"CEP_OSRack_detailed.pnl:doAction|found actionString: \" + actionString);
  
  // Reload
  if (actionString[1] == \"Reload\") {
    reload();
  } else if (actionString[1] == \"DistChanged\") {
    // for dist system bound hardware only, if the distsystem went offline we need to replace 
    // the screen with a broken connection screen.
    if (!g_initializing) {
    
      // check if this syst is in the connectionlist and down
      int iPos=dynContains(g_connections[\"NAME\"],sysName);
      if (iPos > 0) {
        if (!g_connections[\"UP\"][iPos]) {
          navPanel_setEvent(\"invalid DP\",\"ChangePanel\");
        }
      }
    }
    return;
  }
}

void reload() {
  
  navFunct_clearGlobalLists();
  

  // set the hardware selectable items for this screen
  prepareHardwareList();
  
  // set panel to ready
  g_objectReady=true;
 
  
  // trigger that the panel values are calculated and ready
  navPanel_setEvent(\"CEP_OSRack_detailed.pnl\",\"Update\");

}
" 0
 E E E E 1 -1 -1 0  188 128
""0  1
E "#uses \"navPanel.ctl\"
string      baseDP         = \"\";
int rNr=-1;
bool   bDoubleClicked  = false;


// routine for single mouse click
void click() {
  // set delay in case double click was meant
  delay(0, 100); 
  if (!bDoubleClicked) {
    navPanel_setEvent(\"OSRack\"+rNr,\"EventClick\");
  }
}

// routine for double mouse click
void dblClick() {
  // indicate this is a doubleClick
  bDoubleClicked = true;   
  
  if (dpExists(baseDP) ) {
    LOG_DEBUG(\"CEP_OSRack_detailed.pnl:DoubleClick|Setting currentDatapoint from : \"+g_currentDatapoint+\" to \"+baseDP);
    g_currentDatapoint=baseDP;
    navPanel_setEvent(\"OSRack\"+rNr,\"ChangePanel\");  
  }
  
  // set delay to avoid click event will be triggered
  delay(0, 500);
  bDoubleClicked = false;  
}

// routine for right mouse click
void rClick() {
  navPanel_setEvent(\"OSRack\"+rNr,\"EventRightClick\");
}
" 0
 2
"CBRef" "1"
"EClose" E
""
1
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
1
LANG:1 6 Layer1
6 725
"OSRackHighlight"
""
1 30 120 E E E 1 E 0 E N "_Transparent" E N "Lofar_highLight" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

100 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
"main()
{
  dpConnect( \"OSRackCallback\",true,DPNAME_NAVIGATOR + g_navigatorID +\".objectTrigger\" );
}

void OSRackCallback(string dp1, bool aTrig) {
  
  LOG_DEBUG(\"CEP_OSRack_detailed.pnl:OSRackCallback| ObjectTrigger Callback on: \"+dp1+\" trigger: \"+aTrig);
  LOG_DEBUG(\"CEP_OSRack_detailed.pnl:OSRackCallback|Found highlight : \" + highlight + \" Looking for: OSRack\" + rNr);
  bool bHighlight=false;
  if (dynContains(highlight,\"OSRack\"+rNr)) {
    bHighlight=true;
  }
  LOG_DEBUG(\"CEP_OSRack_detailed.pnl:OSRackCallback|Highlight request: \"+bHighlight);
  OSRackHighlight.visible = bHighlight;  
}" 0
 "main()
{
  click();
}" 0
 0 1 1 2 1 E 13.07680671871574 -8.738749555891044e-019 -1.134232180288372e-017 2.015018457272063 189.8478992192638 45.92490771363968 1 E 15 5 37 287
6 675
"childStateBorder"
""
1 15 418 E E E 1 E 1 E N "_WindowText" E N "_3DFace" E E
 "main()
{
  rClick();
}" 0
 "main()
{
  dblClick();
}" 0

86 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E "main()
{
  click();
}" 0
 0 2 1 0 1 E 1 0 1.417721518987342 0 -152.6582278481012 1 E 390 150 670 545
1 726 70 "" 1
0
2 674
"OSRack"
""
1 425.166666666668 71.99999999999997 E E E 1 E 1 E N "_WindowText" E N "_Transparent" E E
 E E
84 0 0 0 0 0
E E E
0
1
LANG:1 0 

1
"dashclr"N "_Transparent"
E E 0 1 1 0 1 E U  0 E 427.166666666668 71.99999999999997 466 88
0 2 0 "0s" 0 0 0 192 0 0  427.166666666668 71.99999999999997 1
1
LANG:1 26 Arial,-1,13,5,69,0,0,0,0,0
0 1
LANG:1 5 aRack
1 727 71 "" 1
0
1 728 71 "" 0
0
1 729 71 "0" 1
0
1 730 71 "" 3
0
1 731 72 "" 1
0
1 732 72 "" 0
0
1 733 72 "0" 1
0
1 734 72 "" 3
0
1 735 73 "" 1
0
1 736 73 "" 0
0
1 737 73 "0" 1
0
1 738 73 "" 3
0
1 739 74 "" 1
0
1 740 74 "" 0
0
1 741 74 "0" 1
0
1 742 74 "" 3
0
1 743 75 "" 1
0
1 744 75 "" 0
0
1 745 75 "0" 1
0
1 746 75 "" 3
0
1 747 76 "" 1
0
1 748 76 "" 0
0
1 749 76 "0" 1
0
1 750 76 "" 3
0
1 751 77 "" 1
0
1 752 77 "" 0
0
1 753 77 "0" 1
0
1 754 77 "" 3
0
1 755 78 "" 1
0
1 756 78 "" 0
0
1 757 78 "0" 1
0
1 758 78 "" 3
0
1 759 79 "" 1
0
1 760 79 "" 0
0
1 761 79 "0" 1
0
1 762 79 "" 3
0
1 763 80 "" 1
0
1 764 80 "" 0
0
1 765 80 "0" 1
0
1 766 80 "" 3
0
1 767 81 "" 1
0
1 768 81 "" 0
0
1 769 81 "0" 1
0
1 770 81 "" 3
0
1 771 82 "" 1
0
1 772 82 "" 0
0
1 773 82 "0" 1
0
1 774 82 "" 3
0
0
LAYER, 1 
1
LANG:1 6 Layer2
0
LAYER, 2 
1
LANG:1 6 Layer3
0
LAYER, 3 
1
LANG:1 6 Layer4
0
LAYER, 4 
1
LANG:1 6 Layer5
0
LAYER, 5 
1
LANG:1 6 Layer6
0
LAYER, 6 
1
LANG:1 6 Layer7
0
LAYER, 7 
1
LANG:1 6 Layer8
0
3 70 "selfState" -1
"objects\\lofar_self_state.pnl" 284 264 T 82 1.13333333333333 0 1 69.13333333333429 -196
0
3 71 "locus0" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 180 T 87 1 0 1 0 -70
1
"$locusNr""0"
3 72 "locus1" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 210 T 88 1 0 1 0 -70
1
"$locusNr""1"
3 73 "locus2" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 240 T 89 1 0 1 0 -50.00000000000003
1
"$locusNr""2"
3 74 "locus3" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 270 T 90 1 0 1 0 -50.00000000000003
1
"$locusNr""3"
3 75 "locus4" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 310 T 91 1 0 1 0 -40.00000000000003
1
"$locusNr""4"
3 76 "locus5" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 330 T 92 1 0 1 0 -29.99999999999997
1
"$locusNr""5"
3 77 "locus6" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 360 T 93 1 0 1 0 -10.00000000000003
1
"$locusNr""6"
3 78 "locus7" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 390 T 94 1 0 1 0 -10.00000000000003
1
"$locusNr""7"
3 79 "locus8" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 420 T 95 1 0 1 0 9.999999999999972
1
"$locusNr""8"
3 80 "locus9" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 450 T 96 1 0 1 0 9.999999999999972
1
"$locusNr""9"
3 81 "locus10" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 480 T 97 1 0 1 0 30.00000000000003
1
"$locusNr""10"
3 82 "locus11" -1
"objects\\Hardware\\CEP_LocusNode_small.pnl" 270 510 T 98 1 0 1 0 29.99999999999997
1
"$locusNr""11"
0
