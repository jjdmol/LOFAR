#!/usr/bin/python
import unittest
from py.bbsfilesource import GSMBBSFileSource
from py.gsmparset import GSMParset
from py.pipeline import GSMPipeline
from py.gsmconnectionmanager import GSMConnectionManager
from tests.testlib import cleanup_db


class PipelineTest(unittest.TestCase):
    def setUp(self):
        cleanup_db(GSMConnectionManager(database='bug').get_connection())

    def test_load(self):
        pipeline = GSMPipeline(database='bug')
        parset = GSMParset('tests/pipeline1.parset')
        pipeline.run_parset(parset)
        self.assertEquals(parset.source_count, 4)
        res = pipeline.conn.exec_return("select count(*) from runningcatalog_fluxes;")
        self.assertEquals(res, 4)
        parset = GSMParset('tests/image1.parset')
        pipeline.run_parset(parset)
        self.assertEquals(parset.source_count, 2)
        res = pipeline.conn.exec_return("select count(*) from runningcatalog_fluxes;")
        self.assertEquals(res, 6)
        res = pipeline.conn.exec_return("select count(*) from runningcatalog where datapoints = 2;")
        self.assertEquals(res, 2)
        parset = GSMParset('tests/image2.parset')
        pipeline.run_parset(parset)
        self.assertEquals(parset.source_count, 2)
        res = pipeline.conn.exec_return("select count(*) from runningcatalog where datapoints = 1;")
        self.assertEquals(res, 4)


    #def tearDown(self):
    #    cleanup_db(GSMConnectionManager(database='bug').get_connection())
